[{"permalink": "reference/#mesh3d", "name": "mesh3d", "description": "Draws sets of triangles with coordinates given by three 1-dimensional arrays in `x`, `y`, `z` and (1) a sets of `i`, `j`, `k` indices (2) Delaunay triangulation or (3) the Alpha-shape algorithm or (4) the Convex-hull algorithm"}, {"permalink": "reference/#scattercarpet", "name": "scattercarpet", "description": "Plots a scatter trace on either the first carpet axis or the carpet axis with a matching `carpet` attribute."}, {"permalink": "reference/#scatterternary", "name": "scatterternary", "description": "Provides similar functionality to the *scatter* type but on a ternary phase diagram. The data is provided by at least two arrays out of `a`, `b`, `c` triplets."}, {"permalink": "reference/#surface", "name": "surface", "description": "The data the describes the coordinates of the surface is set in `z`. Data in `z` should be a {2D array}. Coordinates in `x` and `y` can either be 1D {arrays} or {2D arrays} (e.g. to graph parametric surfaces). If not provided in `x` and `y`, the x and y coordinates are assumed to be linear starting at 0 with a unit step. The color scale corresponds to the `z` values by default. For custom color scales, use `surfacecolor` which should be a {2D array}, where its bounds can be controlled using `cmin` and `cmax`."}, {"permalink": "reference/#sankey", "name": "sankey", "description": "Sankey plots for network flow data analysis. The nodes are specified in `nodes` and the links between sources and targets in `links`. The colors are set in `nodes[i].color` and `links[i].color`; otherwise defaults are used."}, {"permalink": "reference/#table", "name": "table", "description": "Table view for detailed data viewing. The data are arranged in a grid of rows and columns. Most styling can be specified for columns, rows or individual cells. Table is using a column-major order, ie. the grid is represented as a vector of column vectors."}, {"permalink": "reference/#contour", "name": "contour", "description": "The data from which contour lines are computed is set in `z`. Data in `z` must be a {2D array} of numbers. Say that `z` has N rows and M columns, then by default, these N rows correspond to N y coordinates (set in `y` or auto-generated) and the M columns correspond to M x coordinates (set in `x` or auto-generated). By setting `transpose` to *true*, the above behavior is flipped."}, {"permalink": "reference/#carpet", "name": "carpet", "description": "The data describing carpet axis layout is set in `y` and (optionally) also `x`. If only `y` is present, `x` the plot is interpreted as a cheater plot and is filled in using the `y` values. `x` and `y` may either be 2D arrays matching with each dimension matching that of `a` and `b`, or they may be 1D arrays with total length equal to that of `a` and `b`."}, {"permalink": "reference/#contourcarpet", "name": "contourcarpet", "description": "Plots contours on either the first carpet axis or the carpet axis with a matching `carpet` attribute. Data `z` is interpreted as matching that of the corresponding carpet axis."}, {"permalink": "reference/#area", "name": "area"}, {"permalink": "reference/#ohlc", "name": "ohlc", "description": "The ohlc (short for Open-High-Low-Close) is a style of financial chart describing open, high, low and close for a given `x` coordinate (most likely time). The tip of the lines represent the `low` and `high` values and the horizontal segments represent the `open` and `close` values. Sample points where the close value is higher (lower) then the open value are called increasing (decreasing). By default, increasing candles are drawn in green whereas decreasing are drawn in red."}, {"permalink": "reference/#heatmap", "name": "heatmap", "description": "The data that describes the heatmap value-to-color mapping is set in `z`. Data in `z` can either be a {2D array} of values (ragged or not) or a 1D array of values. In the case where `z` is a {2D array}, say that `z` has N rows and M columns. Then, by default, the resulting heatmap will have N partitions along the y axis and M partitions along the x axis. In other words, the i-th row/ j-th column cell in `z` is mapped to the i-th partition of the y axis (starting from the bottom of the plot) and the j-th partition of the x-axis (starting from the left of the plot). This behavior can be flipped by using `transpose`. Moreover, `x` (`y`) can be provided with M or M+1 (N or N+1) elements. If M (N), then the coordinates correspond to the center of the heatmap cells and the cells have equal width. If M+1 (N+1), then the coordinates correspond to the edges of the heatmap cells. In the case where `z` is a 1D {array}, the x and y coordinates must be provided in `x` and `y` respectively to form data triplets."}, {"permalink": "reference/#scattermapbox", "name": "scattermapbox", "description": "The data visualized as scatter point, lines or marker symbols on a Mapbox GL geographic map is provided by longitude/latitude pairs in `lon` and `lat`."}, {"permalink": "reference/#scatter3d", "name": "scatter3d", "description": "The data visualized as scatter point or lines in 3D dimension is set in `x`, `y`, `z`. Text (appearing either on the chart or on hover only) is via `text`. Bubble charts are achieved by setting `marker.size` and/or `marker.color` Projections are achieved via `projection`. Surface fills are achieved via `surfaceaxis`."}, {"permalink": "reference/#pointcloud", "name": "pointcloud", "description": "The data visualized as a point cloud set in `x` and `y` using the WebGl plotting engine."}, {"permalink": "reference/#scattergl", "name": "scattergl", "description": "The data visualized as scatter point or lines is set in `x` and `y` using the WebGl plotting engine. Bubble charts are achieved by setting `marker.size` and/or `marker.color` to a numerical arrays."}, {"permalink": "reference/#histogram", "name": "histogram", "description": "The sample data from which statistics are computed is set in `x` for vertically spanning histograms and in `y` for horizontally spanning histograms. Binning options are set `xbins` and `ybins` respectively if no aggregation data is provided."}, {"permalink": "reference/#pie", "name": "pie", "description": "A data visualized by the sectors of the pie is set in `values`. The sector labels are set in `labels`. The sector colors are set in `marker.colors`"}, {"permalink": "reference/#heatmapgl", "name": "heatmapgl", "description": "WebGL version of the heatmap trace type."}, {"permalink": "reference/#histogram2d", "name": "histogram2d", "description": "The sample data from which statistics are computed is set in `x` and `y` (where `x` and `y` represent marginal distributions, binning is set in `xbins` and `ybins` in this case) or `z` (where `z` represent the 2D distribution and binning set, binning is set by `x` and `y` in this case). The resulting distribution is visualized as a heatmap."}, {"permalink": "reference/#scattergeo", "name": "scattergeo", "description": "The data visualized as scatter point or lines on a geographic map is provided either by longitude/latitude pairs in `lon` and `lat` respectively or by geographic location IDs or names in `locations`."}, {"permalink": "reference/#box", "name": "box", "description": "In vertical (horizontal) box plots, statistics are computed using `y` (`x`) values. By supplying an `x` (`y`) array, one box per distinct x (y) value is drawn If no `x` (`y`) {array} is provided, a single box is drawn. That box position is then positioned with with `name` or with `x0` (`y0`) if provided. Each box spans from quartile 1 (Q1) to quartile 3 (Q3). The second quartile (Q2) is marked by a line inside the box. By default, the whiskers correspond to the box' edges +/- 1.5 times the interquartile range (IQR = Q3-Q1), see *boxpoints* for other options."}, {"permalink": "reference/#bar", "name": "bar", "description": "The data visualized by the span of the bars is set in `y` if `orientation` is set th *v* (the default) and the labels are set in `x`. By setting `orientation` to *h*, the roles are interchanged."}, {"permalink": "reference/#choropleth", "name": "choropleth", "description": "The data that describes the choropleth value-to-color mapping is set in `z`. The geographic locations corresponding to each value in `z` are set in `locations`."}, {"permalink": "reference/#candlestick", "name": "candlestick", "description": "The candlestick is a style of financial chart describing open, high, low and close for a given `x` coordinate (most likely time). The boxes represent the spread between the `open` and `close` values and the lines represent the spread between the `low` and `high` values Sample points where the close value is higher (lower) then the open value are called increasing (decreasing). By default, increasing candles are drawn in green whereas decreasing are drawn in red."}, {"permalink": "reference/#parcoords", "name": "parcoords", "description": "Parallel coordinates for multidimensional exploratory data analysis. The samples are specified in `dimensions`. The colors are set in `line.color`."}, {"permalink": "reference/#histogram2dcontour", "name": "histogram2dcontour", "description": "The sample data from which statistics are computed is set in `x` and `y` (where `x` and `y` represent marginal distributions, binning is set in `xbins` and `ybins` in this case) or `z` (where `z` represent the 2D distribution and binning set, binning is set by `x` and `y` in this case). The resulting distribution is visualized as a contour plot."}, {"permalink": "reference/#scatter", "name": "scatter", "description": "The scatter trace type encompasses line charts, scatter charts, text charts, and bubble charts. The data visualized as scatter point or lines is set in `x` and `y`. Text (appearing either on the chart or on hover only) is via `text`. Bubble charts are achieved by setting `marker.size` and/or `marker.color` to numerical arrays."}, {"permalink": "reference/#mesh3d-cmin", "name": "mesh3d > cmin", "description": "Has an effect only if `color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `color` array index, and if set, `cmax` must be set as well."}, {"permalink": "reference/#mesh3d-stream", "name": "mesh3d > stream", "description": "Properties for stream"}, {"permalink": "reference/#mesh3d-stream-token", "name": "mesh3d > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#mesh3d-stream-maxpoints", "name": "mesh3d > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#mesh3d-color", "name": "mesh3d > color", "description": "Sets the color of the whole mesh"}, {"permalink": "reference/#mesh3d-ycalendar", "name": "mesh3d > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#mesh3d-scene", "name": "mesh3d > scene", "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on."}, {"permalink": "reference/#mesh3d-visible", "name": "mesh3d > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#mesh3d-intensity", "name": "mesh3d > intensity", "description": "Sets the vertex intensity values, used for plotting fields on meshes"}, {"permalink": "reference/#mesh3d-xcalendar", "name": "mesh3d > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#mesh3d-contour", "name": "mesh3d > contour", "description": "Properties for contour"}, {"permalink": "reference/#mesh3d-contour-color", "name": "mesh3d > contour > color", "description": "Sets the color of the contour lines."}, {"permalink": "reference/#mesh3d-contour-width", "name": "mesh3d > contour > width", "description": "Sets the width of the contour lines."}, {"permalink": "reference/#mesh3d-contour-show", "name": "mesh3d > contour > show", "description": "Sets whether or not dynamic contours are shown on hover"}, {"permalink": "reference/#mesh3d-flatshading", "name": "mesh3d > flatshading", "description": "Determines whether or not normal smoothing is applied to the meshes, creating meshes with an angular, low-poly look via flat reflections."}, {"permalink": "reference/#mesh3d-colorbar", "name": "mesh3d > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#mesh3d-colorbar-yanchor", "name": "mesh3d > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#mesh3d-colorbar-showexponent", "name": "mesh3d > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#mesh3d-colorbar-showticklabels", "name": "mesh3d > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#mesh3d-colorbar-lenmode", "name": "mesh3d > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#mesh3d-colorbar-showticksuffix", "name": "mesh3d > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#mesh3d-colorbar-titlefont", "name": "mesh3d > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#mesh3d-colorbar-titlefont-family", "name": "mesh3d > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#mesh3d-colorbar-titlefont-color", "name": "mesh3d > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#mesh3d-colorbar-titlefont-size", "name": "mesh3d > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#mesh3d-colorbar-borderwidth", "name": "mesh3d > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#mesh3d-colorbar-nticks", "name": "mesh3d > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#mesh3d-colorbar-showtickprefix", "name": "mesh3d > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#mesh3d-colorbar-titleside", "name": "mesh3d > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#mesh3d-colorbar-outlinecolor", "name": "mesh3d > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#mesh3d-colorbar-tickprefix", "name": "mesh3d > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#mesh3d-colorbar-tickformat", "name": "mesh3d > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#mesh3d-colorbar-tickmode", "name": "mesh3d > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#mesh3d-colorbar-title", "name": "mesh3d > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#mesh3d-colorbar-ticks", "name": "mesh3d > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#mesh3d-colorbar-thickness", "name": "mesh3d > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#mesh3d-colorbar-bgcolor", "name": "mesh3d > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#mesh3d-colorbar-outlinewidth", "name": "mesh3d > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#mesh3d-colorbar-bordercolor", "name": "mesh3d > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#mesh3d-colorbar-xanchor", "name": "mesh3d > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#mesh3d-colorbar-separatethousands", "name": "mesh3d > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#mesh3d-colorbar-ticklen", "name": "mesh3d > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#mesh3d-colorbar-len", "name": "mesh3d > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#mesh3d-colorbar-ticksuffix", "name": "mesh3d > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#mesh3d-colorbar-tickcolor", "name": "mesh3d > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#mesh3d-colorbar-ticktext", "name": "mesh3d > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#mesh3d-colorbar-xpad", "name": "mesh3d > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#mesh3d-colorbar-tickvals", "name": "mesh3d > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#mesh3d-colorbar-tickfont", "name": "mesh3d > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#mesh3d-colorbar-tickfont-family", "name": "mesh3d > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#mesh3d-colorbar-tickfont-color", "name": "mesh3d > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#mesh3d-colorbar-tickfont-size", "name": "mesh3d > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#mesh3d-colorbar-tickwidth", "name": "mesh3d > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#mesh3d-colorbar-tick0", "name": "mesh3d > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#mesh3d-colorbar-tickangle", "name": "mesh3d > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#mesh3d-colorbar-dtick", "name": "mesh3d > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#mesh3d-colorbar-ypad", "name": "mesh3d > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#mesh3d-colorbar-exponentformat", "name": "mesh3d > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#mesh3d-colorbar-y", "name": "mesh3d > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#mesh3d-colorbar-x", "name": "mesh3d > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#mesh3d-colorbar-thicknessmode", "name": "mesh3d > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#mesh3d-showlegend", "name": "mesh3d > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#mesh3d-facecolor", "name": "mesh3d > facecolor", "description": "Sets the color of each face Overrides *color* and *vertexcolor*."}, {"permalink": "reference/#mesh3d-alphahull", "name": "mesh3d > alphahull", "description": "Determines how the mesh surface triangles are derived from the set of vertices (points) represented by the `x`, `y` and `z` arrays, if the `i`, `j`, `k` arrays are not supplied. For general use of `mesh3d` it is preferred that `i`, `j`, `k` are supplied. If *-1*, Delaunay triangulation is used, which is mainly suitable if the mesh is a single, more or less layer surface that is perpendicular to `delaunayaxis`. In case the `delaunayaxis` intersects the mesh surface at more than one point it will result triangles that are very long in the dimension of `delaunayaxis`. If *>0*, the alpha-shape algorithm is used. In this case, the positive `alphahull` value signals the use of the alpha-shape algorithm, _and_ its value acts as the parameter for the mesh fitting. If *0*,  the convex-hull algorithm is used. It is suitable for convex bodies or if the intention is to enclose the `x`, `y` and `z` point set into a convex hull."}, {"permalink": "reference/#mesh3d-customdata", "name": "mesh3d > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#mesh3d-vertexcolor", "name": "mesh3d > vertexcolor", "description": "Sets the color of each vertex Overrides *color*."}, {"permalink": "reference/#mesh3d-zcalendar", "name": "mesh3d > zcalendar", "description": "Sets the calendar system to use with `z` date data."}, {"permalink": "reference/#mesh3d-delaunayaxis", "name": "mesh3d > delaunayaxis", "description": "Sets the Delaunay axis, which is the axis that is perpendicular to the surface of the Delaunay triangulation. It has an effect if `i`, `j`, `k` are not provided and `alphahull` is set to indicate Delaunay triangulation."}, {"permalink": "reference/#mesh3d-type", "name": "mesh3d > type", "description": "Properties for type"}, {"permalink": "reference/#mesh3d-opacity", "name": "mesh3d > opacity", "description": "Sets the opacity of the surface."}, {"permalink": "reference/#mesh3d-legendgroup", "name": "mesh3d > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#mesh3d-autocolorscale", "name": "mesh3d > autocolorscale", "description": "Has an effect only if `color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#mesh3d-hoverlabel", "name": "mesh3d > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#mesh3d-hoverlabel-bordercolor", "name": "mesh3d > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#mesh3d-hoverlabel-bgcolor", "name": "mesh3d > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#mesh3d-hoverlabel-namelength", "name": "mesh3d > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#mesh3d-hoverlabel-font", "name": "mesh3d > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#mesh3d-hoverlabel-font-family", "name": "mesh3d > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#mesh3d-hoverlabel-font-color", "name": "mesh3d > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#mesh3d-hoverlabel-font-size", "name": "mesh3d > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#mesh3d-lighting", "name": "mesh3d > lighting", "description": "Properties for lighting"}, {"permalink": "reference/#mesh3d-lighting-fresnel", "name": "mesh3d > lighting > fresnel", "description": "Represents the reflectance as a dependency of the viewing angle; e.g. paper is reflective when viewing it from the edge of the paper (almost 90 degrees), causing shine."}, {"permalink": "reference/#mesh3d-lighting-facenormalsepsilon", "name": "mesh3d > lighting > facenormalsepsilon", "description": "Epsilon for face normals calculation avoids math issues arising from degenerate geometry."}, {"permalink": "reference/#mesh3d-lighting-roughness", "name": "mesh3d > lighting > roughness", "description": "Alters specular reflection; the rougher the surface, the wider and less contrasty the shine."}, {"permalink": "reference/#mesh3d-lighting-specular", "name": "mesh3d > lighting > specular", "description": "Represents the level that incident rays are reflected in a single direction, causing shine."}, {"permalink": "reference/#mesh3d-lighting-ambient", "name": "mesh3d > lighting > ambient", "description": "Ambient light increases overall color visibility but can wash out the image."}, {"permalink": "reference/#mesh3d-lighting-vertexnormalsepsilon", "name": "mesh3d > lighting > vertexnormalsepsilon", "description": "Epsilon for vertex normals calculation avoids math issues arising from degenerate geometry."}, {"permalink": "reference/#mesh3d-lighting-diffuse", "name": "mesh3d > lighting > diffuse", "description": "Represents the extent that incident rays are reflected in a range of angles."}, {"permalink": "reference/#mesh3d-showscale", "name": "mesh3d > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#mesh3d-hoverinfo", "name": "mesh3d > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#mesh3d-lightposition", "name": "mesh3d > lightposition", "description": "Properties for lightposition"}, {"permalink": "reference/#mesh3d-lightposition-y", "name": "mesh3d > lightposition > y", "description": "Numeric vector, representing the Y coordinate for each vertex."}, {"permalink": "reference/#mesh3d-lightposition-x", "name": "mesh3d > lightposition > x", "description": "Numeric vector, representing the X coordinate for each vertex."}, {"permalink": "reference/#mesh3d-lightposition-z", "name": "mesh3d > lightposition > z", "description": "Numeric vector, representing the Z coordinate for each vertex."}, {"permalink": "reference/#mesh3d-cmax", "name": "mesh3d > cmax", "description": "Has an effect only if `color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `color` array index, and if set, `cmin` must be set as well."}, {"permalink": "reference/#mesh3d-name", "name": "mesh3d > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#mesh3d-colorscale", "name": "mesh3d > colorscale", "description": "Sets the colorscale and only has an effect if `color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `cmin` and `cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#mesh3d-i", "name": "mesh3d > i", "description": "A vector of vertex indices, i.e. integer values between 0 and the length of the vertex vectors, representing the *first* vertex of a triangle. For example, `{i[m], j[m], k[m]}` together represent face m (triangle m) in the mesh, where `i[m] = n` points to the triplet `{x[n], y[n], z[n]}` in the vertex arrays. Therefore, each element in `i` represents a point in space, which is the first vertex of a triangle."}, {"permalink": "reference/#mesh3d-k", "name": "mesh3d > k", "description": "A vector of vertex indices, i.e. integer values between 0 and the length of the vertex vectors, representing the *third* vertex of a triangle. For example, `{i[m], j[m], k[m]}` together represent face m (triangle m) in the mesh, where `k[m] = n` points to the triplet  `{x[n], y[n], z[n]}` in the vertex arrays. Therefore, each element in `k` represents a point in space, which is the third vertex of a triangle."}, {"permalink": "reference/#mesh3d-j", "name": "mesh3d > j", "description": "A vector of vertex indices, i.e. integer values between 0 and the length of the vertex vectors, representing the *second* vertex of a triangle. For example, `{i[m], j[m], k[m]}`  together represent face m (triangle m) in the mesh, where `j[m] = n` points to the triplet `{x[n], y[n], z[n]}` in the vertex arrays. Therefore, each element in `j` represents a point in space, which is the second vertex of a triangle."}, {"permalink": "reference/#mesh3d-ids", "name": "mesh3d > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#mesh3d-reversescale", "name": "mesh3d > reversescale", "description": "Has an effect only if `color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#mesh3d-cauto", "name": "mesh3d > cauto", "description": "Has an effect only if `color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#mesh3d-y", "name": "mesh3d > y", "description": "Sets the Y coordinates of the vertices. The nth element of vectors `x`, `y` and `z` jointly represent the X, Y and Z coordinates of the nth vertex."}, {"permalink": "reference/#mesh3d-x", "name": "mesh3d > x", "description": "Sets the X coordinates of the vertices. The nth element of vectors `x`, `y` and `z` jointly represent the X, Y and Z coordinates of the nth vertex."}, {"permalink": "reference/#mesh3d-z", "name": "mesh3d > z", "description": "Sets the Z coordinates of the vertices. The nth element of vectors `x`, `y` and `z` jointly represent the X, Y and Z coordinates of the nth vertex."}, {"permalink": "reference/#scattercarpet-textposition", "name": "scattercarpet > textposition", "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates."}, {"permalink": "reference/#scattercarpet-stream", "name": "scattercarpet > stream", "description": "Properties for stream"}, {"permalink": "reference/#scattercarpet-stream-token", "name": "scattercarpet > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#scattercarpet-stream-maxpoints", "name": "scattercarpet > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#scattercarpet-text", "name": "scattercarpet > text", "description": "Sets text elements associated with each (a,b,c) point. If a single string, the same string appears over all the data points. If an array of strings, the items are mapped in order to the the data points in (a,b,c)."}, {"permalink": "reference/#scattercarpet-visible", "name": "scattercarpet > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#scattercarpet-marker", "name": "scattercarpet > marker", "description": "Properties for marker"}, {"permalink": "reference/#scattercarpet-marker-cmin", "name": "scattercarpet > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#scattercarpet-marker-color", "name": "scattercarpet > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scattercarpet-marker-size", "name": "scattercarpet > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#scattercarpet-marker-reversescale", "name": "scattercarpet > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scattercarpet-marker-autocolorscale", "name": "scattercarpet > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scattercarpet-marker-gradient", "name": "scattercarpet > marker > gradient", "description": "Properties for gradient"}, {"permalink": "reference/#scattercarpet-marker-gradient-color", "name": "scattercarpet > marker > gradient > color", "description": "Sets the final color of the gradient fill: the center color for radial, the right for horizontal, or the bottom for vertical."}, {"permalink": "reference/#scattercarpet-marker-gradient-type", "name": "scattercarpet > marker > gradient > type", "description": "Sets the type of gradient used to fill the markers"}, {"permalink": "reference/#scattercarpet-marker-maxdisplayed", "name": "scattercarpet > marker > maxdisplayed", "description": "Sets a maximum number of points to be drawn on the graph. *0* corresponds to no limit."}, {"permalink": "reference/#scattercarpet-marker-opacity", "name": "scattercarpet > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#scattercarpet-marker-sizeref", "name": "scattercarpet > marker > sizeref", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`."}, {"permalink": "reference/#scattercarpet-marker-symbol", "name": "scattercarpet > marker > symbol", "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name."}, {"permalink": "reference/#scattercarpet-marker-showscale", "name": "scattercarpet > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scattercarpet-marker-line", "name": "scattercarpet > marker > line", "description": "Properties for line"}, {"permalink": "reference/#scattercarpet-marker-line-autocolorscale", "name": "scattercarpet > marker > line > autocolorscale", "description": "Has an effect only if `color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scattercarpet-marker-line-cmin", "name": "scattercarpet > marker > line > cmin", "description": "Has an effect only if `color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `color` array index, and if set, `cmax` must be set as well."}, {"permalink": "reference/#scattercarpet-marker-line-colorscale", "name": "scattercarpet > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `cmin` and `cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scattercarpet-marker-line-color", "name": "scattercarpet > marker > line > color", "description": "Sets the  color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scattercarpet-marker-line-reversescale", "name": "scattercarpet > marker > line > reversescale", "description": "Has an effect only if `color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scattercarpet-marker-line-width", "name": "scattercarpet > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#scattercarpet-marker-line-cauto", "name": "scattercarpet > marker > line > cauto", "description": "Has an effect only if `color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scattercarpet-marker-line-cmax", "name": "scattercarpet > marker > line > cmax", "description": "Has an effect only if `color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `color` array index, and if set, `cmin` must be set as well."}, {"permalink": "reference/#scattercarpet-marker-colorscale", "name": "scattercarpet > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scattercarpet-marker-colorbar", "name": "scattercarpet > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#scattercarpet-marker-colorbar-yanchor", "name": "scattercarpet > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#scattercarpet-marker-colorbar-showexponent", "name": "scattercarpet > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#scattercarpet-marker-colorbar-showticklabels", "name": "scattercarpet > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#scattercarpet-marker-colorbar-lenmode", "name": "scattercarpet > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#scattercarpet-marker-colorbar-showticksuffix", "name": "scattercarpet > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#scattercarpet-marker-colorbar-titlefont", "name": "scattercarpet > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#scattercarpet-marker-colorbar-titlefont-family", "name": "scattercarpet > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattercarpet-marker-colorbar-titlefont-color", "name": "scattercarpet > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#scattercarpet-marker-colorbar-titlefont-size", "name": "scattercarpet > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#scattercarpet-marker-colorbar-borderwidth", "name": "scattercarpet > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#scattercarpet-marker-colorbar-nticks", "name": "scattercarpet > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#scattercarpet-marker-colorbar-showtickprefix", "name": "scattercarpet > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#scattercarpet-marker-colorbar-titleside", "name": "scattercarpet > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#scattercarpet-marker-colorbar-outlinecolor", "name": "scattercarpet > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickprefix", "name": "scattercarpet > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickformat", "name": "scattercarpet > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickmode", "name": "scattercarpet > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#scattercarpet-marker-colorbar-title", "name": "scattercarpet > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#scattercarpet-marker-colorbar-ticks", "name": "scattercarpet > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#scattercarpet-marker-colorbar-thickness", "name": "scattercarpet > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#scattercarpet-marker-colorbar-bgcolor", "name": "scattercarpet > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#scattercarpet-marker-colorbar-outlinewidth", "name": "scattercarpet > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#scattercarpet-marker-colorbar-bordercolor", "name": "scattercarpet > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattercarpet-marker-colorbar-xanchor", "name": "scattercarpet > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#scattercarpet-marker-colorbar-separatethousands", "name": "scattercarpet > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#scattercarpet-marker-colorbar-ticklen", "name": "scattercarpet > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#scattercarpet-marker-colorbar-len", "name": "scattercarpet > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#scattercarpet-marker-colorbar-ticksuffix", "name": "scattercarpet > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickcolor", "name": "scattercarpet > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#scattercarpet-marker-colorbar-ticktext", "name": "scattercarpet > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#scattercarpet-marker-colorbar-xpad", "name": "scattercarpet > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickvals", "name": "scattercarpet > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickfont", "name": "scattercarpet > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickfont-family", "name": "scattercarpet > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickfont-color", "name": "scattercarpet > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickfont-size", "name": "scattercarpet > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickwidth", "name": "scattercarpet > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tick0", "name": "scattercarpet > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#scattercarpet-marker-colorbar-tickangle", "name": "scattercarpet > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#scattercarpet-marker-colorbar-dtick", "name": "scattercarpet > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#scattercarpet-marker-colorbar-ypad", "name": "scattercarpet > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#scattercarpet-marker-colorbar-exponentformat", "name": "scattercarpet > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#scattercarpet-marker-colorbar-y", "name": "scattercarpet > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattercarpet-marker-colorbar-x", "name": "scattercarpet > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattercarpet-marker-colorbar-thicknessmode", "name": "scattercarpet > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#scattercarpet-marker-sizemode", "name": "scattercarpet > marker > sizemode", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels."}, {"permalink": "reference/#scattercarpet-marker-cauto", "name": "scattercarpet > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scattercarpet-marker-cmax", "name": "scattercarpet > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#scattercarpet-marker-sizemin", "name": "scattercarpet > marker > sizemin", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points."}, {"permalink": "reference/#scattercarpet-hoveron", "name": "scattercarpet > hoveron", "description": "Do the hover effects highlight individual points (markers or line points) or do they highlight filled regions? If the fill is *toself* or *tonext* and there are no markers or text, then the default is *fills*, otherwise it is *points*."}, {"permalink": "reference/#scattercarpet-fill", "name": "scattercarpet > fill", "description": "Sets the area to fill with a solid color. Use with `fillcolor` if not *none*. scatterternary has a subset of the options available to scatter. *toself* connects the endpoints of the trace (or each segment of the trace if it has gaps) into a closed shape. *tonext* fills the space between two traces if one completely encloses the other (eg consecutive contour lines), and behaves like *toself* if there is no trace before it. *tonext* should not be used if one trace does not enclose the other."}, {"permalink": "reference/#scattercarpet-showlegend", "name": "scattercarpet > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#scattercarpet-customdata", "name": "scattercarpet > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#scattercarpet-xaxis", "name": "scattercarpet > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#scattercarpet-carpet", "name": "scattercarpet > carpet", "description": "An identifier for this carpet, so that `scattercarpet` and `scattercontour` traces can specify a carpet plot on which they lie"}, {"permalink": "reference/#scattercarpet-type", "name": "scattercarpet > type", "description": "Properties for type"}, {"permalink": "reference/#scattercarpet-opacity", "name": "scattercarpet > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#scattercarpet-textfont", "name": "scattercarpet > textfont", "description": "Sets the text font."}, {"permalink": "reference/#scattercarpet-textfont-family", "name": "scattercarpet > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattercarpet-textfont-color", "name": "scattercarpet > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#scattercarpet-textfont-size", "name": "scattercarpet > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#scattercarpet-legendgroup", "name": "scattercarpet > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#scattercarpet-hoverlabel", "name": "scattercarpet > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#scattercarpet-hoverlabel-bordercolor", "name": "scattercarpet > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#scattercarpet-hoverlabel-bgcolor", "name": "scattercarpet > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#scattercarpet-hoverlabel-namelength", "name": "scattercarpet > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#scattercarpet-hoverlabel-font", "name": "scattercarpet > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#scattercarpet-hoverlabel-font-family", "name": "scattercarpet > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattercarpet-hoverlabel-font-color", "name": "scattercarpet > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#scattercarpet-hoverlabel-font-size", "name": "scattercarpet > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#scattercarpet-fillcolor", "name": "scattercarpet > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#scattercarpet-hoverinfo", "name": "scattercarpet > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#scattercarpet-line", "name": "scattercarpet > line", "description": "Properties for line"}, {"permalink": "reference/#scattercarpet-line-color", "name": "scattercarpet > line > color", "description": "Sets the line color."}, {"permalink": "reference/#scattercarpet-line-smoothing", "name": "scattercarpet > line > smoothing", "description": "Has an effect only if `shape` is set to *spline* Sets the amount of smoothing. *0* corresponds to no smoothing (equivalent to a *linear* shape)."}, {"permalink": "reference/#scattercarpet-line-dash", "name": "scattercarpet > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#scattercarpet-line-width", "name": "scattercarpet > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#scattercarpet-line-shape", "name": "scattercarpet > line > shape", "description": "Determines the line shape. With *spline* the lines are drawn using spline interpolation. The other available values correspond to step-wise line shapes."}, {"permalink": "reference/#scattercarpet-a", "name": "scattercarpet > a", "description": "Sets the quantity of component `a` in each data point. If `a`, `b`, and `c` are all provided, they need not be normalized, only the relative values matter. If only two arrays are provided they must be normalized to match `ternary<i>.sum`."}, {"permalink": "reference/#scattercarpet-b", "name": "scattercarpet > b", "description": "Sets the quantity of component `a` in each data point. If `a`, `b`, and `c` are all provided, they need not be normalized, only the relative values matter. If only two arrays are provided they must be normalized to match `ternary<i>.sum`."}, {"permalink": "reference/#scattercarpet-name", "name": "scattercarpet > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#scattercarpet-yaxis", "name": "scattercarpet > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#scattercarpet-connectgaps", "name": "scattercarpet > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected."}, {"permalink": "reference/#scattercarpet-ids", "name": "scattercarpet > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#scattercarpet-mode", "name": "scattercarpet > mode", "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*."}, {"permalink": "reference/#scatterternary-textposition", "name": "scatterternary > textposition", "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates."}, {"permalink": "reference/#scatterternary-stream", "name": "scatterternary > stream", "description": "Properties for stream"}, {"permalink": "reference/#scatterternary-stream-token", "name": "scatterternary > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#scatterternary-stream-maxpoints", "name": "scatterternary > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#scatterternary-text", "name": "scatterternary > text", "description": "Sets text elements associated with each (a,b,c) point. If a single string, the same string appears over all the data points. If an array of strings, the items are mapped in order to the the data points in (a,b,c). If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#scatterternary-visible", "name": "scatterternary > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#scatterternary-cliponaxis", "name": "scatterternary > cliponaxis", "description": "Determines whether or not markers and text nodes are clipped about the subplot axes. To show markers and text nodes above axis lines and tick labels, make sure to set `xaxis.layer` and `yaxis.layer` to *below traces*."}, {"permalink": "reference/#scatterternary-marker", "name": "scatterternary > marker", "description": "Properties for marker"}, {"permalink": "reference/#scatterternary-marker-cmin", "name": "scatterternary > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#scatterternary-marker-color", "name": "scatterternary > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scatterternary-marker-size", "name": "scatterternary > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#scatterternary-marker-reversescale", "name": "scatterternary > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scatterternary-marker-autocolorscale", "name": "scatterternary > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scatterternary-marker-gradient", "name": "scatterternary > marker > gradient", "description": "Properties for gradient"}, {"permalink": "reference/#scatterternary-marker-gradient-color", "name": "scatterternary > marker > gradient > color", "description": "Sets the final color of the gradient fill: the center color for radial, the right for horizontal, or the bottom for vertical."}, {"permalink": "reference/#scatterternary-marker-gradient-type", "name": "scatterternary > marker > gradient > type", "description": "Sets the type of gradient used to fill the markers"}, {"permalink": "reference/#scatterternary-marker-maxdisplayed", "name": "scatterternary > marker > maxdisplayed", "description": "Sets a maximum number of points to be drawn on the graph. *0* corresponds to no limit."}, {"permalink": "reference/#scatterternary-marker-opacity", "name": "scatterternary > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#scatterternary-marker-sizeref", "name": "scatterternary > marker > sizeref", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`."}, {"permalink": "reference/#scatterternary-marker-symbol", "name": "scatterternary > marker > symbol", "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name."}, {"permalink": "reference/#scatterternary-marker-showscale", "name": "scatterternary > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scatterternary-marker-line", "name": "scatterternary > marker > line", "description": "Properties for line"}, {"permalink": "reference/#scatterternary-marker-line-autocolorscale", "name": "scatterternary > marker > line > autocolorscale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scatterternary-marker-line-cmin", "name": "scatterternary > marker > line > cmin", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmax` must be set as well."}, {"permalink": "reference/#scatterternary-marker-line-colorscale", "name": "scatterternary > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `marker.line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.line.cmin` and `marker.line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scatterternary-marker-line-color", "name": "scatterternary > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scatterternary-marker-line-reversescale", "name": "scatterternary > marker > line > reversescale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scatterternary-marker-line-width", "name": "scatterternary > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#scatterternary-marker-line-cauto", "name": "scatterternary > marker > line > cauto", "description": "Has an effect only if `marker.line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scatterternary-marker-line-cmax", "name": "scatterternary > marker > line > cmax", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmin` must be set as well."}, {"permalink": "reference/#scatterternary-marker-colorscale", "name": "scatterternary > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scatterternary-marker-colorbar", "name": "scatterternary > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#scatterternary-marker-colorbar-yanchor", "name": "scatterternary > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#scatterternary-marker-colorbar-showexponent", "name": "scatterternary > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#scatterternary-marker-colorbar-showticklabels", "name": "scatterternary > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#scatterternary-marker-colorbar-lenmode", "name": "scatterternary > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#scatterternary-marker-colorbar-showticksuffix", "name": "scatterternary > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#scatterternary-marker-colorbar-titlefont", "name": "scatterternary > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#scatterternary-marker-colorbar-titlefont-family", "name": "scatterternary > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatterternary-marker-colorbar-titlefont-color", "name": "scatterternary > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#scatterternary-marker-colorbar-titlefont-size", "name": "scatterternary > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#scatterternary-marker-colorbar-borderwidth", "name": "scatterternary > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#scatterternary-marker-colorbar-nticks", "name": "scatterternary > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#scatterternary-marker-colorbar-showtickprefix", "name": "scatterternary > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#scatterternary-marker-colorbar-titleside", "name": "scatterternary > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#scatterternary-marker-colorbar-outlinecolor", "name": "scatterternary > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scatterternary-marker-colorbar-tickprefix", "name": "scatterternary > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#scatterternary-marker-colorbar-tickformat", "name": "scatterternary > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#scatterternary-marker-colorbar-tickmode", "name": "scatterternary > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#scatterternary-marker-colorbar-title", "name": "scatterternary > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#scatterternary-marker-colorbar-ticks", "name": "scatterternary > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#scatterternary-marker-colorbar-thickness", "name": "scatterternary > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#scatterternary-marker-colorbar-bgcolor", "name": "scatterternary > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#scatterternary-marker-colorbar-outlinewidth", "name": "scatterternary > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#scatterternary-marker-colorbar-bordercolor", "name": "scatterternary > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scatterternary-marker-colorbar-xanchor", "name": "scatterternary > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#scatterternary-marker-colorbar-separatethousands", "name": "scatterternary > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#scatterternary-marker-colorbar-ticklen", "name": "scatterternary > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#scatterternary-marker-colorbar-len", "name": "scatterternary > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#scatterternary-marker-colorbar-ticksuffix", "name": "scatterternary > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#scatterternary-marker-colorbar-tickcolor", "name": "scatterternary > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#scatterternary-marker-colorbar-ticktext", "name": "scatterternary > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#scatterternary-marker-colorbar-xpad", "name": "scatterternary > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#scatterternary-marker-colorbar-tickvals", "name": "scatterternary > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#scatterternary-marker-colorbar-tickfont", "name": "scatterternary > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#scatterternary-marker-colorbar-tickfont-family", "name": "scatterternary > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatterternary-marker-colorbar-tickfont-color", "name": "scatterternary > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#scatterternary-marker-colorbar-tickfont-size", "name": "scatterternary > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#scatterternary-marker-colorbar-tickwidth", "name": "scatterternary > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#scatterternary-marker-colorbar-tick0", "name": "scatterternary > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#scatterternary-marker-colorbar-tickangle", "name": "scatterternary > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#scatterternary-marker-colorbar-dtick", "name": "scatterternary > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#scatterternary-marker-colorbar-ypad", "name": "scatterternary > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#scatterternary-marker-colorbar-exponentformat", "name": "scatterternary > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#scatterternary-marker-colorbar-y", "name": "scatterternary > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#scatterternary-marker-colorbar-x", "name": "scatterternary > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#scatterternary-marker-colorbar-thicknessmode", "name": "scatterternary > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#scatterternary-marker-sizemode", "name": "scatterternary > marker > sizemode", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels."}, {"permalink": "reference/#scatterternary-marker-cauto", "name": "scatterternary > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scatterternary-marker-cmax", "name": "scatterternary > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#scatterternary-marker-sizemin", "name": "scatterternary > marker > sizemin", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points."}, {"permalink": "reference/#scatterternary-hoveron", "name": "scatterternary > hoveron", "description": "Do the hover effects highlight individual points (markers or line points) or do they highlight filled regions? If the fill is *toself* or *tonext* and there are no markers or text, then the default is *fills*, otherwise it is *points*."}, {"permalink": "reference/#scatterternary-fill", "name": "scatterternary > fill", "description": "Sets the area to fill with a solid color. Use with `fillcolor` if not *none*. scatterternary has a subset of the options available to scatter. *toself* connects the endpoints of the trace (or each segment of the trace if it has gaps) into a closed shape. *tonext* fills the space between two traces if one completely encloses the other (eg consecutive contour lines), and behaves like *toself* if there is no trace before it. *tonext* should not be used if one trace does not enclose the other."}, {"permalink": "reference/#scatterternary-showlegend", "name": "scatterternary > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#scatterternary-sum", "name": "scatterternary > sum", "description": "The number each triplet should sum to, if only two of `a`, `b`, and `c` are provided. This overrides `ternary<i>.sum` to normalize this specific trace, but does not affect the values displayed on the axes. 0 (or missing) means to use ternary<i>.sum"}, {"permalink": "reference/#scatterternary-customdata", "name": "scatterternary > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#scatterternary-subplot", "name": "scatterternary > subplot", "description": "Sets a reference between this trace's data coordinates and a ternary subplot. If *ternary* (the default value), the data refer to `layout.ternary`. If *ternary2*, the data refer to `layout.ternary2`, and so on."}, {"permalink": "reference/#scatterternary-type", "name": "scatterternary > type", "description": "Properties for type"}, {"permalink": "reference/#scatterternary-opacity", "name": "scatterternary > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#scatterternary-textfont", "name": "scatterternary > textfont", "description": "Sets the text font."}, {"permalink": "reference/#scatterternary-textfont-family", "name": "scatterternary > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatterternary-textfont-color", "name": "scatterternary > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#scatterternary-textfont-size", "name": "scatterternary > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#scatterternary-legendgroup", "name": "scatterternary > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#scatterternary-hovertext", "name": "scatterternary > hovertext", "description": "Sets hover text elements associated with each (a,b,c) point. If a single string, the same string appears over all the data points. If an array of strings, the items are mapped in order to the the data points in (a,b,c). To be seen, trace `hoverinfo` must contain a *text* flag."}, {"permalink": "reference/#scatterternary-hoverlabel", "name": "scatterternary > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#scatterternary-hoverlabel-bordercolor", "name": "scatterternary > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#scatterternary-hoverlabel-bgcolor", "name": "scatterternary > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#scatterternary-hoverlabel-namelength", "name": "scatterternary > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#scatterternary-hoverlabel-font", "name": "scatterternary > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#scatterternary-hoverlabel-font-family", "name": "scatterternary > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatterternary-hoverlabel-font-color", "name": "scatterternary > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#scatterternary-hoverlabel-font-size", "name": "scatterternary > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#scatterternary-fillcolor", "name": "scatterternary > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#scatterternary-hoverinfo", "name": "scatterternary > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#scatterternary-line", "name": "scatterternary > line", "description": "Properties for line"}, {"permalink": "reference/#scatterternary-line-color", "name": "scatterternary > line > color", "description": "Sets the line color."}, {"permalink": "reference/#scatterternary-line-smoothing", "name": "scatterternary > line > smoothing", "description": "Has an effect only if `shape` is set to *spline* Sets the amount of smoothing. *0* corresponds to no smoothing (equivalent to a *linear* shape)."}, {"permalink": "reference/#scatterternary-line-dash", "name": "scatterternary > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#scatterternary-line-width", "name": "scatterternary > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#scatterternary-line-shape", "name": "scatterternary > line > shape", "description": "Determines the line shape. With *spline* the lines are drawn using spline interpolation. The other available values correspond to step-wise line shapes."}, {"permalink": "reference/#scatterternary-a", "name": "scatterternary > a", "description": "Sets the quantity of component `a` in each data point. If `a`, `b`, and `c` are all provided, they need not be normalized, only the relative values matter. If only two arrays are provided they must be normalized to match `ternary<i>.sum`."}, {"permalink": "reference/#scatterternary-c", "name": "scatterternary > c", "description": "Sets the quantity of component `a` in each data point. If `a`, `b`, and `c` are all provided, they need not be normalized, only the relative values matter. If only two arrays are provided they must be normalized to match `ternary<i>.sum`."}, {"permalink": "reference/#scatterternary-b", "name": "scatterternary > b", "description": "Sets the quantity of component `a` in each data point. If `a`, `b`, and `c` are all provided, they need not be normalized, only the relative values matter. If only two arrays are provided they must be normalized to match `ternary<i>.sum`."}, {"permalink": "reference/#scatterternary-name", "name": "scatterternary > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#scatterternary-connectgaps", "name": "scatterternary > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected."}, {"permalink": "reference/#scatterternary-ids", "name": "scatterternary > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#scatterternary-mode", "name": "scatterternary > mode", "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*."}, {"permalink": "reference/#surface-cmin", "name": "surface > cmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#surface-stream", "name": "surface > stream", "description": "Properties for stream"}, {"permalink": "reference/#surface-stream-token", "name": "surface > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#surface-stream-maxpoints", "name": "surface > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#surface-text", "name": "surface > text", "description": "Sets the text elements associated with each z value."}, {"permalink": "reference/#surface-ycalendar", "name": "surface > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#surface-scene", "name": "surface > scene", "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on."}, {"permalink": "reference/#surface-visible", "name": "surface > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#surface-xcalendar", "name": "surface > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#surface-colorbar", "name": "surface > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#surface-colorbar-yanchor", "name": "surface > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#surface-colorbar-showexponent", "name": "surface > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#surface-colorbar-showticklabels", "name": "surface > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#surface-colorbar-lenmode", "name": "surface > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#surface-colorbar-showticksuffix", "name": "surface > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#surface-colorbar-titlefont", "name": "surface > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#surface-colorbar-titlefont-family", "name": "surface > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#surface-colorbar-titlefont-color", "name": "surface > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#surface-colorbar-titlefont-size", "name": "surface > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#surface-colorbar-borderwidth", "name": "surface > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#surface-colorbar-nticks", "name": "surface > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#surface-colorbar-showtickprefix", "name": "surface > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#surface-colorbar-titleside", "name": "surface > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#surface-colorbar-outlinecolor", "name": "surface > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#surface-colorbar-tickprefix", "name": "surface > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#surface-colorbar-tickformat", "name": "surface > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#surface-colorbar-tickmode", "name": "surface > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#surface-colorbar-title", "name": "surface > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#surface-colorbar-ticks", "name": "surface > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#surface-colorbar-thickness", "name": "surface > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#surface-colorbar-bgcolor", "name": "surface > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#surface-colorbar-outlinewidth", "name": "surface > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#surface-colorbar-bordercolor", "name": "surface > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#surface-colorbar-xanchor", "name": "surface > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#surface-colorbar-separatethousands", "name": "surface > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#surface-colorbar-ticklen", "name": "surface > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#surface-colorbar-len", "name": "surface > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#surface-colorbar-ticksuffix", "name": "surface > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#surface-colorbar-tickcolor", "name": "surface > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#surface-colorbar-ticktext", "name": "surface > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#surface-colorbar-xpad", "name": "surface > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#surface-colorbar-tickvals", "name": "surface > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#surface-colorbar-tickfont", "name": "surface > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#surface-colorbar-tickfont-family", "name": "surface > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#surface-colorbar-tickfont-color", "name": "surface > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#surface-colorbar-tickfont-size", "name": "surface > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#surface-colorbar-tickwidth", "name": "surface > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#surface-colorbar-tick0", "name": "surface > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#surface-colorbar-tickangle", "name": "surface > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#surface-colorbar-dtick", "name": "surface > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#surface-colorbar-ypad", "name": "surface > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#surface-colorbar-exponentformat", "name": "surface > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#surface-colorbar-y", "name": "surface > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#surface-colorbar-x", "name": "surface > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#surface-colorbar-thicknessmode", "name": "surface > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#surface-showlegend", "name": "surface > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#surface-customdata", "name": "surface > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#surface-surfacecolor", "name": "surface > surfacecolor", "description": "Sets the surface color values, used for setting a color scale independent of `z`."}, {"permalink": "reference/#surface-zcalendar", "name": "surface > zcalendar", "description": "Sets the calendar system to use with `z` date data."}, {"permalink": "reference/#surface-contours", "name": "surface > contours", "description": "Properties for contours"}, {"permalink": "reference/#surface-contours-y", "name": "surface > contours > y", "description": "Properties for y"}, {"permalink": "reference/#surface-contours-y-show", "name": "surface > contours > y > show", "description": "Determines whether or not contour lines about the y dimension are drawn."}, {"permalink": "reference/#surface-contours-y-color", "name": "surface > contours > y > color", "description": "Sets the color of the contour lines."}, {"permalink": "reference/#surface-contours-y-highlightwidth", "name": "surface > contours > y > highlightwidth", "description": "Sets the width of the highlighted contour lines."}, {"permalink": "reference/#surface-contours-y-project", "name": "surface > contours > y > project", "description": "Properties for project"}, {"permalink": "reference/#surface-contours-y-project-y", "name": "surface > contours > y > project > y", "description": "Determines whether or not these contour lines are projected on the y plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-y-project-x", "name": "surface > contours > y > project > x", "description": "Determines whether or not these contour lines are projected on the x plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-y-project-z", "name": "surface > contours > y > project > z", "description": "Determines whether or not these contour lines are projected on the z plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-y-width", "name": "surface > contours > y > width", "description": "Sets the width of the contour lines."}, {"permalink": "reference/#surface-contours-y-highlightcolor", "name": "surface > contours > y > highlightcolor", "description": "Sets the color of the highlighted contour lines."}, {"permalink": "reference/#surface-contours-y-highlight", "name": "surface > contours > y > highlight", "description": "Determines whether or not contour lines about the y dimension are highlighted on hover."}, {"permalink": "reference/#surface-contours-y-usecolormap", "name": "surface > contours > y > usecolormap", "description": "An alternate to *color*. Determines whether or not the contour lines are colored using the trace *colorscale*."}, {"permalink": "reference/#surface-contours-x", "name": "surface > contours > x", "description": "Properties for x"}, {"permalink": "reference/#surface-contours-x-show", "name": "surface > contours > x > show", "description": "Determines whether or not contour lines about the x dimension are drawn."}, {"permalink": "reference/#surface-contours-x-color", "name": "surface > contours > x > color", "description": "Sets the color of the contour lines."}, {"permalink": "reference/#surface-contours-x-highlightwidth", "name": "surface > contours > x > highlightwidth", "description": "Sets the width of the highlighted contour lines."}, {"permalink": "reference/#surface-contours-x-project", "name": "surface > contours > x > project", "description": "Properties for project"}, {"permalink": "reference/#surface-contours-x-project-y", "name": "surface > contours > x > project > y", "description": "Determines whether or not these contour lines are projected on the y plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-x-project-x", "name": "surface > contours > x > project > x", "description": "Determines whether or not these contour lines are projected on the x plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-x-project-z", "name": "surface > contours > x > project > z", "description": "Determines whether or not these contour lines are projected on the z plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-x-width", "name": "surface > contours > x > width", "description": "Sets the width of the contour lines."}, {"permalink": "reference/#surface-contours-x-highlightcolor", "name": "surface > contours > x > highlightcolor", "description": "Sets the color of the highlighted contour lines."}, {"permalink": "reference/#surface-contours-x-highlight", "name": "surface > contours > x > highlight", "description": "Determines whether or not contour lines about the x dimension are highlighted on hover."}, {"permalink": "reference/#surface-contours-x-usecolormap", "name": "surface > contours > x > usecolormap", "description": "An alternate to *color*. Determines whether or not the contour lines are colored using the trace *colorscale*."}, {"permalink": "reference/#surface-contours-z", "name": "surface > contours > z", "description": "Properties for z"}, {"permalink": "reference/#surface-contours-z-show", "name": "surface > contours > z > show", "description": "Determines whether or not contour lines about the z dimension are drawn."}, {"permalink": "reference/#surface-contours-z-color", "name": "surface > contours > z > color", "description": "Sets the color of the contour lines."}, {"permalink": "reference/#surface-contours-z-highlightwidth", "name": "surface > contours > z > highlightwidth", "description": "Sets the width of the highlighted contour lines."}, {"permalink": "reference/#surface-contours-z-project", "name": "surface > contours > z > project", "description": "Properties for project"}, {"permalink": "reference/#surface-contours-z-project-y", "name": "surface > contours > z > project > y", "description": "Determines whether or not these contour lines are projected on the y plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-z-project-x", "name": "surface > contours > z > project > x", "description": "Determines whether or not these contour lines are projected on the x plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-z-project-z", "name": "surface > contours > z > project > z", "description": "Determines whether or not these contour lines are projected on the z plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence."}, {"permalink": "reference/#surface-contours-z-width", "name": "surface > contours > z > width", "description": "Sets the width of the contour lines."}, {"permalink": "reference/#surface-contours-z-highlightcolor", "name": "surface > contours > z > highlightcolor", "description": "Sets the color of the highlighted contour lines."}, {"permalink": "reference/#surface-contours-z-highlight", "name": "surface > contours > z > highlight", "description": "Determines whether or not contour lines about the z dimension are highlighted on hover."}, {"permalink": "reference/#surface-contours-z-usecolormap", "name": "surface > contours > z > usecolormap", "description": "An alternate to *color*. Determines whether or not the contour lines are colored using the trace *colorscale*."}, {"permalink": "reference/#surface-type", "name": "surface > type", "description": "Properties for type"}, {"permalink": "reference/#surface-_deprecated-zmin", "name": "surface > _deprecated > zmin", "description": "Obsolete. Use `cmin` instead."}, {"permalink": "reference/#surface-_deprecated-zmax", "name": "surface > _deprecated > zmax", "description": "Obsolete. Use `cmax` instead."}, {"permalink": "reference/#surface-_deprecated-zauto", "name": "surface > _deprecated > zauto", "description": "Obsolete. Use `cauto` instead."}, {"permalink": "reference/#surface-opacity", "name": "surface > opacity", "description": "Sets the opacity of the surface."}, {"permalink": "reference/#surface-legendgroup", "name": "surface > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#surface-hidesurface", "name": "surface > hidesurface", "description": "Determines whether or not a surface is drawn. For example, set `hidesurface` to *false* `contours.x.show` to *true* and `contours.y.show` to *true* to draw a wire frame plot."}, {"permalink": "reference/#surface-autocolorscale", "name": "surface > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#surface-hoverlabel", "name": "surface > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#surface-hoverlabel-bordercolor", "name": "surface > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#surface-hoverlabel-bgcolor", "name": "surface > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#surface-hoverlabel-namelength", "name": "surface > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#surface-hoverlabel-font", "name": "surface > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#surface-hoverlabel-font-family", "name": "surface > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#surface-hoverlabel-font-color", "name": "surface > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#surface-hoverlabel-font-size", "name": "surface > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#surface-lighting", "name": "surface > lighting", "description": "Properties for lighting"}, {"permalink": "reference/#surface-lighting-fresnel", "name": "surface > lighting > fresnel", "description": "Represents the reflectance as a dependency of the viewing angle; e.g. paper is reflective when viewing it from the edge of the paper (almost 90 degrees), causing shine."}, {"permalink": "reference/#surface-lighting-roughness", "name": "surface > lighting > roughness", "description": "Alters specular reflection; the rougher the surface, the wider and less contrasty the shine."}, {"permalink": "reference/#surface-lighting-specular", "name": "surface > lighting > specular", "description": "Represents the level that incident rays are reflected in a single direction, causing shine."}, {"permalink": "reference/#surface-lighting-ambient", "name": "surface > lighting > ambient", "description": "Ambient light increases overall color visibility but can wash out the image."}, {"permalink": "reference/#surface-lighting-diffuse", "name": "surface > lighting > diffuse", "description": "Represents the extent that incident rays are reflected in a range of angles."}, {"permalink": "reference/#surface-showscale", "name": "surface > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#surface-hoverinfo", "name": "surface > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#surface-lightposition", "name": "surface > lightposition", "description": "Properties for lightposition"}, {"permalink": "reference/#surface-lightposition-y", "name": "surface > lightposition > y", "description": "Numeric vector, representing the Y coordinate for each vertex."}, {"permalink": "reference/#surface-lightposition-x", "name": "surface > lightposition > x", "description": "Numeric vector, representing the X coordinate for each vertex."}, {"permalink": "reference/#surface-lightposition-z", "name": "surface > lightposition > z", "description": "Numeric vector, representing the Z coordinate for each vertex."}, {"permalink": "reference/#surface-z", "name": "surface > z", "description": "Sets the z coordinates."}, {"permalink": "reference/#surface-name", "name": "surface > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#surface-colorscale", "name": "surface > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#surface-ids", "name": "surface > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#surface-reversescale", "name": "surface > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#surface-cauto", "name": "surface > cauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#surface-y", "name": "surface > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#surface-x", "name": "surface > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#surface-cmax", "name": "surface > cmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#sankey-valueformat", "name": "sankey > valueformat", "description": "Sets the value formatting rule using d3 formatting mini-language which is similar to those of Python. See https://github.com/d3/d3-format/blob/master/README.md#locale_format"}, {"permalink": "reference/#sankey-domain", "name": "sankey > domain", "description": "Properties for domain"}, {"permalink": "reference/#sankey-domain-y", "name": "sankey > domain > y", "description": "Sets the vertical domain of this `sankey` trace (in plot fraction)."}, {"permalink": "reference/#sankey-domain-x", "name": "sankey > domain > x", "description": "Sets the horizontal domain of this `sankey` trace (in plot fraction)."}, {"permalink": "reference/#sankey-customdata", "name": "sankey > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#sankey-orientation", "name": "sankey > orientation", "description": "Sets the orientation of the Sankey diagram."}, {"permalink": "reference/#sankey-stream", "name": "sankey > stream", "description": "Properties for stream"}, {"permalink": "reference/#sankey-stream-token", "name": "sankey > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#sankey-stream-maxpoints", "name": "sankey > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#sankey-visible", "name": "sankey > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#sankey-showlegend", "name": "sankey > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#sankey-valuesuffix", "name": "sankey > valuesuffix", "description": "Adds a unit to follow the value in the hover tooltip. Add a space if a separation is necessary from the value."}, {"permalink": "reference/#sankey-arrangement", "name": "sankey > arrangement", "description": "If value is `snap` (the default), the node arrangement is assisted by automatic snapping of elements to preserve space between nodes specified via `nodepad`. If value is `perpendicular`, the nodes can only move along a line perpendicular to the flow. If value is `freeform`, the nodes can freely move on the plane. If value is `fixed`, the nodes are stationary."}, {"permalink": "reference/#sankey-type", "name": "sankey > type", "description": "Properties for type"}, {"permalink": "reference/#sankey-opacity", "name": "sankey > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#sankey-textfont", "name": "sankey > textfont", "description": "Sets the font for node labels"}, {"permalink": "reference/#sankey-textfont-family", "name": "sankey > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#sankey-textfont-color", "name": "sankey > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#sankey-textfont-size", "name": "sankey > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#sankey-legendgroup", "name": "sankey > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#sankey-node", "name": "sankey > node", "description": "The nodes of the Sankey plot."}, {"permalink": "reference/#sankey-node-color", "name": "sankey > node > color", "description": "Sets the `node` color. It can be a single value, or an array for specifying color for each `node`. If `node.color` is omitted, then the default `Plotly` color palette will be cycled through to have a variety of colors. These defaults are not fully opaque, to allow some visibility of what is beneath the node."}, {"permalink": "reference/#sankey-node-thickness", "name": "sankey > node > thickness", "description": "Sets the thickness (in px) of the `nodes`."}, {"permalink": "reference/#sankey-node-pad", "name": "sankey > node > pad", "description": "Sets the padding (in px) between the `nodes`."}, {"permalink": "reference/#sankey-node-line", "name": "sankey > node > line", "description": "Properties for line"}, {"permalink": "reference/#sankey-node-line-color", "name": "sankey > node > line > color", "description": "Sets the color of the `line` around each `node`."}, {"permalink": "reference/#sankey-node-line-width", "name": "sankey > node > line > width", "description": "Sets the width (in px) of the `line` around each `node`."}, {"permalink": "reference/#sankey-node-label", "name": "sankey > node > label", "description": "The shown name of the node."}, {"permalink": "reference/#sankey-hoverlabel", "name": "sankey > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#sankey-hoverlabel-bordercolor", "name": "sankey > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#sankey-hoverlabel-bgcolor", "name": "sankey > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#sankey-hoverlabel-namelength", "name": "sankey > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#sankey-hoverlabel-font", "name": "sankey > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#sankey-hoverlabel-font-family", "name": "sankey > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#sankey-hoverlabel-font-color", "name": "sankey > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#sankey-hoverlabel-font-size", "name": "sankey > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#sankey-link", "name": "sankey > link", "description": "The links of the Sankey plot."}, {"permalink": "reference/#sankey-link-target", "name": "sankey > link > target", "description": "An integer number `[0..nodes.length - 1]` that represents the target node."}, {"permalink": "reference/#sankey-link-color", "name": "sankey > link > color", "description": "Sets the `link` color. It can be a single value, or an array for specifying color for each `link`. If `link.color` is omitted, then by default, a translucent grey link will be used."}, {"permalink": "reference/#sankey-link-value", "name": "sankey > link > value", "description": "A numeric value representing the flow volume value."}, {"permalink": "reference/#sankey-link-label", "name": "sankey > link > label", "description": "The shown name of the link."}, {"permalink": "reference/#sankey-link-source", "name": "sankey > link > source", "description": "An integer number `[0..nodes.length - 1]` that represents the source node."}, {"permalink": "reference/#sankey-link-line", "name": "sankey > link > line", "description": "Properties for line"}, {"permalink": "reference/#sankey-link-line-color", "name": "sankey > link > line > color", "description": "Sets the color of the `line` around each `link`."}, {"permalink": "reference/#sankey-link-line-width", "name": "sankey > link > line > width", "description": "Sets the width (in px) of the `line` around each `link`."}, {"permalink": "reference/#sankey-hoverinfo", "name": "sankey > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#sankey-name", "name": "sankey > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#sankey-ids", "name": "sankey > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#table-domain", "name": "table > domain", "description": "Properties for domain"}, {"permalink": "reference/#table-domain-y", "name": "table > domain > y", "description": "Sets the vertical domain of this `table` trace (in plot fraction)."}, {"permalink": "reference/#table-domain-x", "name": "table > domain > x", "description": "Sets the horizontal domain of this `table` trace (in plot fraction)."}, {"permalink": "reference/#table-stream", "name": "table > stream", "description": "Properties for stream"}, {"permalink": "reference/#table-stream-token", "name": "table > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#table-stream-maxpoints", "name": "table > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#table-columnwidth", "name": "table > columnwidth", "description": "The width of cells."}, {"permalink": "reference/#table-header", "name": "table > header", "description": "Properties for header"}, {"permalink": "reference/#table-header-suffix", "name": "table > header > suffix", "description": "Suffix for cell values."}, {"permalink": "reference/#table-header-format", "name": "table > header > format", "description": "Sets the cell value formatting rule using d3 formatting mini-language which is similar to those of Python. See https://github.com/d3/d3-format/blob/master/README.md#locale_format"}, {"permalink": "reference/#table-header-align", "name": "table > header > align", "description": "Sets the horizontal alignment of the `text` within the box. Has an effect only if `text` spans more two or more lines (i.e. `text` contains one or more <br> HTML tags) or if an explicit width is set to override the text width."}, {"permalink": "reference/#table-header-height", "name": "table > header > height", "description": "The height of cells."}, {"permalink": "reference/#table-header-prefix", "name": "table > header > prefix", "description": "Prefix for cell values."}, {"permalink": "reference/#table-header-values", "name": "table > header > values", "description": "Header cell values. `values[m][n]` represents the value of the `n`th point in column `m`, therefore the `values[m]` vector length for all columns must be the same (longer vectors will be truncated). Each value must be a finite number or a string."}, {"permalink": "reference/#table-header-line", "name": "table > header > line", "description": "Properties for line"}, {"permalink": "reference/#table-header-line-color", "name": "table > header > line > color", "description": "Properties for color"}, {"permalink": "reference/#table-header-line-width", "name": "table > header > line > width", "description": "Properties for width"}, {"permalink": "reference/#table-header-font", "name": "table > header > font", "description": "Properties for font"}, {"permalink": "reference/#table-header-font-family", "name": "table > header > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#table-header-font-color", "name": "table > header > font > color", "description": "Properties for color"}, {"permalink": "reference/#table-header-font-size", "name": "table > header > font > size", "description": "Properties for size"}, {"permalink": "reference/#table-header-fill", "name": "table > header > fill", "description": "Properties for fill"}, {"permalink": "reference/#table-header-fill-color", "name": "table > header > fill > color", "description": "Sets the cell fill color. It accepts either a specific color or an array of colors."}, {"permalink": "reference/#table-showlegend", "name": "table > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#table-customdata", "name": "table > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#table-type", "name": "table > type", "description": "Properties for type"}, {"permalink": "reference/#table-opacity", "name": "table > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#table-legendgroup", "name": "table > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#table-columnorder", "name": "table > columnorder", "description": "Specifies the rendered order of the data columns; for example, a value `2` at position `0` means that column index `0` in the data will be rendered as the third column, as columns have an index base of zero."}, {"permalink": "reference/#table-hoverlabel", "name": "table > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#table-hoverlabel-bordercolor", "name": "table > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#table-hoverlabel-bgcolor", "name": "table > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#table-hoverlabel-namelength", "name": "table > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#table-hoverlabel-font", "name": "table > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#table-hoverlabel-font-family", "name": "table > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#table-hoverlabel-font-color", "name": "table > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#table-hoverlabel-font-size", "name": "table > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#table-hoverinfo", "name": "table > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#table-name", "name": "table > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#table-visible", "name": "table > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#table-cells", "name": "table > cells", "description": "Properties for cells"}, {"permalink": "reference/#table-cells-suffix", "name": "table > cells > suffix", "description": "Suffix for cell values."}, {"permalink": "reference/#table-cells-format", "name": "table > cells > format", "description": "Sets the cell value formatting rule using d3 formatting mini-language which is similar to those of Python. See https://github.com/d3/d3-format/blob/master/README.md#locale_format"}, {"permalink": "reference/#table-cells-align", "name": "table > cells > align", "description": "Sets the horizontal alignment of the `text` within the box. Has an effect only if `text` spans more two or more lines (i.e. `text` contains one or more <br> HTML tags) or if an explicit width is set to override the text width."}, {"permalink": "reference/#table-cells-height", "name": "table > cells > height", "description": "The height of cells."}, {"permalink": "reference/#table-cells-prefix", "name": "table > cells > prefix", "description": "Prefix for cell values."}, {"permalink": "reference/#table-cells-values", "name": "table > cells > values", "description": "Cell values. `values[m][n]` represents the value of the `n`th point in column `m`, therefore the `values[m]` vector length for all columns must be the same (longer vectors will be truncated). Each value must be a finite number or a string."}, {"permalink": "reference/#table-cells-line", "name": "table > cells > line", "description": "Properties for line"}, {"permalink": "reference/#table-cells-line-color", "name": "table > cells > line > color", "description": "Properties for color"}, {"permalink": "reference/#table-cells-line-width", "name": "table > cells > line > width", "description": "Properties for width"}, {"permalink": "reference/#table-cells-font", "name": "table > cells > font", "description": "Properties for font"}, {"permalink": "reference/#table-cells-font-family", "name": "table > cells > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#table-cells-font-color", "name": "table > cells > font > color", "description": "Properties for color"}, {"permalink": "reference/#table-cells-font-size", "name": "table > cells > font > size", "description": "Properties for size"}, {"permalink": "reference/#table-cells-fill", "name": "table > cells > fill", "description": "Properties for fill"}, {"permalink": "reference/#table-cells-fill-color", "name": "table > cells > fill > color", "description": "Sets the cell fill color. It accepts either a specific color or an array of colors."}, {"permalink": "reference/#table-ids", "name": "table > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#contour-zmax", "name": "contour > zmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#contour-xtype", "name": "contour > xtype", "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided)."}, {"permalink": "reference/#contour-stream", "name": "contour > stream", "description": "Properties for stream"}, {"permalink": "reference/#contour-stream-token", "name": "contour > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#contour-stream-maxpoints", "name": "contour > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#contour-text", "name": "contour > text", "description": "Sets the text elements associated with each z value."}, {"permalink": "reference/#contour-zmin", "name": "contour > zmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#contour-hoverinfo", "name": "contour > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#contour-visible", "name": "contour > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#contour-xcalendar", "name": "contour > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#contour-y0", "name": "contour > y0", "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step."}, {"permalink": "reference/#contour-line", "name": "contour > line", "description": "Properties for line"}, {"permalink": "reference/#contour-line-color", "name": "contour > line > color", "description": "Sets the color of the contour level. Has no effect if `contours.coloring` is set to *lines*."}, {"permalink": "reference/#contour-line-smoothing", "name": "contour > line > smoothing", "description": "Sets the amount of smoothing for the contour lines, where *0* corresponds to no smoothing."}, {"permalink": "reference/#contour-line-dash", "name": "contour > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#contour-line-width", "name": "contour > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#contour-colorbar", "name": "contour > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#contour-colorbar-yanchor", "name": "contour > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#contour-colorbar-showexponent", "name": "contour > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#contour-colorbar-showticklabels", "name": "contour > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#contour-colorbar-lenmode", "name": "contour > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#contour-colorbar-showticksuffix", "name": "contour > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#contour-colorbar-titlefont", "name": "contour > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#contour-colorbar-titlefont-family", "name": "contour > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contour-colorbar-titlefont-color", "name": "contour > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#contour-colorbar-titlefont-size", "name": "contour > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#contour-colorbar-borderwidth", "name": "contour > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#contour-colorbar-nticks", "name": "contour > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#contour-colorbar-showtickprefix", "name": "contour > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#contour-colorbar-titleside", "name": "contour > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#contour-colorbar-outlinecolor", "name": "contour > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#contour-colorbar-tickprefix", "name": "contour > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#contour-colorbar-tickformat", "name": "contour > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#contour-colorbar-tickmode", "name": "contour > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#contour-colorbar-title", "name": "contour > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#contour-colorbar-ticks", "name": "contour > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#contour-colorbar-thickness", "name": "contour > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#contour-colorbar-bgcolor", "name": "contour > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#contour-colorbar-outlinewidth", "name": "contour > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#contour-colorbar-bordercolor", "name": "contour > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#contour-colorbar-xanchor", "name": "contour > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#contour-colorbar-separatethousands", "name": "contour > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#contour-colorbar-ticklen", "name": "contour > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#contour-colorbar-len", "name": "contour > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#contour-colorbar-ticksuffix", "name": "contour > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#contour-colorbar-tickcolor", "name": "contour > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#contour-colorbar-ticktext", "name": "contour > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#contour-colorbar-xpad", "name": "contour > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#contour-colorbar-tickvals", "name": "contour > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#contour-colorbar-tickfont", "name": "contour > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#contour-colorbar-tickfont-family", "name": "contour > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contour-colorbar-tickfont-color", "name": "contour > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#contour-colorbar-tickfont-size", "name": "contour > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#contour-colorbar-tickwidth", "name": "contour > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#contour-colorbar-tick0", "name": "contour > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#contour-colorbar-tickangle", "name": "contour > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#contour-colorbar-dtick", "name": "contour > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#contour-colorbar-ypad", "name": "contour > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#contour-colorbar-exponentformat", "name": "contour > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#contour-colorbar-y", "name": "contour > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#contour-colorbar-x", "name": "contour > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#contour-colorbar-thicknessmode", "name": "contour > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#contour-showlegend", "name": "contour > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#contour-customdata", "name": "contour > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#contour-ncontours", "name": "contour > ncontours", "description": "Sets the maximum number of contour levels. The actual number of contours will be chosen automatically to be less than or equal to the value of `ncontours`. Has an effect only if `autocontour` is *true* or if `contours.size` is missing."}, {"permalink": "reference/#contour-ytype", "name": "contour > ytype", "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)"}, {"permalink": "reference/#contour-contours", "name": "contour > contours", "description": "Properties for contours"}, {"permalink": "reference/#contour-contours-coloring", "name": "contour > contours > coloring", "description": "Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace."}, {"permalink": "reference/#contour-contours-end", "name": "contour > contours > end", "description": "Sets the end contour level value. Must be more than `contours.start`"}, {"permalink": "reference/#contour-contours-showlabels", "name": "contour > contours > showlabels", "description": "Determines whether to label the contour lines with their values."}, {"permalink": "reference/#contour-contours-showlines", "name": "contour > contours > showlines", "description": "Determines whether or not the contour lines are drawn. Has an effect only if `contours.coloring` is set to *fill*."}, {"permalink": "reference/#contour-contours-labelfont", "name": "contour > contours > labelfont", "description": "Sets the font used for labeling the contour levels. The default color comes from the lines, if shown. The default family and size come from `layout.font`."}, {"permalink": "reference/#contour-contours-labelfont-family", "name": "contour > contours > labelfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contour-contours-labelfont-color", "name": "contour > contours > labelfont > color", "description": "Properties for color"}, {"permalink": "reference/#contour-contours-labelfont-size", "name": "contour > contours > labelfont > size", "description": "Properties for size"}, {"permalink": "reference/#contour-contours-start", "name": "contour > contours > start", "description": "Sets the starting contour level value. Must be less than `contours.end`"}, {"permalink": "reference/#contour-contours-labelformat", "name": "contour > contours > labelformat", "description": "Sets the contour label formatting rule using d3 formatting mini-language which is very similar to Python, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format."}, {"permalink": "reference/#contour-contours-size", "name": "contour > contours > size", "description": "Sets the step between each contour level. Must be positive."}, {"permalink": "reference/#contour-xaxis", "name": "contour > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#contour-type", "name": "contour > type", "description": "Properties for type"}, {"permalink": "reference/#contour-ycalendar", "name": "contour > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#contour-opacity", "name": "contour > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#contour-legendgroup", "name": "contour > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#contour-autocontour", "name": "contour > autocontour", "description": "Determines whether or not the contour level attributes are picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`."}, {"permalink": "reference/#contour-transpose", "name": "contour > transpose", "description": "Transposes the z data."}, {"permalink": "reference/#contour-autocolorscale", "name": "contour > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#contour-hoverlabel", "name": "contour > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#contour-hoverlabel-bordercolor", "name": "contour > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#contour-hoverlabel-bgcolor", "name": "contour > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#contour-hoverlabel-namelength", "name": "contour > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#contour-hoverlabel-font", "name": "contour > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#contour-hoverlabel-font-family", "name": "contour > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contour-hoverlabel-font-color", "name": "contour > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#contour-hoverlabel-font-size", "name": "contour > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#contour-dx", "name": "contour > dx", "description": "Sets the x coordinate step. See `x0` for more info."}, {"permalink": "reference/#contour-dy", "name": "contour > dy", "description": "Sets the y coordinate step. See `y0` for more info."}, {"permalink": "reference/#contour-showscale", "name": "contour > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#contour-x0", "name": "contour > x0", "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step."}, {"permalink": "reference/#contour-zauto", "name": "contour > zauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#contour-name", "name": "contour > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#contour-colorscale", "name": "contour > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#contour-connectgaps", "name": "contour > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in."}, {"permalink": "reference/#contour-yaxis", "name": "contour > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#contour-ids", "name": "contour > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#contour-reversescale", "name": "contour > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#contour-y", "name": "contour > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#contour-x", "name": "contour > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#contour-z", "name": "contour > z", "description": "Sets the z data."}, {"permalink": "reference/#carpet-stream", "name": "carpet > stream", "description": "Properties for stream"}, {"permalink": "reference/#carpet-stream-token", "name": "carpet > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#carpet-stream-maxpoints", "name": "carpet > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#carpet-color", "name": "carpet > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#carpet-aaxis", "name": "carpet > aaxis", "description": "Properties for aaxis"}, {"permalink": "reference/#carpet-aaxis-startlinewidth", "name": "carpet > aaxis > startlinewidth", "description": "Sets the width (in px) of the start line."}, {"permalink": "reference/#carpet-aaxis-showexponent", "name": "carpet > aaxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#carpet-aaxis-showticklabels", "name": "carpet > aaxis > showticklabels", "description": "Determines whether axis labels are drawn on the low side, the high side, both, or neither side of the axis."}, {"permalink": "reference/#carpet-aaxis-color", "name": "carpet > aaxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#carpet-aaxis-categoryarray", "name": "carpet > aaxis > categoryarray", "description": "Sets the order in which categories on this axis appear. Only has an effect if `categoryorder` is set to *array*. Used with `categoryorder`."}, {"permalink": "reference/#carpet-aaxis-showticksuffix", "name": "carpet > aaxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#carpet-aaxis-gridwidth", "name": "carpet > aaxis > gridwidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#carpet-aaxis-titleoffset", "name": "carpet > aaxis > titleoffset", "description": "An additional amount by which to offset the title from the tick labels, given in pixels"}, {"permalink": "reference/#carpet-aaxis-titlefont", "name": "carpet > aaxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#carpet-aaxis-titlefont-family", "name": "carpet > aaxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#carpet-aaxis-titlefont-color", "name": "carpet > aaxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#carpet-aaxis-titlefont-size", "name": "carpet > aaxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#carpet-aaxis-startlinecolor", "name": "carpet > aaxis > startlinecolor", "description": "Sets the line color of the start line."}, {"permalink": "reference/#carpet-aaxis-linecolor", "name": "carpet > aaxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#carpet-aaxis-showtickprefix", "name": "carpet > aaxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#carpet-aaxis-rangemode", "name": "carpet > aaxis > rangemode", "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data."}, {"permalink": "reference/#carpet-aaxis-nticks", "name": "carpet > aaxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#carpet-aaxis-tickprefix", "name": "carpet > aaxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#carpet-aaxis-linewidth", "name": "carpet > aaxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#carpet-aaxis-tickformat", "name": "carpet > aaxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#carpet-aaxis-tickmode", "name": "carpet > aaxis > tickmode", "description": "Properties for tickmode"}, {"permalink": "reference/#carpet-aaxis-title", "name": "carpet > aaxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#carpet-aaxis-minorgridcolor", "name": "carpet > aaxis > minorgridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#carpet-aaxis-smoothing", "name": "carpet > aaxis > smoothing", "description": "Properties for smoothing"}, {"permalink": "reference/#carpet-aaxis-labelsuffix", "name": "carpet > aaxis > labelsuffix", "description": "Sets a axis label suffix."}, {"permalink": "reference/#carpet-aaxis-minorgridwidth", "name": "carpet > aaxis > minorgridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#carpet-aaxis-cheatertype", "name": "carpet > aaxis > cheatertype", "description": "Properties for cheatertype"}, {"permalink": "reference/#carpet-aaxis-minorgridcount", "name": "carpet > aaxis > minorgridcount", "description": "Sets the number of minor grid ticks per major grid tick"}, {"permalink": "reference/#carpet-aaxis-endlinewidth", "name": "carpet > aaxis > endlinewidth", "description": "Sets the width (in px) of the end line."}, {"permalink": "reference/#carpet-aaxis-type", "name": "carpet > aaxis > type", "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question."}, {"permalink": "reference/#carpet-aaxis-arraytick0", "name": "carpet > aaxis > arraytick0", "description": "The starting index of grid lines along the axis"}, {"permalink": "reference/#carpet-aaxis-separatethousands", "name": "carpet > aaxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#carpet-aaxis-autorange", "name": "carpet > aaxis > autorange", "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#carpet-aaxis-categoryorder", "name": "carpet > aaxis > categoryorder", "description": "Specifies the ordering logic for the case of categorical variables. By default, plotly uses *trace*, which specifies the order that is present in the data supplied. Set `categoryorder` to *category ascending* or *category descending* if order should be determined by the alphanumerical order of the category names. Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to the *trace* mode. The unspecified categories will follow the categories in `categoryarray`."}, {"permalink": "reference/#carpet-aaxis-endlinecolor", "name": "carpet > aaxis > endlinecolor", "description": "Sets the line color of the end line."}, {"permalink": "reference/#carpet-aaxis-startline", "name": "carpet > aaxis > startline", "description": "Determines whether or not a line is drawn at along the starting value of this axis. If *true*, the start line is drawn on top of the grid lines."}, {"permalink": "reference/#carpet-aaxis-ticksuffix", "name": "carpet > aaxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#carpet-aaxis-fixedrange", "name": "carpet > aaxis > fixedrange", "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled."}, {"permalink": "reference/#carpet-aaxis-showline", "name": "carpet > aaxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#carpet-aaxis-ticktext", "name": "carpet > aaxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#carpet-aaxis-arraydtick", "name": "carpet > aaxis > arraydtick", "description": "The stride between grid lines along the axis"}, {"permalink": "reference/#carpet-aaxis-showgrid", "name": "carpet > aaxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#carpet-aaxis-tickvals", "name": "carpet > aaxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#carpet-aaxis-tickfont", "name": "carpet > aaxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#carpet-aaxis-tickfont-family", "name": "carpet > aaxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#carpet-aaxis-tickfont-color", "name": "carpet > aaxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#carpet-aaxis-tickfont-size", "name": "carpet > aaxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#carpet-aaxis-tick0", "name": "carpet > aaxis > tick0", "description": "The starting index of grid lines along the axis"}, {"permalink": "reference/#carpet-aaxis-tickangle", "name": "carpet > aaxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#carpet-aaxis-labelprefix", "name": "carpet > aaxis > labelprefix", "description": "Sets a axis label prefix."}, {"permalink": "reference/#carpet-aaxis-dtick", "name": "carpet > aaxis > dtick", "description": "The stride between grid lines along the axis"}, {"permalink": "reference/#carpet-aaxis-range", "name": "carpet > aaxis > range", "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#carpet-aaxis-labelpadding", "name": "carpet > aaxis > labelpadding", "description": "Extra padding between label and the axis"}, {"permalink": "reference/#carpet-aaxis-gridcolor", "name": "carpet > aaxis > gridcolor", "description": "Sets the axis line color."}, {"permalink": "reference/#carpet-aaxis-endline", "name": "carpet > aaxis > endline", "description": "Determines whether or not a line is drawn at along the final value of this axis. If *true*, the end line is drawn on top of the grid lines."}, {"permalink": "reference/#carpet-aaxis-exponentformat", "name": "carpet > aaxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#carpet-visible", "name": "carpet > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#carpet-b0", "name": "carpet > b0", "description": "Alternate to `b`. Builds a linear space of a coordinates. Use with `db` where `b0` is the starting coordinate and `db` the step."}, {"permalink": "reference/#carpet-font", "name": "carpet > font", "description": "The default font used for axis & tick labels on this carpet"}, {"permalink": "reference/#carpet-font-family", "name": "carpet > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#carpet-font-color", "name": "carpet > font > color", "description": "Properties for color"}, {"permalink": "reference/#carpet-font-size", "name": "carpet > font > size", "description": "Properties for size"}, {"permalink": "reference/#carpet-carpet", "name": "carpet > carpet", "description": "An identifier for this carpet, so that `scattercarpet` and `scattercontour` traces can specify a carpet plot on which they lie"}, {"permalink": "reference/#carpet-showlegend", "name": "carpet > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#carpet-customdata", "name": "carpet > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#carpet-xaxis", "name": "carpet > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#carpet-type", "name": "carpet > type", "description": "Properties for type"}, {"permalink": "reference/#carpet-opacity", "name": "carpet > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#carpet-legendgroup", "name": "carpet > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#carpet-db", "name": "carpet > db", "description": "Sets the b coordinate step. See `b0` for more info."}, {"permalink": "reference/#carpet-da", "name": "carpet > da", "description": "Sets the a coordinate step. See `a0` for more info."}, {"permalink": "reference/#carpet-a0", "name": "carpet > a0", "description": "Alternate to `a`. Builds a linear space of a coordinates. Use with `da` where `a0` is the starting coordinate and `da` the step."}, {"permalink": "reference/#carpet-hoverlabel", "name": "carpet > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#carpet-hoverlabel-bordercolor", "name": "carpet > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#carpet-hoverlabel-bgcolor", "name": "carpet > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#carpet-hoverlabel-namelength", "name": "carpet > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#carpet-hoverlabel-font", "name": "carpet > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#carpet-hoverlabel-font-family", "name": "carpet > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#carpet-hoverlabel-font-color", "name": "carpet > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#carpet-hoverlabel-font-size", "name": "carpet > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#carpet-cheaterslope", "name": "carpet > cheaterslope", "description": "The shift applied to each successive row of data in creating a cheater plot. Only used if `x` is been ommitted."}, {"permalink": "reference/#carpet-hoverinfo", "name": "carpet > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#carpet-a", "name": "carpet > a", "description": "An array containing values of the first parameter value"}, {"permalink": "reference/#carpet-b", "name": "carpet > b", "description": "A two dimensional array of y coordinates at each carpet point."}, {"permalink": "reference/#carpet-name", "name": "carpet > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#carpet-yaxis", "name": "carpet > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#carpet-baxis", "name": "carpet > baxis", "description": "Properties for baxis"}, {"permalink": "reference/#carpet-baxis-startlinewidth", "name": "carpet > baxis > startlinewidth", "description": "Sets the width (in px) of the start line."}, {"permalink": "reference/#carpet-baxis-showexponent", "name": "carpet > baxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#carpet-baxis-showticklabels", "name": "carpet > baxis > showticklabels", "description": "Determines whether axis labels are drawn on the low side, the high side, both, or neither side of the axis."}, {"permalink": "reference/#carpet-baxis-color", "name": "carpet > baxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#carpet-baxis-categoryarray", "name": "carpet > baxis > categoryarray", "description": "Sets the order in which categories on this axis appear. Only has an effect if `categoryorder` is set to *array*. Used with `categoryorder`."}, {"permalink": "reference/#carpet-baxis-showticksuffix", "name": "carpet > baxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#carpet-baxis-gridwidth", "name": "carpet > baxis > gridwidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#carpet-baxis-titleoffset", "name": "carpet > baxis > titleoffset", "description": "An additional amount by which to offset the title from the tick labels, given in pixels"}, {"permalink": "reference/#carpet-baxis-titlefont", "name": "carpet > baxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#carpet-baxis-titlefont-family", "name": "carpet > baxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#carpet-baxis-titlefont-color", "name": "carpet > baxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#carpet-baxis-titlefont-size", "name": "carpet > baxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#carpet-baxis-startlinecolor", "name": "carpet > baxis > startlinecolor", "description": "Sets the line color of the start line."}, {"permalink": "reference/#carpet-baxis-linecolor", "name": "carpet > baxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#carpet-baxis-showtickprefix", "name": "carpet > baxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#carpet-baxis-rangemode", "name": "carpet > baxis > rangemode", "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data."}, {"permalink": "reference/#carpet-baxis-nticks", "name": "carpet > baxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#carpet-baxis-tickprefix", "name": "carpet > baxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#carpet-baxis-linewidth", "name": "carpet > baxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#carpet-baxis-tickformat", "name": "carpet > baxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#carpet-baxis-tickmode", "name": "carpet > baxis > tickmode", "description": "Properties for tickmode"}, {"permalink": "reference/#carpet-baxis-title", "name": "carpet > baxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#carpet-baxis-minorgridcolor", "name": "carpet > baxis > minorgridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#carpet-baxis-smoothing", "name": "carpet > baxis > smoothing", "description": "Properties for smoothing"}, {"permalink": "reference/#carpet-baxis-labelsuffix", "name": "carpet > baxis > labelsuffix", "description": "Sets a axis label suffix."}, {"permalink": "reference/#carpet-baxis-minorgridwidth", "name": "carpet > baxis > minorgridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#carpet-baxis-cheatertype", "name": "carpet > baxis > cheatertype", "description": "Properties for cheatertype"}, {"permalink": "reference/#carpet-baxis-minorgridcount", "name": "carpet > baxis > minorgridcount", "description": "Sets the number of minor grid ticks per major grid tick"}, {"permalink": "reference/#carpet-baxis-endlinewidth", "name": "carpet > baxis > endlinewidth", "description": "Sets the width (in px) of the end line."}, {"permalink": "reference/#carpet-baxis-type", "name": "carpet > baxis > type", "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question."}, {"permalink": "reference/#carpet-baxis-arraytick0", "name": "carpet > baxis > arraytick0", "description": "The starting index of grid lines along the axis"}, {"permalink": "reference/#carpet-baxis-separatethousands", "name": "carpet > baxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#carpet-baxis-autorange", "name": "carpet > baxis > autorange", "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#carpet-baxis-categoryorder", "name": "carpet > baxis > categoryorder", "description": "Specifies the ordering logic for the case of categorical variables. By default, plotly uses *trace*, which specifies the order that is present in the data supplied. Set `categoryorder` to *category ascending* or *category descending* if order should be determined by the alphanumerical order of the category names. Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to the *trace* mode. The unspecified categories will follow the categories in `categoryarray`."}, {"permalink": "reference/#carpet-baxis-endlinecolor", "name": "carpet > baxis > endlinecolor", "description": "Sets the line color of the end line."}, {"permalink": "reference/#carpet-baxis-startline", "name": "carpet > baxis > startline", "description": "Determines whether or not a line is drawn at along the starting value of this axis. If *true*, the start line is drawn on top of the grid lines."}, {"permalink": "reference/#carpet-baxis-ticksuffix", "name": "carpet > baxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#carpet-baxis-fixedrange", "name": "carpet > baxis > fixedrange", "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled."}, {"permalink": "reference/#carpet-baxis-showline", "name": "carpet > baxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#carpet-baxis-ticktext", "name": "carpet > baxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#carpet-baxis-arraydtick", "name": "carpet > baxis > arraydtick", "description": "The stride between grid lines along the axis"}, {"permalink": "reference/#carpet-baxis-showgrid", "name": "carpet > baxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#carpet-baxis-tickvals", "name": "carpet > baxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#carpet-baxis-tickfont", "name": "carpet > baxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#carpet-baxis-tickfont-family", "name": "carpet > baxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#carpet-baxis-tickfont-color", "name": "carpet > baxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#carpet-baxis-tickfont-size", "name": "carpet > baxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#carpet-baxis-tick0", "name": "carpet > baxis > tick0", "description": "The starting index of grid lines along the axis"}, {"permalink": "reference/#carpet-baxis-tickangle", "name": "carpet > baxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#carpet-baxis-labelprefix", "name": "carpet > baxis > labelprefix", "description": "Sets a axis label prefix."}, {"permalink": "reference/#carpet-baxis-dtick", "name": "carpet > baxis > dtick", "description": "The stride between grid lines along the axis"}, {"permalink": "reference/#carpet-baxis-range", "name": "carpet > baxis > range", "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#carpet-baxis-labelpadding", "name": "carpet > baxis > labelpadding", "description": "Extra padding between label and the axis"}, {"permalink": "reference/#carpet-baxis-gridcolor", "name": "carpet > baxis > gridcolor", "description": "Sets the axis line color."}, {"permalink": "reference/#carpet-baxis-endline", "name": "carpet > baxis > endline", "description": "Determines whether or not a line is drawn at along the final value of this axis. If *true*, the end line is drawn on top of the grid lines."}, {"permalink": "reference/#carpet-baxis-exponentformat", "name": "carpet > baxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#carpet-ids", "name": "carpet > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#carpet-y", "name": "carpet > y", "description": "A two dimensional array of y coordinates at each carpet point."}, {"permalink": "reference/#carpet-x", "name": "carpet > x", "description": "A two dimensional array of x coordinates at each carpet point. If ommitted, the plot is a cheater plot and the xaxis is hidden by default."}, {"permalink": "reference/#contourcarpet-zmax", "name": "contourcarpet > zmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#contourcarpet-stream", "name": "contourcarpet > stream", "description": "Properties for stream"}, {"permalink": "reference/#contourcarpet-stream-token", "name": "contourcarpet > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#contourcarpet-stream-maxpoints", "name": "contourcarpet > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#contourcarpet-text", "name": "contourcarpet > text", "description": "Sets the text elements associated with each z value."}, {"permalink": "reference/#contourcarpet-zmin", "name": "contourcarpet > zmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#contourcarpet-visible", "name": "contourcarpet > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#contourcarpet-b0", "name": "contourcarpet > b0", "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step."}, {"permalink": "reference/#contourcarpet-carpet", "name": "contourcarpet > carpet", "description": "The `carpet` of the carpet axes on which this contour trace lies"}, {"permalink": "reference/#contourcarpet-colorbar", "name": "contourcarpet > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#contourcarpet-colorbar-yanchor", "name": "contourcarpet > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#contourcarpet-colorbar-showexponent", "name": "contourcarpet > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#contourcarpet-colorbar-showticklabels", "name": "contourcarpet > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#contourcarpet-colorbar-lenmode", "name": "contourcarpet > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#contourcarpet-colorbar-showticksuffix", "name": "contourcarpet > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#contourcarpet-colorbar-titlefont", "name": "contourcarpet > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#contourcarpet-colorbar-titlefont-family", "name": "contourcarpet > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contourcarpet-colorbar-titlefont-color", "name": "contourcarpet > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#contourcarpet-colorbar-titlefont-size", "name": "contourcarpet > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#contourcarpet-colorbar-borderwidth", "name": "contourcarpet > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#contourcarpet-colorbar-nticks", "name": "contourcarpet > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#contourcarpet-colorbar-showtickprefix", "name": "contourcarpet > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#contourcarpet-colorbar-titleside", "name": "contourcarpet > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#contourcarpet-colorbar-outlinecolor", "name": "contourcarpet > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#contourcarpet-colorbar-tickprefix", "name": "contourcarpet > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#contourcarpet-colorbar-tickformat", "name": "contourcarpet > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#contourcarpet-colorbar-tickmode", "name": "contourcarpet > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#contourcarpet-colorbar-title", "name": "contourcarpet > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#contourcarpet-colorbar-ticks", "name": "contourcarpet > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#contourcarpet-colorbar-thickness", "name": "contourcarpet > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#contourcarpet-colorbar-bgcolor", "name": "contourcarpet > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#contourcarpet-colorbar-outlinewidth", "name": "contourcarpet > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#contourcarpet-colorbar-bordercolor", "name": "contourcarpet > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#contourcarpet-colorbar-xanchor", "name": "contourcarpet > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#contourcarpet-colorbar-separatethousands", "name": "contourcarpet > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#contourcarpet-colorbar-ticklen", "name": "contourcarpet > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#contourcarpet-colorbar-len", "name": "contourcarpet > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#contourcarpet-colorbar-ticksuffix", "name": "contourcarpet > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#contourcarpet-colorbar-tickcolor", "name": "contourcarpet > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#contourcarpet-colorbar-ticktext", "name": "contourcarpet > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#contourcarpet-colorbar-xpad", "name": "contourcarpet > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#contourcarpet-colorbar-tickvals", "name": "contourcarpet > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#contourcarpet-colorbar-tickfont", "name": "contourcarpet > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#contourcarpet-colorbar-tickfont-family", "name": "contourcarpet > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contourcarpet-colorbar-tickfont-color", "name": "contourcarpet > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#contourcarpet-colorbar-tickfont-size", "name": "contourcarpet > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#contourcarpet-colorbar-tickwidth", "name": "contourcarpet > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#contourcarpet-colorbar-tick0", "name": "contourcarpet > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#contourcarpet-colorbar-tickangle", "name": "contourcarpet > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#contourcarpet-colorbar-dtick", "name": "contourcarpet > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#contourcarpet-colorbar-ypad", "name": "contourcarpet > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#contourcarpet-colorbar-exponentformat", "name": "contourcarpet > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#contourcarpet-colorbar-y", "name": "contourcarpet > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#contourcarpet-colorbar-x", "name": "contourcarpet > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#contourcarpet-colorbar-thicknessmode", "name": "contourcarpet > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#contourcarpet-showlegend", "name": "contourcarpet > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#contourcarpet-customdata", "name": "contourcarpet > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#contourcarpet-ncontours", "name": "contourcarpet > ncontours", "description": "Sets the maximum number of contour levels. The actual number of contours will be chosen automatically to be less than or equal to the value of `ncontours`. Has an effect only if `autocontour` is *true* or if `contours.size` is missing."}, {"permalink": "reference/#contourcarpet-contours", "name": "contourcarpet > contours", "description": "Properties for contours"}, {"permalink": "reference/#contourcarpet-contours-coloring", "name": "contourcarpet > contours > coloring", "description": "Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace."}, {"permalink": "reference/#contourcarpet-contours-end", "name": "contourcarpet > contours > end", "description": "Sets the end contour level value. Must be more than `contours.start`"}, {"permalink": "reference/#contourcarpet-contours-showlabels", "name": "contourcarpet > contours > showlabels", "description": "Determines whether to label the contour lines with their values."}, {"permalink": "reference/#contourcarpet-contours-showlines", "name": "contourcarpet > contours > showlines", "description": "Determines whether or not the contour lines are drawn. Has an effect only if `contours.coloring` is set to *fill*."}, {"permalink": "reference/#contourcarpet-contours-labelfont", "name": "contourcarpet > contours > labelfont", "description": "Sets the font used for labeling the contour levels. The default color comes from the lines, if shown. The default family and size come from `layout.font`."}, {"permalink": "reference/#contourcarpet-contours-labelfont-family", "name": "contourcarpet > contours > labelfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contourcarpet-contours-labelfont-color", "name": "contourcarpet > contours > labelfont > color", "description": "Properties for color"}, {"permalink": "reference/#contourcarpet-contours-labelfont-size", "name": "contourcarpet > contours > labelfont > size", "description": "Properties for size"}, {"permalink": "reference/#contourcarpet-contours-value", "name": "contourcarpet > contours > value", "description": "Sets the value or values by which to filter by. Values are expected to be in the same type as the data linked to *target*. When `operation` is set to one of the inequality values (=,<,>=,>,<=) *value* is expected to be a number or a string. When `operation` is set to one of the interval value ([],(),[),(],][,)(,](,)[) *value* is expected to be 2-item array where the first item is the lower bound and the second item is the upper bound. When `operation`, is set to one of the set value ({},}{) *value* is expected to be an array with as many items as the desired set elements."}, {"permalink": "reference/#contourcarpet-contours-start", "name": "contourcarpet > contours > start", "description": "Sets the starting contour level value. Must be less than `contours.end`"}, {"permalink": "reference/#contourcarpet-contours-labelformat", "name": "contourcarpet > contours > labelformat", "description": "Sets the contour label formatting rule using d3 formatting mini-language which is very similar to Python, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format."}, {"permalink": "reference/#contourcarpet-contours-operation", "name": "contourcarpet > contours > operation", "description": "Sets the filter operation. *=* keeps items equal to `value` *<* keeps items less than `value` *<=* keeps items less than or equal to `value` *>* keeps items greater than `value` *>=* keeps items greater than or equal to `value` *[]* keeps items inside `value[0]` to value[1]` including both bounds` *()* keeps items inside `value[0]` to value[1]` excluding both bounds` *[)* keeps items inside `value[0]` to value[1]` including `value[0]` but excluding `value[1] *(]* keeps items inside `value[0]` to value[1]` excluding `value[0]` but including `value[1] *][* keeps items outside `value[0]` to value[1]` and equal to both bounds` *)(* keeps items outside `value[0]` to value[1]` *](* keeps items outside `value[0]` to value[1]` and equal to `value[0]` *)[* keeps items outside `value[0]` to value[1]` and equal to `value[1]`"}, {"permalink": "reference/#contourcarpet-contours-type", "name": "contourcarpet > contours > type", "description": "If `levels`, the data is represented as a contour plot with multiple levels displayed. If `constraint`, the data is represented as constraints with the invalid region shaded as specified by the `operation` and `value` parameters."}, {"permalink": "reference/#contourcarpet-contours-size", "name": "contourcarpet > contours > size", "description": "Sets the step between each contour level. Must be positive."}, {"permalink": "reference/#contourcarpet-xaxis", "name": "contourcarpet > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#contourcarpet-type", "name": "contourcarpet > type", "description": "Properties for type"}, {"permalink": "reference/#contourcarpet-opacity", "name": "contourcarpet > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#contourcarpet-legendgroup", "name": "contourcarpet > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#contourcarpet-transpose", "name": "contourcarpet > transpose", "description": "Transposes the z data."}, {"permalink": "reference/#contourcarpet-autocontour", "name": "contourcarpet > autocontour", "description": "Determines whether or not the contour level attributes are picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`."}, {"permalink": "reference/#contourcarpet-db", "name": "contourcarpet > db", "description": "Sets the y coordinate step. See `y0` for more info."}, {"permalink": "reference/#contourcarpet-autocolorscale", "name": "contourcarpet > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#contourcarpet-da", "name": "contourcarpet > da", "description": "Sets the x coordinate step. See `x0` for more info."}, {"permalink": "reference/#contourcarpet-a0", "name": "contourcarpet > a0", "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step."}, {"permalink": "reference/#contourcarpet-hoverlabel", "name": "contourcarpet > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#contourcarpet-hoverlabel-bordercolor", "name": "contourcarpet > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#contourcarpet-hoverlabel-bgcolor", "name": "contourcarpet > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#contourcarpet-hoverlabel-namelength", "name": "contourcarpet > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#contourcarpet-hoverlabel-font", "name": "contourcarpet > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#contourcarpet-hoverlabel-font-family", "name": "contourcarpet > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#contourcarpet-hoverlabel-font-color", "name": "contourcarpet > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#contourcarpet-hoverlabel-font-size", "name": "contourcarpet > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#contourcarpet-fillcolor", "name": "contourcarpet > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#contourcarpet-showscale", "name": "contourcarpet > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#contourcarpet-hoverinfo", "name": "contourcarpet > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#contourcarpet-line", "name": "contourcarpet > line", "description": "Properties for line"}, {"permalink": "reference/#contourcarpet-line-color", "name": "contourcarpet > line > color", "description": "Sets the color of the contour level. Has no if `contours.coloring` is set to *lines*."}, {"permalink": "reference/#contourcarpet-line-smoothing", "name": "contourcarpet > line > smoothing", "description": "Sets the amount of smoothing for the contour lines, where *0* corresponds to no smoothing."}, {"permalink": "reference/#contourcarpet-line-dash", "name": "contourcarpet > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#contourcarpet-line-width", "name": "contourcarpet > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#contourcarpet-zauto", "name": "contourcarpet > zauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#contourcarpet-a", "name": "contourcarpet > a", "description": "Sets the x coordinates."}, {"permalink": "reference/#contourcarpet-b", "name": "contourcarpet > b", "description": "Sets the y coordinates."}, {"permalink": "reference/#contourcarpet-name", "name": "contourcarpet > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#contourcarpet-colorscale", "name": "contourcarpet > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#contourcarpet-connectgaps", "name": "contourcarpet > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in."}, {"permalink": "reference/#contourcarpet-yaxis", "name": "contourcarpet > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#contourcarpet-atype", "name": "contourcarpet > atype", "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided)."}, {"permalink": "reference/#contourcarpet-ids", "name": "contourcarpet > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#contourcarpet-reversescale", "name": "contourcarpet > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#contourcarpet-mode", "name": "contourcarpet > mode", "description": "The mode."}, {"permalink": "reference/#contourcarpet-btype", "name": "contourcarpet > btype", "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)"}, {"permalink": "reference/#contourcarpet-z", "name": "contourcarpet > z", "description": "Sets the z data."}, {"permalink": "reference/#area-opacity", "name": "area > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#area-showlegend", "name": "area > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#area-legendgroup", "name": "area > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#area-name", "name": "area > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#area-stream", "name": "area > stream", "description": "Properties for stream"}, {"permalink": "reference/#area-stream-token", "name": "area > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#area-stream-maxpoints", "name": "area > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#area-customdata", "name": "area > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#area-ids", "name": "area > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#area-visible", "name": "area > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#area-hoverlabel", "name": "area > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#area-hoverlabel-bordercolor", "name": "area > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#area-hoverlabel-bgcolor", "name": "area > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#area-hoverlabel-namelength", "name": "area > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#area-hoverlabel-font", "name": "area > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#area-hoverlabel-font-family", "name": "area > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#area-hoverlabel-font-color", "name": "area > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#area-hoverlabel-font-size", "name": "area > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#area-r", "name": "area > r", "description": "For polar chart only.Sets the radial coordinates."}, {"permalink": "reference/#area-t", "name": "area > t", "description": "For polar chart only.Sets the angular coordinates."}, {"permalink": "reference/#area-hoverinfo", "name": "area > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#area-marker", "name": "area > marker", "description": "Properties for marker"}, {"permalink": "reference/#area-marker-opacity", "name": "area > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#area-marker-color", "name": "area > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#area-marker-symbol", "name": "area > marker > symbol", "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name."}, {"permalink": "reference/#area-marker-size", "name": "area > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#area-type", "name": "area > type", "description": "Properties for type"}, {"permalink": "reference/#ohlc-stream", "name": "ohlc > stream", "description": "Properties for stream"}, {"permalink": "reference/#ohlc-stream-token", "name": "ohlc > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#ohlc-stream-maxpoints", "name": "ohlc > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#ohlc-text", "name": "ohlc > text", "description": "Sets hover text elements associated with each sample point. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to this trace's sample points."}, {"permalink": "reference/#ohlc-high", "name": "ohlc > high", "description": "Sets the high values."}, {"permalink": "reference/#ohlc-visible", "name": "ohlc > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#ohlc-xcalendar", "name": "ohlc > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#ohlc-close", "name": "ohlc > close", "description": "Sets the close values."}, {"permalink": "reference/#ohlc-open", "name": "ohlc > open", "description": "Sets the open values."}, {"permalink": "reference/#ohlc-showlegend", "name": "ohlc > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#ohlc-customdata", "name": "ohlc > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#ohlc-low", "name": "ohlc > low", "description": "Sets the low values."}, {"permalink": "reference/#ohlc-xaxis", "name": "ohlc > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#ohlc-increasing", "name": "ohlc > increasing", "description": "Properties for increasing"}, {"permalink": "reference/#ohlc-increasing-showlegend", "name": "ohlc > increasing > showlegend", "description": "Determines whether or not an item corresponding to this segment is shown in the legend."}, {"permalink": "reference/#ohlc-increasing-line", "name": "ohlc > increasing > line", "description": "Properties for line"}, {"permalink": "reference/#ohlc-increasing-line-color", "name": "ohlc > increasing > line > color", "description": "Sets the line color."}, {"permalink": "reference/#ohlc-increasing-line-width", "name": "ohlc > increasing > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#ohlc-increasing-line-dash", "name": "ohlc > increasing > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#ohlc-increasing-name", "name": "ohlc > increasing > name", "description": "Sets the segment name. The segment name appear as the legend item and on hover."}, {"permalink": "reference/#ohlc-type", "name": "ohlc > type", "description": "Properties for type"}, {"permalink": "reference/#ohlc-opacity", "name": "ohlc > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#ohlc-legendgroup", "name": "ohlc > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#ohlc-hoverlabel", "name": "ohlc > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#ohlc-hoverlabel-bordercolor", "name": "ohlc > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#ohlc-hoverlabel-bgcolor", "name": "ohlc > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#ohlc-hoverlabel-namelength", "name": "ohlc > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#ohlc-hoverlabel-font", "name": "ohlc > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#ohlc-hoverlabel-font-family", "name": "ohlc > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#ohlc-hoverlabel-font-color", "name": "ohlc > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#ohlc-hoverlabel-font-size", "name": "ohlc > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#ohlc-hoverinfo", "name": "ohlc > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#ohlc-line", "name": "ohlc > line", "description": "Properties for line"}, {"permalink": "reference/#ohlc-line-dash", "name": "ohlc > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*). Note that this style setting can also be set per direction via `increasing.line.dash` and `decreasing.line.dash`."}, {"permalink": "reference/#ohlc-line-width", "name": "ohlc > line > width", "description": "[object Object] Note that this style setting can also be set per direction via `increasing.line.width` and `decreasing.line.width`."}, {"permalink": "reference/#ohlc-tickwidth", "name": "ohlc > tickwidth", "description": "Sets the width of the open/close tick marks relative to the *x* minimal interval."}, {"permalink": "reference/#ohlc-name", "name": "ohlc > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#ohlc-yaxis", "name": "ohlc > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#ohlc-ids", "name": "ohlc > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#ohlc-decreasing", "name": "ohlc > decreasing", "description": "Properties for decreasing"}, {"permalink": "reference/#ohlc-decreasing-showlegend", "name": "ohlc > decreasing > showlegend", "description": "Determines whether or not an item corresponding to this segment is shown in the legend."}, {"permalink": "reference/#ohlc-decreasing-line", "name": "ohlc > decreasing > line", "description": "Properties for line"}, {"permalink": "reference/#ohlc-decreasing-line-color", "name": "ohlc > decreasing > line > color", "description": "Sets the line color."}, {"permalink": "reference/#ohlc-decreasing-line-width", "name": "ohlc > decreasing > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#ohlc-decreasing-line-dash", "name": "ohlc > decreasing > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#ohlc-decreasing-name", "name": "ohlc > decreasing > name", "description": "Sets the segment name. The segment name appear as the legend item and on hover."}, {"permalink": "reference/#ohlc-x", "name": "ohlc > x", "description": "Sets the x coordinates. If absent, linear coordinate will be generated."}, {"permalink": "reference/#heatmap-zmax", "name": "heatmap > zmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#heatmap-xtype", "name": "heatmap > xtype", "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided)."}, {"permalink": "reference/#heatmap-stream", "name": "heatmap > stream", "description": "Properties for stream"}, {"permalink": "reference/#heatmap-stream-token", "name": "heatmap > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#heatmap-stream-maxpoints", "name": "heatmap > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#heatmap-text", "name": "heatmap > text", "description": "Sets the text elements associated with each z value."}, {"permalink": "reference/#heatmap-zmin", "name": "heatmap > zmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#heatmap-hoverinfo", "name": "heatmap > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#heatmap-visible", "name": "heatmap > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#heatmap-xcalendar", "name": "heatmap > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#heatmap-y0", "name": "heatmap > y0", "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step."}, {"permalink": "reference/#heatmap-colorbar", "name": "heatmap > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#heatmap-colorbar-yanchor", "name": "heatmap > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#heatmap-colorbar-showexponent", "name": "heatmap > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#heatmap-colorbar-showticklabels", "name": "heatmap > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#heatmap-colorbar-lenmode", "name": "heatmap > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#heatmap-colorbar-showticksuffix", "name": "heatmap > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#heatmap-colorbar-titlefont", "name": "heatmap > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#heatmap-colorbar-titlefont-family", "name": "heatmap > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#heatmap-colorbar-titlefont-color", "name": "heatmap > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#heatmap-colorbar-titlefont-size", "name": "heatmap > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#heatmap-colorbar-borderwidth", "name": "heatmap > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#heatmap-colorbar-nticks", "name": "heatmap > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#heatmap-colorbar-showtickprefix", "name": "heatmap > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#heatmap-colorbar-titleside", "name": "heatmap > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#heatmap-colorbar-outlinecolor", "name": "heatmap > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#heatmap-colorbar-tickprefix", "name": "heatmap > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#heatmap-colorbar-tickformat", "name": "heatmap > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#heatmap-colorbar-tickmode", "name": "heatmap > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#heatmap-colorbar-title", "name": "heatmap > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#heatmap-colorbar-ticks", "name": "heatmap > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#heatmap-colorbar-thickness", "name": "heatmap > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#heatmap-colorbar-bgcolor", "name": "heatmap > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#heatmap-colorbar-outlinewidth", "name": "heatmap > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#heatmap-colorbar-bordercolor", "name": "heatmap > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#heatmap-colorbar-xanchor", "name": "heatmap > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#heatmap-colorbar-separatethousands", "name": "heatmap > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#heatmap-colorbar-ticklen", "name": "heatmap > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#heatmap-colorbar-len", "name": "heatmap > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#heatmap-colorbar-ticksuffix", "name": "heatmap > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#heatmap-colorbar-tickcolor", "name": "heatmap > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#heatmap-colorbar-ticktext", "name": "heatmap > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#heatmap-colorbar-xpad", "name": "heatmap > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#heatmap-colorbar-tickvals", "name": "heatmap > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#heatmap-colorbar-tickfont", "name": "heatmap > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#heatmap-colorbar-tickfont-family", "name": "heatmap > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#heatmap-colorbar-tickfont-color", "name": "heatmap > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#heatmap-colorbar-tickfont-size", "name": "heatmap > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#heatmap-colorbar-tickwidth", "name": "heatmap > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#heatmap-colorbar-tick0", "name": "heatmap > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#heatmap-colorbar-tickangle", "name": "heatmap > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#heatmap-colorbar-dtick", "name": "heatmap > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#heatmap-colorbar-ypad", "name": "heatmap > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#heatmap-colorbar-exponentformat", "name": "heatmap > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#heatmap-colorbar-y", "name": "heatmap > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#heatmap-colorbar-x", "name": "heatmap > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#heatmap-colorbar-thicknessmode", "name": "heatmap > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#heatmap-showlegend", "name": "heatmap > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#heatmap-customdata", "name": "heatmap > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#heatmap-ytype", "name": "heatmap > ytype", "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)"}, {"permalink": "reference/#heatmap-xaxis", "name": "heatmap > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#heatmap-ygap", "name": "heatmap > ygap", "description": "Sets the vertical gap (in pixels) between bricks."}, {"permalink": "reference/#heatmap-type", "name": "heatmap > type", "description": "Properties for type"}, {"permalink": "reference/#heatmap-ycalendar", "name": "heatmap > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#heatmap-zsmooth", "name": "heatmap > zsmooth", "description": "Picks a smoothing algorithm use to smooth `z` data."}, {"permalink": "reference/#heatmap-opacity", "name": "heatmap > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#heatmap-legendgroup", "name": "heatmap > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#heatmap-transpose", "name": "heatmap > transpose", "description": "Transposes the z data."}, {"permalink": "reference/#heatmap-autocolorscale", "name": "heatmap > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#heatmap-xgap", "name": "heatmap > xgap", "description": "Sets the horizontal gap (in pixels) between bricks."}, {"permalink": "reference/#heatmap-hoverlabel", "name": "heatmap > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#heatmap-hoverlabel-bordercolor", "name": "heatmap > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#heatmap-hoverlabel-bgcolor", "name": "heatmap > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#heatmap-hoverlabel-namelength", "name": "heatmap > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#heatmap-hoverlabel-font", "name": "heatmap > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#heatmap-hoverlabel-font-family", "name": "heatmap > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#heatmap-hoverlabel-font-color", "name": "heatmap > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#heatmap-hoverlabel-font-size", "name": "heatmap > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#heatmap-dx", "name": "heatmap > dx", "description": "Sets the x coordinate step. See `x0` for more info."}, {"permalink": "reference/#heatmap-dy", "name": "heatmap > dy", "description": "Sets the y coordinate step. See `y0` for more info."}, {"permalink": "reference/#heatmap-showscale", "name": "heatmap > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#heatmap-x0", "name": "heatmap > x0", "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step."}, {"permalink": "reference/#heatmap-zauto", "name": "heatmap > zauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#heatmap-name", "name": "heatmap > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#heatmap-colorscale", "name": "heatmap > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#heatmap-connectgaps", "name": "heatmap > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in."}, {"permalink": "reference/#heatmap-yaxis", "name": "heatmap > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#heatmap-ids", "name": "heatmap > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#heatmap-reversescale", "name": "heatmap > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#heatmap-y", "name": "heatmap > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#heatmap-x", "name": "heatmap > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#heatmap-z", "name": "heatmap > z", "description": "Sets the z data."}, {"permalink": "reference/#scattermapbox-textposition", "name": "scattermapbox > textposition", "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates."}, {"permalink": "reference/#scattermapbox-stream", "name": "scattermapbox > stream", "description": "Properties for stream"}, {"permalink": "reference/#scattermapbox-stream-token", "name": "scattermapbox > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#scattermapbox-stream-maxpoints", "name": "scattermapbox > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#scattermapbox-text", "name": "scattermapbox > text", "description": "Sets text elements associated with each (lon,lat) pair If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (lon,lat) coordinates. If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#scattermapbox-visible", "name": "scattermapbox > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#scattermapbox-marker", "name": "scattermapbox > marker", "description": "Properties for marker"}, {"permalink": "reference/#scattermapbox-marker-opacity", "name": "scattermapbox > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#scattermapbox-marker-colorbar", "name": "scattermapbox > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#scattermapbox-marker-colorbar-yanchor", "name": "scattermapbox > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#scattermapbox-marker-colorbar-showexponent", "name": "scattermapbox > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#scattermapbox-marker-colorbar-showticklabels", "name": "scattermapbox > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#scattermapbox-marker-colorbar-lenmode", "name": "scattermapbox > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#scattermapbox-marker-colorbar-showticksuffix", "name": "scattermapbox > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#scattermapbox-marker-colorbar-titlefont", "name": "scattermapbox > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#scattermapbox-marker-colorbar-titlefont-family", "name": "scattermapbox > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattermapbox-marker-colorbar-titlefont-color", "name": "scattermapbox > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#scattermapbox-marker-colorbar-titlefont-size", "name": "scattermapbox > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#scattermapbox-marker-colorbar-borderwidth", "name": "scattermapbox > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#scattermapbox-marker-colorbar-nticks", "name": "scattermapbox > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#scattermapbox-marker-colorbar-showtickprefix", "name": "scattermapbox > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#scattermapbox-marker-colorbar-titleside", "name": "scattermapbox > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#scattermapbox-marker-colorbar-outlinecolor", "name": "scattermapbox > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickprefix", "name": "scattermapbox > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickformat", "name": "scattermapbox > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickmode", "name": "scattermapbox > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#scattermapbox-marker-colorbar-title", "name": "scattermapbox > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#scattermapbox-marker-colorbar-ticks", "name": "scattermapbox > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#scattermapbox-marker-colorbar-thickness", "name": "scattermapbox > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#scattermapbox-marker-colorbar-bgcolor", "name": "scattermapbox > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#scattermapbox-marker-colorbar-outlinewidth", "name": "scattermapbox > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#scattermapbox-marker-colorbar-bordercolor", "name": "scattermapbox > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattermapbox-marker-colorbar-xanchor", "name": "scattermapbox > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#scattermapbox-marker-colorbar-separatethousands", "name": "scattermapbox > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#scattermapbox-marker-colorbar-ticklen", "name": "scattermapbox > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#scattermapbox-marker-colorbar-len", "name": "scattermapbox > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#scattermapbox-marker-colorbar-ticksuffix", "name": "scattermapbox > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickcolor", "name": "scattermapbox > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#scattermapbox-marker-colorbar-ticktext", "name": "scattermapbox > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#scattermapbox-marker-colorbar-xpad", "name": "scattermapbox > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickvals", "name": "scattermapbox > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickfont", "name": "scattermapbox > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickfont-family", "name": "scattermapbox > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickfont-color", "name": "scattermapbox > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickfont-size", "name": "scattermapbox > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickwidth", "name": "scattermapbox > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tick0", "name": "scattermapbox > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#scattermapbox-marker-colorbar-tickangle", "name": "scattermapbox > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#scattermapbox-marker-colorbar-dtick", "name": "scattermapbox > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#scattermapbox-marker-colorbar-ypad", "name": "scattermapbox > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#scattermapbox-marker-colorbar-exponentformat", "name": "scattermapbox > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#scattermapbox-marker-colorbar-y", "name": "scattermapbox > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattermapbox-marker-colorbar-x", "name": "scattermapbox > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattermapbox-marker-colorbar-thicknessmode", "name": "scattermapbox > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#scattermapbox-marker-autocolorscale", "name": "scattermapbox > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scattermapbox-marker-sizeref", "name": "scattermapbox > marker > sizeref", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`."}, {"permalink": "reference/#scattermapbox-marker-colorscale", "name": "scattermapbox > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scattermapbox-marker-color", "name": "scattermapbox > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scattermapbox-marker-symbol", "name": "scattermapbox > marker > symbol", "description": "Sets the marker symbol. Full list: https://www.mapbox.com/maki-icons/ Note that the array `marker.color` and `marker.size` are only available for *circle* symbols."}, {"permalink": "reference/#scattermapbox-marker-reversescale", "name": "scattermapbox > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scattermapbox-marker-sizemode", "name": "scattermapbox > marker > sizemode", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels."}, {"permalink": "reference/#scattermapbox-marker-cauto", "name": "scattermapbox > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scattermapbox-marker-showscale", "name": "scattermapbox > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scattermapbox-marker-cmax", "name": "scattermapbox > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#scattermapbox-marker-cmin", "name": "scattermapbox > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#scattermapbox-marker-sizemin", "name": "scattermapbox > marker > sizemin", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points."}, {"permalink": "reference/#scattermapbox-marker-size", "name": "scattermapbox > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#scattermapbox-fill", "name": "scattermapbox > fill", "description": "Sets the area to fill with a solid color. Use with `fillcolor` if not *none*. *toself* connects the endpoints of the trace (or each segment of the trace if it has gaps) into a closed shape."}, {"permalink": "reference/#scattermapbox-showlegend", "name": "scattermapbox > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#scattermapbox-customdata", "name": "scattermapbox > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#scattermapbox-lon", "name": "scattermapbox > lon", "description": "Sets the longitude coordinates (in degrees East)."}, {"permalink": "reference/#scattermapbox-type", "name": "scattermapbox > type", "description": "Properties for type"}, {"permalink": "reference/#scattermapbox-opacity", "name": "scattermapbox > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#scattermapbox-textfont", "name": "scattermapbox > textfont", "description": "Sets the icon text font. Has an effect only when `type` is set to *symbol*."}, {"permalink": "reference/#scattermapbox-textfont-family", "name": "scattermapbox > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattermapbox-textfont-color", "name": "scattermapbox > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#scattermapbox-textfont-size", "name": "scattermapbox > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#scattermapbox-legendgroup", "name": "scattermapbox > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#scattermapbox-hovertext", "name": "scattermapbox > hovertext", "description": "Sets hover text elements associated with each (lon,lat) pair If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (lon,lat) coordinates. To be seen, trace `hoverinfo` must contain a *text* flag."}, {"permalink": "reference/#scattermapbox-hoverlabel", "name": "scattermapbox > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#scattermapbox-hoverlabel-bordercolor", "name": "scattermapbox > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#scattermapbox-hoverlabel-bgcolor", "name": "scattermapbox > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#scattermapbox-hoverlabel-namelength", "name": "scattermapbox > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#scattermapbox-hoverlabel-font", "name": "scattermapbox > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#scattermapbox-hoverlabel-font-family", "name": "scattermapbox > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattermapbox-hoverlabel-font-color", "name": "scattermapbox > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#scattermapbox-hoverlabel-font-size", "name": "scattermapbox > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#scattermapbox-fillcolor", "name": "scattermapbox > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#scattermapbox-hoverinfo", "name": "scattermapbox > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#scattermapbox-lat", "name": "scattermapbox > lat", "description": "Sets the latitude coordinates (in degrees North)."}, {"permalink": "reference/#scattermapbox-line", "name": "scattermapbox > line", "description": "Properties for line"}, {"permalink": "reference/#scattermapbox-line-color", "name": "scattermapbox > line > color", "description": "Sets the line color."}, {"permalink": "reference/#scattermapbox-line-width", "name": "scattermapbox > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#scattermapbox-subplot", "name": "scattermapbox > subplot", "description": "Sets a reference between this trace's data coordinates and a mapbox subplot. If *mapbox* (the default value), the data refer to `layout.mapbox`. If *mapbox2*, the data refer to `layout.mapbox2`, and so on."}, {"permalink": "reference/#scattermapbox-name", "name": "scattermapbox > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#scattermapbox-connectgaps", "name": "scattermapbox > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected."}, {"permalink": "reference/#scattermapbox-ids", "name": "scattermapbox > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#scattermapbox-mode", "name": "scattermapbox > mode", "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover."}, {"permalink": "reference/#scatter3d-textposition", "name": "scatter3d > textposition", "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates."}, {"permalink": "reference/#scatter3d-projection", "name": "scatter3d > projection", "description": "Properties for projection"}, {"permalink": "reference/#scatter3d-projection-y", "name": "scatter3d > projection > y", "description": "Properties for y"}, {"permalink": "reference/#scatter3d-projection-y-opacity", "name": "scatter3d > projection > y > opacity", "description": "Sets the projection color."}, {"permalink": "reference/#scatter3d-projection-y-scale", "name": "scatter3d > projection > y > scale", "description": "Sets the scale factor determining the size of the projection marker points."}, {"permalink": "reference/#scatter3d-projection-y-show", "name": "scatter3d > projection > y > show", "description": "Sets whether or not projections are shown along the y axis."}, {"permalink": "reference/#scatter3d-projection-x", "name": "scatter3d > projection > x", "description": "Properties for x"}, {"permalink": "reference/#scatter3d-projection-x-opacity", "name": "scatter3d > projection > x > opacity", "description": "Sets the projection color."}, {"permalink": "reference/#scatter3d-projection-x-scale", "name": "scatter3d > projection > x > scale", "description": "Sets the scale factor determining the size of the projection marker points."}, {"permalink": "reference/#scatter3d-projection-x-show", "name": "scatter3d > projection > x > show", "description": "Sets whether or not projections are shown along the x axis."}, {"permalink": "reference/#scatter3d-projection-z", "name": "scatter3d > projection > z", "description": "Properties for z"}, {"permalink": "reference/#scatter3d-projection-z-opacity", "name": "scatter3d > projection > z > opacity", "description": "Sets the projection color."}, {"permalink": "reference/#scatter3d-projection-z-scale", "name": "scatter3d > projection > z > scale", "description": "Sets the scale factor determining the size of the projection marker points."}, {"permalink": "reference/#scatter3d-projection-z-show", "name": "scatter3d > projection > z > show", "description": "Sets whether or not projections are shown along the z axis."}, {"permalink": "reference/#scatter3d-stream", "name": "scatter3d > stream", "description": "Properties for stream"}, {"permalink": "reference/#scatter3d-stream-token", "name": "scatter3d > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#scatter3d-stream-maxpoints", "name": "scatter3d > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#scatter3d-text", "name": "scatter3d > text", "description": "Sets text elements associated with each (x,y,z) triplet. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y,z) coordinates. If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#scatter3d-ycalendar", "name": "scatter3d > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#scatter3d-scene", "name": "scatter3d > scene", "description": "Sets a reference between this trace's 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on."}, {"permalink": "reference/#scatter3d-visible", "name": "scatter3d > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#scatter3d-xcalendar", "name": "scatter3d > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#scatter3d-marker", "name": "scatter3d > marker", "description": "Properties for marker"}, {"permalink": "reference/#scatter3d-marker-opacity", "name": "scatter3d > marker > opacity", "description": "Sets the marker opacity. Note that the marker opacity for scatter3d traces must be a scalar value for performance reasons. To set a blending opacity value (i.e. which is not transparent), set *marker.color* to an rgba color and use its alpha channel."}, {"permalink": "reference/#scatter3d-marker-reversescale", "name": "scatter3d > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scatter3d-marker-autocolorscale", "name": "scatter3d > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scatter3d-marker-sizeref", "name": "scatter3d > marker > sizeref", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`."}, {"permalink": "reference/#scatter3d-marker-colorscale", "name": "scatter3d > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scatter3d-marker-color", "name": "scatter3d > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scatter3d-marker-symbol", "name": "scatter3d > marker > symbol", "description": "Sets the marker symbol type."}, {"permalink": "reference/#scatter3d-marker-colorbar", "name": "scatter3d > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#scatter3d-marker-colorbar-yanchor", "name": "scatter3d > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#scatter3d-marker-colorbar-showexponent", "name": "scatter3d > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#scatter3d-marker-colorbar-showticklabels", "name": "scatter3d > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#scatter3d-marker-colorbar-lenmode", "name": "scatter3d > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#scatter3d-marker-colorbar-showticksuffix", "name": "scatter3d > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#scatter3d-marker-colorbar-titlefont", "name": "scatter3d > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#scatter3d-marker-colorbar-titlefont-family", "name": "scatter3d > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter3d-marker-colorbar-titlefont-color", "name": "scatter3d > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#scatter3d-marker-colorbar-titlefont-size", "name": "scatter3d > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#scatter3d-marker-colorbar-borderwidth", "name": "scatter3d > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#scatter3d-marker-colorbar-nticks", "name": "scatter3d > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#scatter3d-marker-colorbar-showtickprefix", "name": "scatter3d > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#scatter3d-marker-colorbar-titleside", "name": "scatter3d > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#scatter3d-marker-colorbar-outlinecolor", "name": "scatter3d > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scatter3d-marker-colorbar-tickprefix", "name": "scatter3d > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#scatter3d-marker-colorbar-tickformat", "name": "scatter3d > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#scatter3d-marker-colorbar-tickmode", "name": "scatter3d > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#scatter3d-marker-colorbar-title", "name": "scatter3d > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#scatter3d-marker-colorbar-ticks", "name": "scatter3d > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#scatter3d-marker-colorbar-thickness", "name": "scatter3d > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#scatter3d-marker-colorbar-bgcolor", "name": "scatter3d > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#scatter3d-marker-colorbar-outlinewidth", "name": "scatter3d > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#scatter3d-marker-colorbar-bordercolor", "name": "scatter3d > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scatter3d-marker-colorbar-xanchor", "name": "scatter3d > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#scatter3d-marker-colorbar-separatethousands", "name": "scatter3d > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#scatter3d-marker-colorbar-ticklen", "name": "scatter3d > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#scatter3d-marker-colorbar-len", "name": "scatter3d > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#scatter3d-marker-colorbar-ticksuffix", "name": "scatter3d > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#scatter3d-marker-colorbar-tickcolor", "name": "scatter3d > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#scatter3d-marker-colorbar-ticktext", "name": "scatter3d > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#scatter3d-marker-colorbar-xpad", "name": "scatter3d > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#scatter3d-marker-colorbar-tickvals", "name": "scatter3d > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#scatter3d-marker-colorbar-tickfont", "name": "scatter3d > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#scatter3d-marker-colorbar-tickfont-family", "name": "scatter3d > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter3d-marker-colorbar-tickfont-color", "name": "scatter3d > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#scatter3d-marker-colorbar-tickfont-size", "name": "scatter3d > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#scatter3d-marker-colorbar-tickwidth", "name": "scatter3d > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#scatter3d-marker-colorbar-tick0", "name": "scatter3d > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#scatter3d-marker-colorbar-tickangle", "name": "scatter3d > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#scatter3d-marker-colorbar-dtick", "name": "scatter3d > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#scatter3d-marker-colorbar-ypad", "name": "scatter3d > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#scatter3d-marker-colorbar-exponentformat", "name": "scatter3d > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#scatter3d-marker-colorbar-y", "name": "scatter3d > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#scatter3d-marker-colorbar-x", "name": "scatter3d > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#scatter3d-marker-colorbar-thicknessmode", "name": "scatter3d > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#scatter3d-marker-sizemode", "name": "scatter3d > marker > sizemode", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels."}, {"permalink": "reference/#scatter3d-marker-cauto", "name": "scatter3d > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scatter3d-marker-showscale", "name": "scatter3d > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scatter3d-marker-line", "name": "scatter3d > marker > line", "description": "Properties for line"}, {"permalink": "reference/#scatter3d-marker-line-autocolorscale", "name": "scatter3d > marker > line > autocolorscale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scatter3d-marker-line-cmin", "name": "scatter3d > marker > line > cmin", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmax` must be set as well."}, {"permalink": "reference/#scatter3d-marker-line-colorscale", "name": "scatter3d > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `marker.line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.line.cmin` and `marker.line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scatter3d-marker-line-color", "name": "scatter3d > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scatter3d-marker-line-reversescale", "name": "scatter3d > marker > line > reversescale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scatter3d-marker-line-width", "name": "scatter3d > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#scatter3d-marker-line-cauto", "name": "scatter3d > marker > line > cauto", "description": "Has an effect only if `marker.line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scatter3d-marker-line-cmax", "name": "scatter3d > marker > line > cmax", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmin` must be set as well."}, {"permalink": "reference/#scatter3d-marker-cmax", "name": "scatter3d > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#scatter3d-marker-cmin", "name": "scatter3d > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#scatter3d-marker-sizemin", "name": "scatter3d > marker > sizemin", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points."}, {"permalink": "reference/#scatter3d-marker-size", "name": "scatter3d > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#scatter3d-x", "name": "scatter3d > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#scatter3d-showlegend", "name": "scatter3d > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#scatter3d-error_x", "name": "scatter3d > error_x", "description": "Properties for error_x"}, {"permalink": "reference/#scatter3d-error_x-copy_ystyle", "name": "scatter3d > error_x > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#scatter3d-error_x-tracerefminus", "name": "scatter3d > error_x > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#scatter3d-error_x-width", "name": "scatter3d > error_x > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#scatter3d-error_x-copy_zstyle", "name": "scatter3d > error_x > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#scatter3d-error_x-value", "name": "scatter3d > error_x > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#scatter3d-error_x-thickness", "name": "scatter3d > error_x > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#scatter3d-error_x-symmetric", "name": "scatter3d > error_x > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#scatter3d-error_x-visible", "name": "scatter3d > error_x > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#scatter3d-error_x-traceref", "name": "scatter3d > error_x > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#scatter3d-error_x-valueminus", "name": "scatter3d > error_x > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#scatter3d-error_x-arrayminus", "name": "scatter3d > error_x > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter3d-error_x-array", "name": "scatter3d > error_x > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter3d-error_x-type", "name": "scatter3d > error_x > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#scatter3d-error_x-color", "name": "scatter3d > error_x > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#scatter3d-error_y", "name": "scatter3d > error_y", "description": "Properties for error_y"}, {"permalink": "reference/#scatter3d-error_y-copy_ystyle", "name": "scatter3d > error_y > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#scatter3d-error_y-tracerefminus", "name": "scatter3d > error_y > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#scatter3d-error_y-width", "name": "scatter3d > error_y > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#scatter3d-error_y-copy_zstyle", "name": "scatter3d > error_y > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#scatter3d-error_y-value", "name": "scatter3d > error_y > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#scatter3d-error_y-thickness", "name": "scatter3d > error_y > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#scatter3d-error_y-symmetric", "name": "scatter3d > error_y > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#scatter3d-error_y-visible", "name": "scatter3d > error_y > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#scatter3d-error_y-traceref", "name": "scatter3d > error_y > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#scatter3d-error_y-valueminus", "name": "scatter3d > error_y > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#scatter3d-error_y-arrayminus", "name": "scatter3d > error_y > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter3d-error_y-array", "name": "scatter3d > error_y > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter3d-error_y-type", "name": "scatter3d > error_y > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#scatter3d-error_y-color", "name": "scatter3d > error_y > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#scatter3d-error_z", "name": "scatter3d > error_z", "description": "Properties for error_z"}, {"permalink": "reference/#scatter3d-error_z-copy_ystyle", "name": "scatter3d > error_z > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#scatter3d-error_z-tracerefminus", "name": "scatter3d > error_z > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#scatter3d-error_z-width", "name": "scatter3d > error_z > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#scatter3d-error_z-copy_zstyle", "name": "scatter3d > error_z > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#scatter3d-error_z-value", "name": "scatter3d > error_z > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#scatter3d-error_z-thickness", "name": "scatter3d > error_z > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#scatter3d-error_z-symmetric", "name": "scatter3d > error_z > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#scatter3d-error_z-visible", "name": "scatter3d > error_z > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#scatter3d-error_z-traceref", "name": "scatter3d > error_z > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#scatter3d-error_z-valueminus", "name": "scatter3d > error_z > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#scatter3d-error_z-arrayminus", "name": "scatter3d > error_z > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter3d-error_z-array", "name": "scatter3d > error_z > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter3d-error_z-type", "name": "scatter3d > error_z > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#scatter3d-error_z-color", "name": "scatter3d > error_z > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#scatter3d-customdata", "name": "scatter3d > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#scatter3d-surfacecolor", "name": "scatter3d > surfacecolor", "description": "Sets the surface fill color."}, {"permalink": "reference/#scatter3d-zcalendar", "name": "scatter3d > zcalendar", "description": "Sets the calendar system to use with `z` date data."}, {"permalink": "reference/#scatter3d-type", "name": "scatter3d > type", "description": "Properties for type"}, {"permalink": "reference/#scatter3d-opacity", "name": "scatter3d > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#scatter3d-textfont", "name": "scatter3d > textfont", "description": "Sets the text font."}, {"permalink": "reference/#scatter3d-textfont-family", "name": "scatter3d > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter3d-textfont-color", "name": "scatter3d > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#scatter3d-textfont-size", "name": "scatter3d > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#scatter3d-legendgroup", "name": "scatter3d > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#scatter3d-hovertext", "name": "scatter3d > hovertext", "description": "Sets text elements associated with each (x,y,z) triplet. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y,z) coordinates. To be seen, trace `hoverinfo` must contain a *text* flag."}, {"permalink": "reference/#scatter3d-hoverlabel", "name": "scatter3d > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#scatter3d-hoverlabel-bordercolor", "name": "scatter3d > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#scatter3d-hoverlabel-bgcolor", "name": "scatter3d > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#scatter3d-hoverlabel-namelength", "name": "scatter3d > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#scatter3d-hoverlabel-font", "name": "scatter3d > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#scatter3d-hoverlabel-font-family", "name": "scatter3d > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter3d-hoverlabel-font-color", "name": "scatter3d > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#scatter3d-hoverlabel-font-size", "name": "scatter3d > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#scatter3d-hoverinfo", "name": "scatter3d > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#scatter3d-line", "name": "scatter3d > line", "description": "Properties for line"}, {"permalink": "reference/#scatter3d-line-reversescale", "name": "scatter3d > line > reversescale", "description": "Has an effect only if `line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scatter3d-line-autocolorscale", "name": "scatter3d > line > autocolorscale", "description": "Has an effect only if `line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scatter3d-line-cmin", "name": "scatter3d > line > cmin", "description": "Has an effect only if `line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `line.color` array index, and if set, `line.cmax` must be set as well."}, {"permalink": "reference/#scatter3d-line-colorscale", "name": "scatter3d > line > colorscale", "description": "Sets the colorscale and only has an effect if `line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `line.cmin` and `line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scatter3d-line-color", "name": "scatter3d > line > color", "description": "Sets the line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scatter3d-line-dash", "name": "scatter3d > line > dash", "description": "Sets the dash style of the lines."}, {"permalink": "reference/#scatter3d-line-width", "name": "scatter3d > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#scatter3d-line-cauto", "name": "scatter3d > line > cauto", "description": "Has an effect only if `line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scatter3d-line-showscale", "name": "scatter3d > line > showscale", "description": "Has an effect only if `line.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scatter3d-line-cmax", "name": "scatter3d > line > cmax", "description": "Has an effect only if `line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `line.color` array index, and if set, `line.cmin` must be set as well."}, {"permalink": "reference/#scatter3d-name", "name": "scatter3d > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#scatter3d-connectgaps", "name": "scatter3d > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected."}, {"permalink": "reference/#scatter3d-ids", "name": "scatter3d > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#scatter3d-mode", "name": "scatter3d > mode", "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*."}, {"permalink": "reference/#scatter3d-y", "name": "scatter3d > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#scatter3d-surfaceaxis", "name": "scatter3d > surfaceaxis", "description": "If *-1*, the scatter points are not fill with a surface If *0*, *1*, *2*, the scatter points are filled with a Delaunay surface about the x, y, z respectively."}, {"permalink": "reference/#scatter3d-z", "name": "scatter3d > z", "description": "Sets the z coordinates."}, {"permalink": "reference/#pointcloud-stream", "name": "pointcloud > stream", "description": "Properties for stream"}, {"permalink": "reference/#pointcloud-stream-token", "name": "pointcloud > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#pointcloud-stream-maxpoints", "name": "pointcloud > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#pointcloud-text", "name": "pointcloud > text", "description": "Sets text elements associated with each (x,y) pair to appear on hover. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates."}, {"permalink": "reference/#pointcloud-visible", "name": "pointcloud > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#pointcloud-xy", "name": "pointcloud > xy", "description": "Faster alternative to specifying `x` and `y` separately. If supplied, it must be a typed `Float32Array` array that represents points such that `xy[i * 2] = x[i]` and `xy[i * 2 + 1] = y[i]`"}, {"permalink": "reference/#pointcloud-marker", "name": "pointcloud > marker", "description": "Properties for marker"}, {"permalink": "reference/#pointcloud-marker-opacity", "name": "pointcloud > marker > opacity", "description": "Sets the marker opacity. The default value is `1` (fully opaque). If the markers are not fully opaque and there are hundreds of thousands of points, it may cause slower zooming and panning. Opacity fades the color even if `blend` is left on `false` even if there is no translucency effect in that case."}, {"permalink": "reference/#pointcloud-marker-sizemax", "name": "pointcloud > marker > sizemax", "description": "Sets the maximum size (in px) of the rendered marker points. Effective when the `pointcloud` shows only few points."}, {"permalink": "reference/#pointcloud-marker-color", "name": "pointcloud > marker > color", "description": "Sets the marker fill color. It accepts a specific color.If the color is not fully opaque and there are hundreds of thousandsof points, it may cause slower zooming and panning."}, {"permalink": "reference/#pointcloud-marker-blend", "name": "pointcloud > marker > blend", "description": "Determines if colors are blended together for a translucency effect in case `opacity` is specified as a value less then `1`. Setting `blend` to `true` reduces zoom/pan speed if used with large numbers of points."}, {"permalink": "reference/#pointcloud-marker-border", "name": "pointcloud > marker > border", "description": "Properties for border"}, {"permalink": "reference/#pointcloud-marker-border-color", "name": "pointcloud > marker > border > color", "description": "Sets the stroke color. It accepts a specific color. If the color is not fully opaque and there are hundreds of thousands of points, it may cause slower zooming and panning."}, {"permalink": "reference/#pointcloud-marker-border-arearatio", "name": "pointcloud > marker > border > arearatio", "description": "Specifies what fraction of the marker area is covered with the border."}, {"permalink": "reference/#pointcloud-marker-sizemin", "name": "pointcloud > marker > sizemin", "description": "Sets the minimum size (in px) of the rendered marker points, effective when the `pointcloud` shows a million or more points."}, {"permalink": "reference/#pointcloud-showlegend", "name": "pointcloud > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#pointcloud-xbounds", "name": "pointcloud > xbounds", "description": "Specify `xbounds` in the shape of `[xMin, xMax] to avoid looping through the `xy` typed array. Use it in conjunction with `xy` and `ybounds` for the performance benefits."}, {"permalink": "reference/#pointcloud-ybounds", "name": "pointcloud > ybounds", "description": "Specify `ybounds` in the shape of `[yMin, yMax] to avoid looping through the `xy` typed array. Use it in conjunction with `xy` and `xbounds` for the performance benefits."}, {"permalink": "reference/#pointcloud-customdata", "name": "pointcloud > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#pointcloud-xaxis", "name": "pointcloud > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#pointcloud-type", "name": "pointcloud > type", "description": "Properties for type"}, {"permalink": "reference/#pointcloud-opacity", "name": "pointcloud > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#pointcloud-legendgroup", "name": "pointcloud > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#pointcloud-y", "name": "pointcloud > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#pointcloud-hoverlabel", "name": "pointcloud > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#pointcloud-hoverlabel-bordercolor", "name": "pointcloud > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#pointcloud-hoverlabel-bgcolor", "name": "pointcloud > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#pointcloud-hoverlabel-namelength", "name": "pointcloud > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#pointcloud-hoverlabel-font", "name": "pointcloud > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#pointcloud-hoverlabel-font-family", "name": "pointcloud > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#pointcloud-hoverlabel-font-color", "name": "pointcloud > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#pointcloud-hoverlabel-font-size", "name": "pointcloud > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#pointcloud-hoverinfo", "name": "pointcloud > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#pointcloud-name", "name": "pointcloud > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#pointcloud-yaxis", "name": "pointcloud > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#pointcloud-ids", "name": "pointcloud > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#pointcloud-indices", "name": "pointcloud > indices", "description": "A sequential value, 0..n, supply it to avoid creating this array inside plotting. If specified, it must be a typed `Int32Array` array. Its length must be equal to or greater than the number of points. For the best performance and memory use, create one large `indices` typed array that is guaranteed to be at least as long as the largest number of points during use, and reuse it on each `Plotly.restyle()` call."}, {"permalink": "reference/#pointcloud-x", "name": "pointcloud > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#scattergl-stream", "name": "scattergl > stream", "description": "Properties for stream"}, {"permalink": "reference/#scattergl-stream-token", "name": "scattergl > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#scattergl-stream-maxpoints", "name": "scattergl > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#scattergl-text", "name": "scattergl > text", "description": "Sets text elements associated with each (x,y) pair to appear on hover. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates."}, {"permalink": "reference/#scattergl-ycalendar", "name": "scattergl > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#scattergl-hoverinfo", "name": "scattergl > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#scattergl-visible", "name": "scattergl > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#scattergl-xcalendar", "name": "scattergl > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#scattergl-marker", "name": "scattergl > marker", "description": "Properties for marker"}, {"permalink": "reference/#scattergl-marker-cmin", "name": "scattergl > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#scattergl-marker-color", "name": "scattergl > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scattergl-marker-size", "name": "scattergl > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#scattergl-marker-reversescale", "name": "scattergl > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scattergl-marker-autocolorscale", "name": "scattergl > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scattergl-marker-opacity", "name": "scattergl > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#scattergl-marker-sizeref", "name": "scattergl > marker > sizeref", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`."}, {"permalink": "reference/#scattergl-marker-symbol", "name": "scattergl > marker > symbol", "description": "Sets the marker symbol type."}, {"permalink": "reference/#scattergl-marker-showscale", "name": "scattergl > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scattergl-marker-line", "name": "scattergl > marker > line", "description": "Properties for line"}, {"permalink": "reference/#scattergl-marker-line-autocolorscale", "name": "scattergl > marker > line > autocolorscale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scattergl-marker-line-cmin", "name": "scattergl > marker > line > cmin", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmax` must be set as well."}, {"permalink": "reference/#scattergl-marker-line-colorscale", "name": "scattergl > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `marker.line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.line.cmin` and `marker.line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scattergl-marker-line-color", "name": "scattergl > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scattergl-marker-line-reversescale", "name": "scattergl > marker > line > reversescale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scattergl-marker-line-width", "name": "scattergl > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#scattergl-marker-line-cauto", "name": "scattergl > marker > line > cauto", "description": "Has an effect only if `marker.line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scattergl-marker-line-cmax", "name": "scattergl > marker > line > cmax", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmin` must be set as well."}, {"permalink": "reference/#scattergl-marker-colorscale", "name": "scattergl > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scattergl-marker-colorbar", "name": "scattergl > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#scattergl-marker-colorbar-yanchor", "name": "scattergl > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#scattergl-marker-colorbar-showexponent", "name": "scattergl > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#scattergl-marker-colorbar-showticklabels", "name": "scattergl > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#scattergl-marker-colorbar-lenmode", "name": "scattergl > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#scattergl-marker-colorbar-showticksuffix", "name": "scattergl > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#scattergl-marker-colorbar-titlefont", "name": "scattergl > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#scattergl-marker-colorbar-titlefont-family", "name": "scattergl > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattergl-marker-colorbar-titlefont-color", "name": "scattergl > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#scattergl-marker-colorbar-titlefont-size", "name": "scattergl > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#scattergl-marker-colorbar-borderwidth", "name": "scattergl > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#scattergl-marker-colorbar-nticks", "name": "scattergl > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#scattergl-marker-colorbar-showtickprefix", "name": "scattergl > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#scattergl-marker-colorbar-titleside", "name": "scattergl > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#scattergl-marker-colorbar-outlinecolor", "name": "scattergl > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattergl-marker-colorbar-tickprefix", "name": "scattergl > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#scattergl-marker-colorbar-tickformat", "name": "scattergl > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#scattergl-marker-colorbar-tickmode", "name": "scattergl > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#scattergl-marker-colorbar-title", "name": "scattergl > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#scattergl-marker-colorbar-ticks", "name": "scattergl > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#scattergl-marker-colorbar-thickness", "name": "scattergl > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#scattergl-marker-colorbar-bgcolor", "name": "scattergl > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#scattergl-marker-colorbar-outlinewidth", "name": "scattergl > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#scattergl-marker-colorbar-bordercolor", "name": "scattergl > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattergl-marker-colorbar-xanchor", "name": "scattergl > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#scattergl-marker-colorbar-separatethousands", "name": "scattergl > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#scattergl-marker-colorbar-ticklen", "name": "scattergl > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#scattergl-marker-colorbar-len", "name": "scattergl > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#scattergl-marker-colorbar-ticksuffix", "name": "scattergl > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#scattergl-marker-colorbar-tickcolor", "name": "scattergl > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#scattergl-marker-colorbar-ticktext", "name": "scattergl > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#scattergl-marker-colorbar-xpad", "name": "scattergl > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#scattergl-marker-colorbar-tickvals", "name": "scattergl > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#scattergl-marker-colorbar-tickfont", "name": "scattergl > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#scattergl-marker-colorbar-tickfont-family", "name": "scattergl > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattergl-marker-colorbar-tickfont-color", "name": "scattergl > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#scattergl-marker-colorbar-tickfont-size", "name": "scattergl > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#scattergl-marker-colorbar-tickwidth", "name": "scattergl > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#scattergl-marker-colorbar-tick0", "name": "scattergl > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#scattergl-marker-colorbar-tickangle", "name": "scattergl > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#scattergl-marker-colorbar-dtick", "name": "scattergl > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#scattergl-marker-colorbar-ypad", "name": "scattergl > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#scattergl-marker-colorbar-exponentformat", "name": "scattergl > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#scattergl-marker-colorbar-y", "name": "scattergl > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattergl-marker-colorbar-x", "name": "scattergl > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattergl-marker-colorbar-thicknessmode", "name": "scattergl > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#scattergl-marker-sizemode", "name": "scattergl > marker > sizemode", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels."}, {"permalink": "reference/#scattergl-marker-cauto", "name": "scattergl > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scattergl-marker-cmax", "name": "scattergl > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#scattergl-marker-sizemin", "name": "scattergl > marker > sizemin", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points."}, {"permalink": "reference/#scattergl-y0", "name": "scattergl > y0", "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step."}, {"permalink": "reference/#scattergl-line", "name": "scattergl > line", "description": "Properties for line"}, {"permalink": "reference/#scattergl-line-color", "name": "scattergl > line > color", "description": "Sets the line color."}, {"permalink": "reference/#scattergl-line-width", "name": "scattergl > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#scattergl-line-dash", "name": "scattergl > line > dash", "description": "Sets the style of the lines."}, {"permalink": "reference/#scattergl-fill", "name": "scattergl > fill", "description": "Sets the area to fill with a solid color. Use with `fillcolor` if not *none*. *tozerox* and *tozeroy* fill to x=0 and y=0 respectively. *tonextx* and *tonexty* fill between the endpoints of this trace and the endpoints of the trace before it, connecting those endpoints with straight lines (to make a stacked area graph); if there is no trace before it, they behave like *tozerox* and *tozeroy*. *toself* connects the endpoints of the trace (or each segment of the trace if it has gaps) into a closed shape. *tonext* fills the space between two traces if one completely encloses the other (eg consecutive contour lines), and behaves like *toself* if there is no trace before it. *tonext* should not be used if one trace does not enclose the other."}, {"permalink": "reference/#scattergl-showlegend", "name": "scattergl > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#scattergl-error_x", "name": "scattergl > error_x", "description": "Properties for error_x"}, {"permalink": "reference/#scattergl-error_x-copy_ystyle", "name": "scattergl > error_x > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#scattergl-error_x-tracerefminus", "name": "scattergl > error_x > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#scattergl-error_x-width", "name": "scattergl > error_x > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#scattergl-error_x-copy_zstyle", "name": "scattergl > error_x > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#scattergl-error_x-value", "name": "scattergl > error_x > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#scattergl-error_x-thickness", "name": "scattergl > error_x > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#scattergl-error_x-symmetric", "name": "scattergl > error_x > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#scattergl-error_x-visible", "name": "scattergl > error_x > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#scattergl-error_x-traceref", "name": "scattergl > error_x > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#scattergl-error_x-valueminus", "name": "scattergl > error_x > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#scattergl-error_x-arrayminus", "name": "scattergl > error_x > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#scattergl-error_x-array", "name": "scattergl > error_x > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#scattergl-error_x-type", "name": "scattergl > error_x > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#scattergl-error_x-color", "name": "scattergl > error_x > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#scattergl-error_y", "name": "scattergl > error_y", "description": "Properties for error_y"}, {"permalink": "reference/#scattergl-error_y-copy_ystyle", "name": "scattergl > error_y > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#scattergl-error_y-tracerefminus", "name": "scattergl > error_y > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#scattergl-error_y-width", "name": "scattergl > error_y > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#scattergl-error_y-copy_zstyle", "name": "scattergl > error_y > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#scattergl-error_y-value", "name": "scattergl > error_y > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#scattergl-error_y-thickness", "name": "scattergl > error_y > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#scattergl-error_y-symmetric", "name": "scattergl > error_y > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#scattergl-error_y-visible", "name": "scattergl > error_y > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#scattergl-error_y-traceref", "name": "scattergl > error_y > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#scattergl-error_y-valueminus", "name": "scattergl > error_y > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#scattergl-error_y-arrayminus", "name": "scattergl > error_y > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#scattergl-error_y-array", "name": "scattergl > error_y > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#scattergl-error_y-type", "name": "scattergl > error_y > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#scattergl-error_y-color", "name": "scattergl > error_y > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#scattergl-customdata", "name": "scattergl > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#scattergl-xaxis", "name": "scattergl > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#scattergl-type", "name": "scattergl > type", "description": "Properties for type"}, {"permalink": "reference/#scattergl-opacity", "name": "scattergl > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#scattergl-legendgroup", "name": "scattergl > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#scattergl-hoverlabel", "name": "scattergl > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#scattergl-hoverlabel-bordercolor", "name": "scattergl > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#scattergl-hoverlabel-bgcolor", "name": "scattergl > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#scattergl-hoverlabel-namelength", "name": "scattergl > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#scattergl-hoverlabel-font", "name": "scattergl > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#scattergl-hoverlabel-font-family", "name": "scattergl > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattergl-hoverlabel-font-color", "name": "scattergl > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#scattergl-hoverlabel-font-size", "name": "scattergl > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#scattergl-fillcolor", "name": "scattergl > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#scattergl-dx", "name": "scattergl > dx", "description": "Sets the x coordinate step. See `x0` for more info."}, {"permalink": "reference/#scattergl-dy", "name": "scattergl > dy", "description": "Sets the y coordinate step. See `y0` for more info."}, {"permalink": "reference/#scattergl-x0", "name": "scattergl > x0", "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step."}, {"permalink": "reference/#scattergl-name", "name": "scattergl > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#scattergl-yaxis", "name": "scattergl > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#scattergl-connectgaps", "name": "scattergl > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected."}, {"permalink": "reference/#scattergl-ids", "name": "scattergl > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#scattergl-mode", "name": "scattergl > mode", "description": "Determines the drawing mode for this scatter trace."}, {"permalink": "reference/#scattergl-y", "name": "scattergl > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#scattergl-x", "name": "scattergl > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#histogram-cumulative", "name": "histogram > cumulative", "description": "Properties for cumulative"}, {"permalink": "reference/#histogram-cumulative-currentbin", "name": "histogram > cumulative > currentbin", "description": "Only applies if cumulative is enabled. Sets whether the current bin is included, excluded, or has half of its value included in the current cumulative value. *include* is the default for compatibility with various other tools, however it introduces a half-bin bias to the results. *exclude* makes the opposite half-bin bias, and *half* removes it."}, {"permalink": "reference/#histogram-cumulative-direction", "name": "histogram > cumulative > direction", "description": "Only applies if cumulative is enabled. If *increasing* (default) we sum all prior bins, so the result increases from left to right. If *decreasing* we sum later bins so the result decreases from left to right."}, {"permalink": "reference/#histogram-cumulative-enabled", "name": "histogram > cumulative > enabled", "description": "If true, display the cumulative distribution by summing the binned values. Use the `direction` and `centralbin` attributes to tune the accumulation method. Note: in this mode, the *density* `histnorm` settings behave the same as their equivalents without *density*: ** and *density* both rise to the number of data points, and *probability* and *probability density* both rise to the number of sample points."}, {"permalink": "reference/#histogram-orientation", "name": "histogram > orientation", "description": "Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal)."}, {"permalink": "reference/#histogram-stream", "name": "histogram > stream", "description": "Properties for stream"}, {"permalink": "reference/#histogram-stream-token", "name": "histogram > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#histogram-stream-maxpoints", "name": "histogram > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#histogram-text", "name": "histogram > text", "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates. If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#histogram-ycalendar", "name": "histogram > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#histogram-xbins", "name": "histogram > xbins", "description": "Properties for xbins"}, {"permalink": "reference/#histogram-xbins-end", "name": "histogram > xbins > end", "description": "Sets the end value for the x axis bins."}, {"permalink": "reference/#histogram-xbins-start", "name": "histogram > xbins > start", "description": "Sets the starting value for the x axis bins."}, {"permalink": "reference/#histogram-xbins-size", "name": "histogram > xbins > size", "description": "Sets the step in-between value each x axis bin."}, {"permalink": "reference/#histogram-visible", "name": "histogram > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#histogram-xcalendar", "name": "histogram > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#histogram-marker", "name": "histogram > marker", "description": "Properties for marker"}, {"permalink": "reference/#histogram-marker-colorbar", "name": "histogram > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#histogram-marker-colorbar-yanchor", "name": "histogram > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#histogram-marker-colorbar-showexponent", "name": "histogram > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#histogram-marker-colorbar-showticklabels", "name": "histogram > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#histogram-marker-colorbar-lenmode", "name": "histogram > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#histogram-marker-colorbar-showticksuffix", "name": "histogram > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#histogram-marker-colorbar-titlefont", "name": "histogram > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#histogram-marker-colorbar-titlefont-family", "name": "histogram > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram-marker-colorbar-titlefont-color", "name": "histogram > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#histogram-marker-colorbar-titlefont-size", "name": "histogram > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#histogram-marker-colorbar-borderwidth", "name": "histogram > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#histogram-marker-colorbar-nticks", "name": "histogram > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#histogram-marker-colorbar-showtickprefix", "name": "histogram > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#histogram-marker-colorbar-titleside", "name": "histogram > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#histogram-marker-colorbar-outlinecolor", "name": "histogram > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#histogram-marker-colorbar-tickprefix", "name": "histogram > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#histogram-marker-colorbar-tickformat", "name": "histogram > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#histogram-marker-colorbar-tickmode", "name": "histogram > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#histogram-marker-colorbar-title", "name": "histogram > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#histogram-marker-colorbar-ticks", "name": "histogram > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#histogram-marker-colorbar-thickness", "name": "histogram > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#histogram-marker-colorbar-bgcolor", "name": "histogram > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#histogram-marker-colorbar-outlinewidth", "name": "histogram > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#histogram-marker-colorbar-bordercolor", "name": "histogram > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#histogram-marker-colorbar-xanchor", "name": "histogram > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#histogram-marker-colorbar-separatethousands", "name": "histogram > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#histogram-marker-colorbar-ticklen", "name": "histogram > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#histogram-marker-colorbar-len", "name": "histogram > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#histogram-marker-colorbar-ticksuffix", "name": "histogram > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#histogram-marker-colorbar-tickcolor", "name": "histogram > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#histogram-marker-colorbar-ticktext", "name": "histogram > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#histogram-marker-colorbar-xpad", "name": "histogram > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#histogram-marker-colorbar-tickvals", "name": "histogram > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#histogram-marker-colorbar-tickfont", "name": "histogram > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#histogram-marker-colorbar-tickfont-family", "name": "histogram > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram-marker-colorbar-tickfont-color", "name": "histogram > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#histogram-marker-colorbar-tickfont-size", "name": "histogram > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#histogram-marker-colorbar-tickwidth", "name": "histogram > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#histogram-marker-colorbar-tick0", "name": "histogram > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#histogram-marker-colorbar-tickangle", "name": "histogram > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#histogram-marker-colorbar-dtick", "name": "histogram > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#histogram-marker-colorbar-ypad", "name": "histogram > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#histogram-marker-colorbar-exponentformat", "name": "histogram > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#histogram-marker-colorbar-y", "name": "histogram > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#histogram-marker-colorbar-x", "name": "histogram > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#histogram-marker-colorbar-thicknessmode", "name": "histogram > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#histogram-marker-autocolorscale", "name": "histogram > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#histogram-marker-cmin", "name": "histogram > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#histogram-marker-colorscale", "name": "histogram > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#histogram-marker-color", "name": "histogram > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#histogram-marker-reversescale", "name": "histogram > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#histogram-marker-cauto", "name": "histogram > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#histogram-marker-showscale", "name": "histogram > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#histogram-marker-line", "name": "histogram > marker > line", "description": "Properties for line"}, {"permalink": "reference/#histogram-marker-line-autocolorscale", "name": "histogram > marker > line > autocolorscale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#histogram-marker-line-cmin", "name": "histogram > marker > line > cmin", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmax` must be set as well."}, {"permalink": "reference/#histogram-marker-line-colorscale", "name": "histogram > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `marker.line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.line.cmin` and `marker.line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#histogram-marker-line-color", "name": "histogram > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#histogram-marker-line-reversescale", "name": "histogram > marker > line > reversescale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#histogram-marker-line-width", "name": "histogram > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#histogram-marker-line-cauto", "name": "histogram > marker > line > cauto", "description": "Has an effect only if `marker.line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#histogram-marker-line-cmax", "name": "histogram > marker > line > cmax", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmin` must be set as well."}, {"permalink": "reference/#histogram-marker-cmax", "name": "histogram > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#histogram-showlegend", "name": "histogram > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#histogram-error_x", "name": "histogram > error_x", "description": "Properties for error_x"}, {"permalink": "reference/#histogram-error_x-copy_ystyle", "name": "histogram > error_x > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#histogram-error_x-tracerefminus", "name": "histogram > error_x > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#histogram-error_x-width", "name": "histogram > error_x > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#histogram-error_x-copy_zstyle", "name": "histogram > error_x > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#histogram-error_x-value", "name": "histogram > error_x > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#histogram-error_x-thickness", "name": "histogram > error_x > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#histogram-error_x-symmetric", "name": "histogram > error_x > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#histogram-error_x-visible", "name": "histogram > error_x > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#histogram-error_x-traceref", "name": "histogram > error_x > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#histogram-error_x-valueminus", "name": "histogram > error_x > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#histogram-error_x-arrayminus", "name": "histogram > error_x > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#histogram-error_x-array", "name": "histogram > error_x > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#histogram-error_x-type", "name": "histogram > error_x > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#histogram-error_x-color", "name": "histogram > error_x > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#histogram-error_y", "name": "histogram > error_y", "description": "Properties for error_y"}, {"permalink": "reference/#histogram-error_y-copy_ystyle", "name": "histogram > error_y > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#histogram-error_y-tracerefminus", "name": "histogram > error_y > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#histogram-error_y-width", "name": "histogram > error_y > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#histogram-error_y-copy_zstyle", "name": "histogram > error_y > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#histogram-error_y-value", "name": "histogram > error_y > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#histogram-error_y-thickness", "name": "histogram > error_y > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#histogram-error_y-symmetric", "name": "histogram > error_y > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#histogram-error_y-visible", "name": "histogram > error_y > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#histogram-error_y-traceref", "name": "histogram > error_y > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#histogram-error_y-valueminus", "name": "histogram > error_y > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#histogram-error_y-arrayminus", "name": "histogram > error_y > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#histogram-error_y-array", "name": "histogram > error_y > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#histogram-error_y-type", "name": "histogram > error_y > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#histogram-error_y-color", "name": "histogram > error_y > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#histogram-customdata", "name": "histogram > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#histogram-xaxis", "name": "histogram > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#histogram-type", "name": "histogram > type", "description": "Properties for type"}, {"permalink": "reference/#histogram-_deprecated-bardir", "name": "histogram > _deprecated > bardir", "description": "Renamed to `orientation`."}, {"permalink": "reference/#histogram-opacity", "name": "histogram > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#histogram-legendgroup", "name": "histogram > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#histogram-hoverlabel", "name": "histogram > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#histogram-hoverlabel-bordercolor", "name": "histogram > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#histogram-hoverlabel-bgcolor", "name": "histogram > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#histogram-hoverlabel-namelength", "name": "histogram > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#histogram-hoverlabel-font", "name": "histogram > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#histogram-hoverlabel-font-family", "name": "histogram > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram-hoverlabel-font-color", "name": "histogram > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#histogram-hoverlabel-font-size", "name": "histogram > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#histogram-nbinsy", "name": "histogram > nbinsy", "description": "Specifies the maximum number of desired bins. This value will be used in an algorithm that will decide the optimal bin size such that the histogram best visualizes the distribution of the data."}, {"permalink": "reference/#histogram-histfunc", "name": "histogram > histfunc", "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively."}, {"permalink": "reference/#histogram-hoverinfo", "name": "histogram > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#histogram-ybins", "name": "histogram > ybins", "description": "Properties for ybins"}, {"permalink": "reference/#histogram-ybins-end", "name": "histogram > ybins > end", "description": "Sets the end value for the y axis bins."}, {"permalink": "reference/#histogram-ybins-start", "name": "histogram > ybins > start", "description": "Sets the starting value for the y axis bins."}, {"permalink": "reference/#histogram-ybins-size", "name": "histogram > ybins > size", "description": "Sets the step in-between value each y axis bin."}, {"permalink": "reference/#histogram-autobiny", "name": "histogram > autobiny", "description": "Determines whether or not the y axis bin attributes are picked by an algorithm. Note that this should be set to false if you want to manually set the number of bins using the attributes in ybins."}, {"permalink": "reference/#histogram-autobinx", "name": "histogram > autobinx", "description": "Determines whether or not the x axis bin attributes are picked by an algorithm. Note that this should be set to false if you want to manually set the number of bins using the attributes in xbins."}, {"permalink": "reference/#histogram-name", "name": "histogram > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#histogram-yaxis", "name": "histogram > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#histogram-ids", "name": "histogram > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#histogram-histnorm", "name": "histogram > histnorm", "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent* / *probability*, the span of each bar corresponds to the percentage / fraction of occurrences with respect to the total number of sample points (here, the sum of all bin HEIGHTS equals 100% / 1). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin AREAS equals the total number of sample points). If *probability density*, the area of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin AREAS equals 1)."}, {"permalink": "reference/#histogram-nbinsx", "name": "histogram > nbinsx", "description": "Specifies the maximum number of desired bins. This value will be used in an algorithm that will decide the optimal bin size such that the histogram best visualizes the distribution of the data."}, {"permalink": "reference/#histogram-y", "name": "histogram > y", "description": "Sets the sample data to be binned on the y axis."}, {"permalink": "reference/#histogram-x", "name": "histogram > x", "description": "Sets the sample data to be binned on the x axis."}, {"permalink": "reference/#pie-textposition", "name": "pie > textposition", "description": "Specifies the location of the `textinfo`."}, {"permalink": "reference/#pie-domain", "name": "pie > domain", "description": "Properties for domain"}, {"permalink": "reference/#pie-domain-y", "name": "pie > domain > y", "description": "Sets the vertical domain of this pie trace (in plot fraction)."}, {"permalink": "reference/#pie-domain-x", "name": "pie > domain > x", "description": "Sets the horizontal domain of this pie trace (in plot fraction)."}, {"permalink": "reference/#pie-stream", "name": "pie > stream", "description": "Properties for stream"}, {"permalink": "reference/#pie-stream-token", "name": "pie > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#pie-stream-maxpoints", "name": "pie > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#pie-text", "name": "pie > text", "description": "Sets text elements associated with each sector. If trace `textinfo` contains a *text* flag, these elements will seen on the chart. If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#pie-labels", "name": "pie > labels", "description": "Sets the sector labels."}, {"permalink": "reference/#pie-direction", "name": "pie > direction", "description": "Specifies the direction at which succeeding sectors follow one another."}, {"permalink": "reference/#pie-visible", "name": "pie > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#pie-marker", "name": "pie > marker", "description": "Properties for marker"}, {"permalink": "reference/#pie-marker-colors", "name": "pie > marker > colors", "description": "Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors."}, {"permalink": "reference/#pie-marker-line", "name": "pie > marker > line", "description": "Properties for line"}, {"permalink": "reference/#pie-marker-line-color", "name": "pie > marker > line > color", "description": "Sets the color of the line enclosing each sector."}, {"permalink": "reference/#pie-marker-line-width", "name": "pie > marker > line > width", "description": "Sets the width (in px) of the line enclosing each sector."}, {"permalink": "reference/#pie-textinfo", "name": "pie > textinfo", "description": "Determines which trace information appear on the graph."}, {"permalink": "reference/#pie-rotation", "name": "pie > rotation", "description": "Instead of the first slice starting at 12 o'clock, rotate to some other angle."}, {"permalink": "reference/#pie-showlegend", "name": "pie > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#pie-customdata", "name": "pie > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#pie-outsidetextfont", "name": "pie > outsidetextfont", "description": "Sets the font used for `textinfo` lying outside the pie."}, {"permalink": "reference/#pie-outsidetextfont-family", "name": "pie > outsidetextfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#pie-outsidetextfont-color", "name": "pie > outsidetextfont > color", "description": "Properties for color"}, {"permalink": "reference/#pie-outsidetextfont-size", "name": "pie > outsidetextfont > size", "description": "Properties for size"}, {"permalink": "reference/#pie-type", "name": "pie > type", "description": "Properties for type"}, {"permalink": "reference/#pie-opacity", "name": "pie > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#pie-textfont", "name": "pie > textfont", "description": "Sets the font used for `textinfo`."}, {"permalink": "reference/#pie-textfont-family", "name": "pie > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#pie-textfont-color", "name": "pie > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#pie-textfont-size", "name": "pie > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#pie-legendgroup", "name": "pie > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#pie-label0", "name": "pie > label0", "description": "Alternate to `labels`. Builds a numeric set of labels. Use with `dlabel` where `label0` is the starting label and `dlabel` the step."}, {"permalink": "reference/#pie-hovertext", "name": "pie > hovertext", "description": "Sets hover text elements associated with each sector. If a single string, the same string appears for all data points. If an array of string, the items are mapped in order of this trace's sectors. To be seen, trace `hoverinfo` must contain a *text* flag."}, {"permalink": "reference/#pie-sort", "name": "pie > sort", "description": "Determines whether or not the sectors are reordered from largest to smallest."}, {"permalink": "reference/#pie-hoverlabel", "name": "pie > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#pie-hoverlabel-bordercolor", "name": "pie > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#pie-hoverlabel-bgcolor", "name": "pie > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#pie-hoverlabel-namelength", "name": "pie > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#pie-hoverlabel-font", "name": "pie > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#pie-hoverlabel-font-family", "name": "pie > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#pie-hoverlabel-font-color", "name": "pie > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#pie-hoverlabel-font-size", "name": "pie > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#pie-hoverinfo", "name": "pie > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#pie-dlabel", "name": "pie > dlabel", "description": "Sets the label step. See `label0` for more info."}, {"permalink": "reference/#pie-hole", "name": "pie > hole", "description": "Sets the fraction of the radius to cut out of the pie. Use this to make a donut chart."}, {"permalink": "reference/#pie-pull", "name": "pie > pull", "description": "Sets the fraction of larger radius to pull the sectors out from the center. This can be a constant to pull all slices apart from each other equally or an array to highlight one or more slices."}, {"permalink": "reference/#pie-name", "name": "pie > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#pie-ids", "name": "pie > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#pie-insidetextfont", "name": "pie > insidetextfont", "description": "Sets the font used for `textinfo` lying inside the pie."}, {"permalink": "reference/#pie-insidetextfont-family", "name": "pie > insidetextfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#pie-insidetextfont-color", "name": "pie > insidetextfont > color", "description": "Properties for color"}, {"permalink": "reference/#pie-insidetextfont-size", "name": "pie > insidetextfont > size", "description": "Properties for size"}, {"permalink": "reference/#pie-values", "name": "pie > values", "description": "Sets the values of the sectors of this pie chart."}, {"permalink": "reference/#pie-scalegroup", "name": "pie > scalegroup", "description": "If there are multiple pies that should be sized according to their totals, link them by providing a non-empty group id here shared by every trace in the same group."}, {"permalink": "reference/#heatmapgl-zmax", "name": "heatmapgl > zmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#heatmapgl-xtype", "name": "heatmapgl > xtype", "description": "If *array*, the heatmap's x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap's x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided)."}, {"permalink": "reference/#heatmapgl-stream", "name": "heatmapgl > stream", "description": "Properties for stream"}, {"permalink": "reference/#heatmapgl-stream-token", "name": "heatmapgl > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#heatmapgl-stream-maxpoints", "name": "heatmapgl > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#heatmapgl-text", "name": "heatmapgl > text", "description": "Sets the text elements associated with each z value."}, {"permalink": "reference/#heatmapgl-zmin", "name": "heatmapgl > zmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#heatmapgl-hoverinfo", "name": "heatmapgl > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#heatmapgl-visible", "name": "heatmapgl > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#heatmapgl-y0", "name": "heatmapgl > y0", "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step."}, {"permalink": "reference/#heatmapgl-colorbar", "name": "heatmapgl > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#heatmapgl-colorbar-yanchor", "name": "heatmapgl > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#heatmapgl-colorbar-showexponent", "name": "heatmapgl > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#heatmapgl-colorbar-showticklabels", "name": "heatmapgl > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#heatmapgl-colorbar-lenmode", "name": "heatmapgl > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#heatmapgl-colorbar-showticksuffix", "name": "heatmapgl > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#heatmapgl-colorbar-titlefont", "name": "heatmapgl > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#heatmapgl-colorbar-titlefont-family", "name": "heatmapgl > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#heatmapgl-colorbar-titlefont-color", "name": "heatmapgl > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#heatmapgl-colorbar-titlefont-size", "name": "heatmapgl > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#heatmapgl-colorbar-borderwidth", "name": "heatmapgl > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#heatmapgl-colorbar-nticks", "name": "heatmapgl > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#heatmapgl-colorbar-showtickprefix", "name": "heatmapgl > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#heatmapgl-colorbar-titleside", "name": "heatmapgl > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#heatmapgl-colorbar-outlinecolor", "name": "heatmapgl > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#heatmapgl-colorbar-tickprefix", "name": "heatmapgl > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#heatmapgl-colorbar-tickformat", "name": "heatmapgl > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#heatmapgl-colorbar-tickmode", "name": "heatmapgl > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#heatmapgl-colorbar-title", "name": "heatmapgl > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#heatmapgl-colorbar-ticks", "name": "heatmapgl > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#heatmapgl-colorbar-thickness", "name": "heatmapgl > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#heatmapgl-colorbar-bgcolor", "name": "heatmapgl > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#heatmapgl-colorbar-outlinewidth", "name": "heatmapgl > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#heatmapgl-colorbar-bordercolor", "name": "heatmapgl > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#heatmapgl-colorbar-xanchor", "name": "heatmapgl > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#heatmapgl-colorbar-separatethousands", "name": "heatmapgl > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#heatmapgl-colorbar-ticklen", "name": "heatmapgl > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#heatmapgl-colorbar-len", "name": "heatmapgl > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#heatmapgl-colorbar-ticksuffix", "name": "heatmapgl > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#heatmapgl-colorbar-tickcolor", "name": "heatmapgl > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#heatmapgl-colorbar-ticktext", "name": "heatmapgl > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#heatmapgl-colorbar-xpad", "name": "heatmapgl > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#heatmapgl-colorbar-tickvals", "name": "heatmapgl > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#heatmapgl-colorbar-tickfont", "name": "heatmapgl > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#heatmapgl-colorbar-tickfont-family", "name": "heatmapgl > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#heatmapgl-colorbar-tickfont-color", "name": "heatmapgl > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#heatmapgl-colorbar-tickfont-size", "name": "heatmapgl > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#heatmapgl-colorbar-tickwidth", "name": "heatmapgl > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#heatmapgl-colorbar-tick0", "name": "heatmapgl > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#heatmapgl-colorbar-tickangle", "name": "heatmapgl > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#heatmapgl-colorbar-dtick", "name": "heatmapgl > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#heatmapgl-colorbar-ypad", "name": "heatmapgl > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#heatmapgl-colorbar-exponentformat", "name": "heatmapgl > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#heatmapgl-colorbar-y", "name": "heatmapgl > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#heatmapgl-colorbar-x", "name": "heatmapgl > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#heatmapgl-colorbar-thicknessmode", "name": "heatmapgl > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#heatmapgl-showlegend", "name": "heatmapgl > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#heatmapgl-customdata", "name": "heatmapgl > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#heatmapgl-ytype", "name": "heatmapgl > ytype", "description": "If *array*, the heatmap's y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap's y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)"}, {"permalink": "reference/#heatmapgl-xaxis", "name": "heatmapgl > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#heatmapgl-type", "name": "heatmapgl > type", "description": "Properties for type"}, {"permalink": "reference/#heatmapgl-opacity", "name": "heatmapgl > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#heatmapgl-legendgroup", "name": "heatmapgl > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#heatmapgl-transpose", "name": "heatmapgl > transpose", "description": "Transposes the z data."}, {"permalink": "reference/#heatmapgl-autocolorscale", "name": "heatmapgl > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#heatmapgl-hoverlabel", "name": "heatmapgl > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#heatmapgl-hoverlabel-bordercolor", "name": "heatmapgl > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#heatmapgl-hoverlabel-bgcolor", "name": "heatmapgl > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#heatmapgl-hoverlabel-namelength", "name": "heatmapgl > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#heatmapgl-hoverlabel-font", "name": "heatmapgl > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#heatmapgl-hoverlabel-font-family", "name": "heatmapgl > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#heatmapgl-hoverlabel-font-color", "name": "heatmapgl > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#heatmapgl-hoverlabel-font-size", "name": "heatmapgl > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#heatmapgl-dx", "name": "heatmapgl > dx", "description": "Sets the x coordinate step. See `x0` for more info."}, {"permalink": "reference/#heatmapgl-dy", "name": "heatmapgl > dy", "description": "Sets the y coordinate step. See `y0` for more info."}, {"permalink": "reference/#heatmapgl-showscale", "name": "heatmapgl > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#heatmapgl-x0", "name": "heatmapgl > x0", "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step."}, {"permalink": "reference/#heatmapgl-zauto", "name": "heatmapgl > zauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#heatmapgl-name", "name": "heatmapgl > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#heatmapgl-colorscale", "name": "heatmapgl > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#heatmapgl-yaxis", "name": "heatmapgl > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#heatmapgl-ids", "name": "heatmapgl > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#heatmapgl-reversescale", "name": "heatmapgl > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#heatmapgl-y", "name": "heatmapgl > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#heatmapgl-x", "name": "heatmapgl > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#heatmapgl-z", "name": "heatmapgl > z", "description": "Sets the z data."}, {"permalink": "reference/#histogram2d-zmax", "name": "histogram2d > zmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#histogram2d-stream", "name": "histogram2d > stream", "description": "Properties for stream"}, {"permalink": "reference/#histogram2d-stream-token", "name": "histogram2d > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#histogram2d-stream-maxpoints", "name": "histogram2d > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#histogram2d-zmin", "name": "histogram2d > zmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#histogram2d-xbins", "name": "histogram2d > xbins", "description": "Properties for xbins"}, {"permalink": "reference/#histogram2d-xbins-end", "name": "histogram2d > xbins > end", "description": "Sets the end value for the x axis bins."}, {"permalink": "reference/#histogram2d-xbins-start", "name": "histogram2d > xbins > start", "description": "Sets the starting value for the x axis bins."}, {"permalink": "reference/#histogram2d-xbins-size", "name": "histogram2d > xbins > size", "description": "Sets the step in-between value each x axis bin."}, {"permalink": "reference/#histogram2d-visible", "name": "histogram2d > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#histogram2d-xcalendar", "name": "histogram2d > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#histogram2d-marker", "name": "histogram2d > marker", "description": "Properties for marker"}, {"permalink": "reference/#histogram2d-marker-color", "name": "histogram2d > marker > color", "description": "Sets the aggregation data."}, {"permalink": "reference/#histogram2d-colorbar", "name": "histogram2d > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#histogram2d-colorbar-yanchor", "name": "histogram2d > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#histogram2d-colorbar-showexponent", "name": "histogram2d > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#histogram2d-colorbar-showticklabels", "name": "histogram2d > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#histogram2d-colorbar-lenmode", "name": "histogram2d > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#histogram2d-colorbar-showticksuffix", "name": "histogram2d > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#histogram2d-colorbar-titlefont", "name": "histogram2d > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#histogram2d-colorbar-titlefont-family", "name": "histogram2d > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram2d-colorbar-titlefont-color", "name": "histogram2d > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#histogram2d-colorbar-titlefont-size", "name": "histogram2d > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#histogram2d-colorbar-borderwidth", "name": "histogram2d > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#histogram2d-colorbar-nticks", "name": "histogram2d > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#histogram2d-colorbar-showtickprefix", "name": "histogram2d > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#histogram2d-colorbar-titleside", "name": "histogram2d > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#histogram2d-colorbar-outlinecolor", "name": "histogram2d > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#histogram2d-colorbar-tickprefix", "name": "histogram2d > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#histogram2d-colorbar-tickformat", "name": "histogram2d > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#histogram2d-colorbar-tickmode", "name": "histogram2d > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#histogram2d-colorbar-title", "name": "histogram2d > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#histogram2d-colorbar-ticks", "name": "histogram2d > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#histogram2d-colorbar-thickness", "name": "histogram2d > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#histogram2d-colorbar-bgcolor", "name": "histogram2d > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#histogram2d-colorbar-outlinewidth", "name": "histogram2d > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#histogram2d-colorbar-bordercolor", "name": "histogram2d > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#histogram2d-colorbar-xanchor", "name": "histogram2d > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#histogram2d-colorbar-separatethousands", "name": "histogram2d > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#histogram2d-colorbar-ticklen", "name": "histogram2d > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#histogram2d-colorbar-len", "name": "histogram2d > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#histogram2d-colorbar-ticksuffix", "name": "histogram2d > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#histogram2d-colorbar-tickcolor", "name": "histogram2d > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#histogram2d-colorbar-ticktext", "name": "histogram2d > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#histogram2d-colorbar-xpad", "name": "histogram2d > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#histogram2d-colorbar-tickvals", "name": "histogram2d > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#histogram2d-colorbar-tickfont", "name": "histogram2d > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#histogram2d-colorbar-tickfont-family", "name": "histogram2d > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram2d-colorbar-tickfont-color", "name": "histogram2d > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#histogram2d-colorbar-tickfont-size", "name": "histogram2d > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#histogram2d-colorbar-tickwidth", "name": "histogram2d > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#histogram2d-colorbar-tick0", "name": "histogram2d > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#histogram2d-colorbar-tickangle", "name": "histogram2d > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#histogram2d-colorbar-dtick", "name": "histogram2d > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#histogram2d-colorbar-ypad", "name": "histogram2d > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#histogram2d-colorbar-exponentformat", "name": "histogram2d > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#histogram2d-colorbar-y", "name": "histogram2d > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#histogram2d-colorbar-x", "name": "histogram2d > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#histogram2d-colorbar-thicknessmode", "name": "histogram2d > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#histogram2d-showlegend", "name": "histogram2d > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#histogram2d-customdata", "name": "histogram2d > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#histogram2d-zauto", "name": "histogram2d > zauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#histogram2d-xaxis", "name": "histogram2d > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#histogram2d-ygap", "name": "histogram2d > ygap", "description": "Sets the vertical gap (in pixels) between bricks."}, {"permalink": "reference/#histogram2d-type", "name": "histogram2d > type", "description": "Properties for type"}, {"permalink": "reference/#histogram2d-ycalendar", "name": "histogram2d > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#histogram2d-zsmooth", "name": "histogram2d > zsmooth", "description": "Picks a smoothing algorithm use to smooth `z` data."}, {"permalink": "reference/#histogram2d-opacity", "name": "histogram2d > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#histogram2d-legendgroup", "name": "histogram2d > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#histogram2d-autocolorscale", "name": "histogram2d > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#histogram2d-xgap", "name": "histogram2d > xgap", "description": "Sets the horizontal gap (in pixels) between bricks."}, {"permalink": "reference/#histogram2d-hoverlabel", "name": "histogram2d > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#histogram2d-hoverlabel-bordercolor", "name": "histogram2d > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#histogram2d-hoverlabel-bgcolor", "name": "histogram2d > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#histogram2d-hoverlabel-namelength", "name": "histogram2d > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#histogram2d-hoverlabel-font", "name": "histogram2d > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#histogram2d-hoverlabel-font-family", "name": "histogram2d > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram2d-hoverlabel-font-color", "name": "histogram2d > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#histogram2d-hoverlabel-font-size", "name": "histogram2d > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#histogram2d-nbinsy", "name": "histogram2d > nbinsy", "description": "Specifies the maximum number of desired bins. This value will be used in an algorithm that will decide the optimal bin size such that the histogram best visualizes the distribution of the data."}, {"permalink": "reference/#histogram2d-histfunc", "name": "histogram2d > histfunc", "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively."}, {"permalink": "reference/#histogram2d-hoverinfo", "name": "histogram2d > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#histogram2d-showscale", "name": "histogram2d > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#histogram2d-ybins", "name": "histogram2d > ybins", "description": "Properties for ybins"}, {"permalink": "reference/#histogram2d-ybins-end", "name": "histogram2d > ybins > end", "description": "Sets the end value for the y axis bins."}, {"permalink": "reference/#histogram2d-ybins-start", "name": "histogram2d > ybins > start", "description": "Sets the starting value for the y axis bins."}, {"permalink": "reference/#histogram2d-ybins-size", "name": "histogram2d > ybins > size", "description": "Sets the step in-between value each y axis bin."}, {"permalink": "reference/#histogram2d-autobiny", "name": "histogram2d > autobiny", "description": "Determines whether or not the y axis bin attributes are picked by an algorithm. Note that this should be set to false if you want to manually set the number of bins using the attributes in ybins."}, {"permalink": "reference/#histogram2d-autobinx", "name": "histogram2d > autobinx", "description": "Determines whether or not the x axis bin attributes are picked by an algorithm. Note that this should be set to false if you want to manually set the number of bins using the attributes in xbins."}, {"permalink": "reference/#histogram2d-name", "name": "histogram2d > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#histogram2d-colorscale", "name": "histogram2d > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#histogram2d-yaxis", "name": "histogram2d > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#histogram2d-ids", "name": "histogram2d > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#histogram2d-histnorm", "name": "histogram2d > histnorm", "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent* / *probability*, the span of each bar corresponds to the percentage / fraction of occurrences with respect to the total number of sample points (here, the sum of all bin HEIGHTS equals 100% / 1). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin AREAS equals the total number of sample points). If *probability density*, the area of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin AREAS equals 1)."}, {"permalink": "reference/#histogram2d-reversescale", "name": "histogram2d > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#histogram2d-nbinsx", "name": "histogram2d > nbinsx", "description": "Specifies the maximum number of desired bins. This value will be used in an algorithm that will decide the optimal bin size such that the histogram best visualizes the distribution of the data."}, {"permalink": "reference/#histogram2d-y", "name": "histogram2d > y", "description": "Sets the sample data to be binned on the y axis."}, {"permalink": "reference/#histogram2d-x", "name": "histogram2d > x", "description": "Sets the sample data to be binned on the x axis."}, {"permalink": "reference/#histogram2d-z", "name": "histogram2d > z", "description": "Sets the aggregation data."}, {"permalink": "reference/#scattergeo-textposition", "name": "scattergeo > textposition", "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates."}, {"permalink": "reference/#scattergeo-stream", "name": "scattergeo > stream", "description": "Properties for stream"}, {"permalink": "reference/#scattergeo-stream-token", "name": "scattergeo > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#scattergeo-stream-maxpoints", "name": "scattergeo > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#scattergeo-text", "name": "scattergeo > text", "description": "Sets text elements associated with each (lon,lat) pair or item in `locations`. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (lon,lat) or `locations` coordinates. If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#scattergeo-locations", "name": "scattergeo > locations", "description": "Sets the coordinates via location IDs or names. Coordinates correspond to the centroid of each location given. See `locationmode` for more info."}, {"permalink": "reference/#scattergeo-visible", "name": "scattergeo > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#scattergeo-marker", "name": "scattergeo > marker", "description": "Properties for marker"}, {"permalink": "reference/#scattergeo-marker-cmin", "name": "scattergeo > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#scattergeo-marker-color", "name": "scattergeo > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scattergeo-marker-size", "name": "scattergeo > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#scattergeo-marker-colorbar", "name": "scattergeo > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#scattergeo-marker-colorbar-yanchor", "name": "scattergeo > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#scattergeo-marker-colorbar-showexponent", "name": "scattergeo > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#scattergeo-marker-colorbar-showticklabels", "name": "scattergeo > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#scattergeo-marker-colorbar-lenmode", "name": "scattergeo > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#scattergeo-marker-colorbar-showticksuffix", "name": "scattergeo > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#scattergeo-marker-colorbar-titlefont", "name": "scattergeo > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#scattergeo-marker-colorbar-titlefont-family", "name": "scattergeo > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattergeo-marker-colorbar-titlefont-color", "name": "scattergeo > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#scattergeo-marker-colorbar-titlefont-size", "name": "scattergeo > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#scattergeo-marker-colorbar-borderwidth", "name": "scattergeo > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#scattergeo-marker-colorbar-nticks", "name": "scattergeo > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#scattergeo-marker-colorbar-showtickprefix", "name": "scattergeo > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#scattergeo-marker-colorbar-titleside", "name": "scattergeo > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#scattergeo-marker-colorbar-outlinecolor", "name": "scattergeo > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattergeo-marker-colorbar-tickprefix", "name": "scattergeo > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#scattergeo-marker-colorbar-tickformat", "name": "scattergeo > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#scattergeo-marker-colorbar-tickmode", "name": "scattergeo > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#scattergeo-marker-colorbar-title", "name": "scattergeo > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#scattergeo-marker-colorbar-ticks", "name": "scattergeo > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#scattergeo-marker-colorbar-thickness", "name": "scattergeo > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#scattergeo-marker-colorbar-bgcolor", "name": "scattergeo > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#scattergeo-marker-colorbar-outlinewidth", "name": "scattergeo > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#scattergeo-marker-colorbar-bordercolor", "name": "scattergeo > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scattergeo-marker-colorbar-xanchor", "name": "scattergeo > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#scattergeo-marker-colorbar-separatethousands", "name": "scattergeo > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#scattergeo-marker-colorbar-ticklen", "name": "scattergeo > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#scattergeo-marker-colorbar-len", "name": "scattergeo > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#scattergeo-marker-colorbar-ticksuffix", "name": "scattergeo > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#scattergeo-marker-colorbar-tickcolor", "name": "scattergeo > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#scattergeo-marker-colorbar-ticktext", "name": "scattergeo > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#scattergeo-marker-colorbar-xpad", "name": "scattergeo > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#scattergeo-marker-colorbar-tickvals", "name": "scattergeo > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#scattergeo-marker-colorbar-tickfont", "name": "scattergeo > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#scattergeo-marker-colorbar-tickfont-family", "name": "scattergeo > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattergeo-marker-colorbar-tickfont-color", "name": "scattergeo > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#scattergeo-marker-colorbar-tickfont-size", "name": "scattergeo > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#scattergeo-marker-colorbar-tickwidth", "name": "scattergeo > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#scattergeo-marker-colorbar-tick0", "name": "scattergeo > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#scattergeo-marker-colorbar-tickangle", "name": "scattergeo > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#scattergeo-marker-colorbar-dtick", "name": "scattergeo > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#scattergeo-marker-colorbar-ypad", "name": "scattergeo > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#scattergeo-marker-colorbar-exponentformat", "name": "scattergeo > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#scattergeo-marker-colorbar-y", "name": "scattergeo > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattergeo-marker-colorbar-x", "name": "scattergeo > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#scattergeo-marker-colorbar-thicknessmode", "name": "scattergeo > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#scattergeo-marker-autocolorscale", "name": "scattergeo > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scattergeo-marker-gradient", "name": "scattergeo > marker > gradient", "description": "Properties for gradient"}, {"permalink": "reference/#scattergeo-marker-gradient-color", "name": "scattergeo > marker > gradient > color", "description": "Sets the final color of the gradient fill: the center color for radial, the right for horizontal, or the bottom for vertical."}, {"permalink": "reference/#scattergeo-marker-gradient-type", "name": "scattergeo > marker > gradient > type", "description": "Sets the type of gradient used to fill the markers"}, {"permalink": "reference/#scattergeo-marker-opacity", "name": "scattergeo > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#scattergeo-marker-sizeref", "name": "scattergeo > marker > sizeref", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`."}, {"permalink": "reference/#scattergeo-marker-symbol", "name": "scattergeo > marker > symbol", "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name."}, {"permalink": "reference/#scattergeo-marker-showscale", "name": "scattergeo > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scattergeo-marker-line", "name": "scattergeo > marker > line", "description": "Properties for line"}, {"permalink": "reference/#scattergeo-marker-line-autocolorscale", "name": "scattergeo > marker > line > autocolorscale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scattergeo-marker-line-cmin", "name": "scattergeo > marker > line > cmin", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmax` must be set as well."}, {"permalink": "reference/#scattergeo-marker-line-colorscale", "name": "scattergeo > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `marker.line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.line.cmin` and `marker.line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scattergeo-marker-line-color", "name": "scattergeo > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scattergeo-marker-line-reversescale", "name": "scattergeo > marker > line > reversescale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scattergeo-marker-line-width", "name": "scattergeo > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#scattergeo-marker-line-cauto", "name": "scattergeo > marker > line > cauto", "description": "Has an effect only if `marker.line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scattergeo-marker-line-cmax", "name": "scattergeo > marker > line > cmax", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmin` must be set as well."}, {"permalink": "reference/#scattergeo-marker-colorscale", "name": "scattergeo > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scattergeo-marker-reversescale", "name": "scattergeo > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scattergeo-marker-sizemode", "name": "scattergeo > marker > sizemode", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels."}, {"permalink": "reference/#scattergeo-marker-cauto", "name": "scattergeo > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scattergeo-marker-cmax", "name": "scattergeo > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#scattergeo-marker-sizemin", "name": "scattergeo > marker > sizemin", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points."}, {"permalink": "reference/#scattergeo-fill", "name": "scattergeo > fill", "description": "Sets the area to fill with a solid color. Use with `fillcolor` if not *none*. *toself* connects the endpoints of the trace (or each segment of the trace if it has gaps) into a closed shape."}, {"permalink": "reference/#scattergeo-showlegend", "name": "scattergeo > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#scattergeo-customdata", "name": "scattergeo > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#scattergeo-lon", "name": "scattergeo > lon", "description": "Sets the longitude coordinates (in degrees East)."}, {"permalink": "reference/#scattergeo-type", "name": "scattergeo > type", "description": "Properties for type"}, {"permalink": "reference/#scattergeo-opacity", "name": "scattergeo > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#scattergeo-textfont", "name": "scattergeo > textfont", "description": "Sets the text font."}, {"permalink": "reference/#scattergeo-textfont-family", "name": "scattergeo > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattergeo-textfont-color", "name": "scattergeo > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#scattergeo-textfont-size", "name": "scattergeo > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#scattergeo-legendgroup", "name": "scattergeo > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#scattergeo-hovertext", "name": "scattergeo > hovertext", "description": "Sets hover text elements associated with each (lon,lat) pair or item in `locations`. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (lon,lat) or `locations` coordinates. To be seen, trace `hoverinfo` must contain a *text* flag."}, {"permalink": "reference/#scattergeo-hoverlabel", "name": "scattergeo > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#scattergeo-hoverlabel-bordercolor", "name": "scattergeo > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#scattergeo-hoverlabel-bgcolor", "name": "scattergeo > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#scattergeo-hoverlabel-namelength", "name": "scattergeo > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#scattergeo-hoverlabel-font", "name": "scattergeo > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#scattergeo-hoverlabel-font-family", "name": "scattergeo > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scattergeo-hoverlabel-font-color", "name": "scattergeo > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#scattergeo-hoverlabel-font-size", "name": "scattergeo > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#scattergeo-fillcolor", "name": "scattergeo > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#scattergeo-hoverinfo", "name": "scattergeo > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#scattergeo-lat", "name": "scattergeo > lat", "description": "Sets the latitude coordinates (in degrees North)."}, {"permalink": "reference/#scattergeo-line", "name": "scattergeo > line", "description": "Properties for line"}, {"permalink": "reference/#scattergeo-line-color", "name": "scattergeo > line > color", "description": "Sets the line color."}, {"permalink": "reference/#scattergeo-line-width", "name": "scattergeo > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#scattergeo-line-dash", "name": "scattergeo > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#scattergeo-geo", "name": "scattergeo > geo", "description": "Sets a reference between this trace's geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on."}, {"permalink": "reference/#scattergeo-name", "name": "scattergeo > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#scattergeo-connectgaps", "name": "scattergeo > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected."}, {"permalink": "reference/#scattergeo-ids", "name": "scattergeo > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#scattergeo-mode", "name": "scattergeo > mode", "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*."}, {"permalink": "reference/#scattergeo-locationmode", "name": "scattergeo > locationmode", "description": "Determines the set of locations used to match entries in `locations` to regions on the map."}, {"permalink": "reference/#box-jitter", "name": "box > jitter", "description": "Sets the amount of jitter in the sample points drawn. If *0*, the sample points align along the distribution axis. If *1*, the sample points are drawn in a random jitter of width equal to the width of the box(es)."}, {"permalink": "reference/#box-orientation", "name": "box > orientation", "description": "Sets the orientation of the box(es). If *v* (*h*), the distribution is visualized along the vertical (horizontal)."}, {"permalink": "reference/#box-stream", "name": "box > stream", "description": "Properties for stream"}, {"permalink": "reference/#box-stream-token", "name": "box > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#box-stream-maxpoints", "name": "box > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#box-ycalendar", "name": "box > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#box-visible", "name": "box > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#box-xcalendar", "name": "box > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#box-marker", "name": "box > marker", "description": "Properties for marker"}, {"permalink": "reference/#box-marker-opacity", "name": "box > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#box-marker-outliercolor", "name": "box > marker > outliercolor", "description": "Sets the color of the outlier sample points."}, {"permalink": "reference/#box-marker-color", "name": "box > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#box-marker-symbol", "name": "box > marker > symbol", "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name."}, {"permalink": "reference/#box-marker-line", "name": "box > marker > line", "description": "Properties for line"}, {"permalink": "reference/#box-marker-line-outliercolor", "name": "box > marker > line > outliercolor", "description": "Sets the border line color of the outlier sample points. Defaults to marker.color"}, {"permalink": "reference/#box-marker-line-color", "name": "box > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#box-marker-line-width", "name": "box > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#box-marker-line-outlierwidth", "name": "box > marker > line > outlierwidth", "description": "Sets the border line width (in px) of the outlier sample points."}, {"permalink": "reference/#box-marker-size", "name": "box > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#box-y0", "name": "box > y0", "description": "Sets the y coordinate of the box. See overview for more info."}, {"permalink": "reference/#box-pointpos", "name": "box > pointpos", "description": "Sets the position of the sample points in relation to the box(es). If *0*, the sample points are places over the center of the box(es). Positive (negative) values correspond to positions to the right (left) for vertical boxes and above (below) for horizontal boxes"}, {"permalink": "reference/#box-line", "name": "box > line", "description": "Properties for line"}, {"permalink": "reference/#box-line-color", "name": "box > line > color", "description": "Sets the color of line bounding the box(es)."}, {"permalink": "reference/#box-line-width", "name": "box > line > width", "description": "Sets the width (in px) of line bounding the box(es)."}, {"permalink": "reference/#box-showlegend", "name": "box > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#box-boxmean", "name": "box > boxmean", "description": "If *true*, the mean of the box(es)' underlying distribution is drawn as a dashed line inside the box(es). If *sd* the standard deviation is also drawn."}, {"permalink": "reference/#box-customdata", "name": "box > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#box-xaxis", "name": "box > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#box-type", "name": "box > type", "description": "Properties for type"}, {"permalink": "reference/#box-opacity", "name": "box > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#box-legendgroup", "name": "box > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#box-hoverlabel", "name": "box > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#box-hoverlabel-bordercolor", "name": "box > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#box-hoverlabel-bgcolor", "name": "box > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#box-hoverlabel-namelength", "name": "box > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#box-hoverlabel-font", "name": "box > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#box-hoverlabel-font-family", "name": "box > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#box-hoverlabel-font-color", "name": "box > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#box-hoverlabel-font-size", "name": "box > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#box-fillcolor", "name": "box > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#box-hoverinfo", "name": "box > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#box-x0", "name": "box > x0", "description": "Sets the x coordinate of the box. See overview for more info."}, {"permalink": "reference/#box-whiskerwidth", "name": "box > whiskerwidth", "description": "Sets the width of the whiskers relative to the box' width. For example, with 1, the whiskers are as wide as the box(es)."}, {"permalink": "reference/#box-name", "name": "box > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover. For box traces, the name will also be used for the position coordinate, if `x` and `x0` (`y` and `y0` if horizontal) are missing and the position axis is categorical"}, {"permalink": "reference/#box-yaxis", "name": "box > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#box-ids", "name": "box > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#box-y", "name": "box > y", "description": "Sets the y sample data or coordinates. See overview for more info."}, {"permalink": "reference/#box-x", "name": "box > x", "description": "Sets the x sample data or coordinates. See overview for more info."}, {"permalink": "reference/#box-boxpoints", "name": "box > boxpoints", "description": "If *outliers*, only the sample points lying outside the whiskers are shown If *suspectedoutliers*, the outlier points are shown and points either less than 4*Q1-3*Q3 or greater than 4*Q3-3*Q1 are highlighted (see `outliercolor`) If *all*, all sample points are shown If *false*, only the box(es) are shown with no sample points"}, {"permalink": "reference/#bar-textposition", "name": "bar > textposition", "description": "Specifies the location of the `text`. *inside* positions `text` inside, next to the bar end (rotated and scaled if needed). *outside* positions `text` outside, next to the bar end (scaled if needed). *auto* positions `text` inside or outside so that `text` size is maximized."}, {"permalink": "reference/#bar-stream", "name": "bar > stream", "description": "Properties for stream"}, {"permalink": "reference/#bar-stream-token", "name": "bar > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#bar-stream-maxpoints", "name": "bar > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#bar-text", "name": "bar > text", "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates. If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#bar-ycalendar", "name": "bar > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#bar-hoverinfo", "name": "bar > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#bar-visible", "name": "bar > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#bar-xcalendar", "name": "bar > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#bar-marker", "name": "bar > marker", "description": "Properties for marker"}, {"permalink": "reference/#bar-marker-colorbar", "name": "bar > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#bar-marker-colorbar-yanchor", "name": "bar > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#bar-marker-colorbar-showexponent", "name": "bar > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#bar-marker-colorbar-showticklabels", "name": "bar > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#bar-marker-colorbar-lenmode", "name": "bar > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#bar-marker-colorbar-showticksuffix", "name": "bar > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#bar-marker-colorbar-titlefont", "name": "bar > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#bar-marker-colorbar-titlefont-family", "name": "bar > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#bar-marker-colorbar-titlefont-color", "name": "bar > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#bar-marker-colorbar-titlefont-size", "name": "bar > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#bar-marker-colorbar-borderwidth", "name": "bar > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#bar-marker-colorbar-nticks", "name": "bar > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#bar-marker-colorbar-showtickprefix", "name": "bar > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#bar-marker-colorbar-titleside", "name": "bar > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#bar-marker-colorbar-outlinecolor", "name": "bar > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#bar-marker-colorbar-tickprefix", "name": "bar > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#bar-marker-colorbar-tickformat", "name": "bar > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#bar-marker-colorbar-tickmode", "name": "bar > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#bar-marker-colorbar-title", "name": "bar > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#bar-marker-colorbar-ticks", "name": "bar > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#bar-marker-colorbar-thickness", "name": "bar > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#bar-marker-colorbar-bgcolor", "name": "bar > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#bar-marker-colorbar-outlinewidth", "name": "bar > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#bar-marker-colorbar-bordercolor", "name": "bar > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#bar-marker-colorbar-xanchor", "name": "bar > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#bar-marker-colorbar-separatethousands", "name": "bar > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#bar-marker-colorbar-ticklen", "name": "bar > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#bar-marker-colorbar-len", "name": "bar > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#bar-marker-colorbar-ticksuffix", "name": "bar > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#bar-marker-colorbar-tickcolor", "name": "bar > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#bar-marker-colorbar-ticktext", "name": "bar > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#bar-marker-colorbar-xpad", "name": "bar > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#bar-marker-colorbar-tickvals", "name": "bar > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#bar-marker-colorbar-tickfont", "name": "bar > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#bar-marker-colorbar-tickfont-family", "name": "bar > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#bar-marker-colorbar-tickfont-color", "name": "bar > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#bar-marker-colorbar-tickfont-size", "name": "bar > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#bar-marker-colorbar-tickwidth", "name": "bar > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#bar-marker-colorbar-tick0", "name": "bar > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#bar-marker-colorbar-tickangle", "name": "bar > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#bar-marker-colorbar-dtick", "name": "bar > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#bar-marker-colorbar-ypad", "name": "bar > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#bar-marker-colorbar-exponentformat", "name": "bar > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#bar-marker-colorbar-y", "name": "bar > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#bar-marker-colorbar-x", "name": "bar > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#bar-marker-colorbar-thicknessmode", "name": "bar > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#bar-marker-autocolorscale", "name": "bar > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#bar-marker-cmin", "name": "bar > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#bar-marker-colorscale", "name": "bar > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#bar-marker-color", "name": "bar > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#bar-marker-reversescale", "name": "bar > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#bar-marker-cauto", "name": "bar > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#bar-marker-showscale", "name": "bar > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#bar-marker-line", "name": "bar > marker > line", "description": "Properties for line"}, {"permalink": "reference/#bar-marker-line-autocolorscale", "name": "bar > marker > line > autocolorscale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#bar-marker-line-cmin", "name": "bar > marker > line > cmin", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmax` must be set as well."}, {"permalink": "reference/#bar-marker-line-colorscale", "name": "bar > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `marker.line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.line.cmin` and `marker.line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#bar-marker-line-color", "name": "bar > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#bar-marker-line-reversescale", "name": "bar > marker > line > reversescale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#bar-marker-line-width", "name": "bar > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#bar-marker-line-cauto", "name": "bar > marker > line > cauto", "description": "Has an effect only if `marker.line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#bar-marker-line-cmax", "name": "bar > marker > line > cmax", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmin` must be set as well."}, {"permalink": "reference/#bar-marker-cmax", "name": "bar > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#bar-y0", "name": "bar > y0", "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step."}, {"permalink": "reference/#bar-orientation", "name": "bar > orientation", "description": "Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal)."}, {"permalink": "reference/#bar-showlegend", "name": "bar > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#bar-error_x", "name": "bar > error_x", "description": "Properties for error_x"}, {"permalink": "reference/#bar-error_x-copy_ystyle", "name": "bar > error_x > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#bar-error_x-tracerefminus", "name": "bar > error_x > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#bar-error_x-width", "name": "bar > error_x > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#bar-error_x-copy_zstyle", "name": "bar > error_x > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#bar-error_x-value", "name": "bar > error_x > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#bar-error_x-thickness", "name": "bar > error_x > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#bar-error_x-symmetric", "name": "bar > error_x > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#bar-error_x-visible", "name": "bar > error_x > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#bar-error_x-traceref", "name": "bar > error_x > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#bar-error_x-valueminus", "name": "bar > error_x > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#bar-error_x-arrayminus", "name": "bar > error_x > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#bar-error_x-array", "name": "bar > error_x > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#bar-error_x-type", "name": "bar > error_x > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#bar-error_x-color", "name": "bar > error_x > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#bar-error_y", "name": "bar > error_y", "description": "Properties for error_y"}, {"permalink": "reference/#bar-error_y-copy_ystyle", "name": "bar > error_y > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#bar-error_y-tracerefminus", "name": "bar > error_y > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#bar-error_y-width", "name": "bar > error_y > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#bar-error_y-copy_zstyle", "name": "bar > error_y > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#bar-error_y-value", "name": "bar > error_y > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#bar-error_y-thickness", "name": "bar > error_y > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#bar-error_y-symmetric", "name": "bar > error_y > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#bar-error_y-visible", "name": "bar > error_y > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#bar-error_y-traceref", "name": "bar > error_y > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#bar-error_y-valueminus", "name": "bar > error_y > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#bar-error_y-arrayminus", "name": "bar > error_y > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#bar-error_y-array", "name": "bar > error_y > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#bar-error_y-type", "name": "bar > error_y > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#bar-error_y-color", "name": "bar > error_y > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#bar-customdata", "name": "bar > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#bar-offset", "name": "bar > offset", "description": "Shifts the position where the bar is drawn (in position axis units). In *group* barmode, traces that set *offset* will be excluded and drawn in *overlay* mode instead."}, {"permalink": "reference/#bar-width", "name": "bar > width", "description": "Sets the bar width (in position axis units)."}, {"permalink": "reference/#bar-xaxis", "name": "bar > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#bar-type", "name": "bar > type", "description": "Properties for type"}, {"permalink": "reference/#bar-_deprecated-bardir", "name": "bar > _deprecated > bardir", "description": "Renamed to `orientation`."}, {"permalink": "reference/#bar-opacity", "name": "bar > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#bar-textfont", "name": "bar > textfont", "description": "Sets the font used for `text`."}, {"permalink": "reference/#bar-textfont-family", "name": "bar > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#bar-textfont-color", "name": "bar > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#bar-textfont-size", "name": "bar > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#bar-legendgroup", "name": "bar > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#bar-outsidetextfont", "name": "bar > outsidetextfont", "description": "Sets the font used for `text` lying outside the bar."}, {"permalink": "reference/#bar-outsidetextfont-family", "name": "bar > outsidetextfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#bar-outsidetextfont-color", "name": "bar > outsidetextfont > color", "description": "Properties for color"}, {"permalink": "reference/#bar-outsidetextfont-size", "name": "bar > outsidetextfont > size", "description": "Properties for size"}, {"permalink": "reference/#bar-hovertext", "name": "bar > hovertext", "description": "Sets hover text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates. To be seen, trace `hoverinfo` must contain a *text* flag."}, {"permalink": "reference/#bar-hoverlabel", "name": "bar > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#bar-hoverlabel-bordercolor", "name": "bar > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#bar-hoverlabel-bgcolor", "name": "bar > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#bar-hoverlabel-namelength", "name": "bar > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#bar-hoverlabel-font", "name": "bar > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#bar-hoverlabel-font-family", "name": "bar > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#bar-hoverlabel-font-color", "name": "bar > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#bar-hoverlabel-font-size", "name": "bar > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#bar-base", "name": "bar > base", "description": "Sets where the bar base is drawn (in position axis units). In *stack* or *relative* barmode, traces that set *base* will be excluded and drawn in *overlay* mode instead."}, {"permalink": "reference/#bar-dx", "name": "bar > dx", "description": "Sets the x coordinate step. See `x0` for more info."}, {"permalink": "reference/#bar-dy", "name": "bar > dy", "description": "Sets the y coordinate step. See `y0` for more info."}, {"permalink": "reference/#bar-x0", "name": "bar > x0", "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step."}, {"permalink": "reference/#bar-constraintext", "name": "bar > constraintext", "description": "Constrain the size of text inside or outside a bar to be no larger than the bar itself."}, {"permalink": "reference/#bar-name", "name": "bar > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#bar-yaxis", "name": "bar > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#bar-ids", "name": "bar > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#bar-insidetextfont", "name": "bar > insidetextfont", "description": "Sets the font used for `text` lying inside the bar."}, {"permalink": "reference/#bar-insidetextfont-family", "name": "bar > insidetextfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#bar-insidetextfont-color", "name": "bar > insidetextfont > color", "description": "Properties for color"}, {"permalink": "reference/#bar-insidetextfont-size", "name": "bar > insidetextfont > size", "description": "Properties for size"}, {"permalink": "reference/#bar-r", "name": "bar > r", "description": "For polar chart only.Sets the radial coordinates."}, {"permalink": "reference/#bar-t", "name": "bar > t", "description": "For polar chart only.Sets the angular coordinates."}, {"permalink": "reference/#bar-y", "name": "bar > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#bar-x", "name": "bar > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#choropleth-zmax", "name": "choropleth > zmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#choropleth-stream", "name": "choropleth > stream", "description": "Properties for stream"}, {"permalink": "reference/#choropleth-stream-token", "name": "choropleth > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#choropleth-stream-maxpoints", "name": "choropleth > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#choropleth-text", "name": "choropleth > text", "description": "Sets the text elements associated with each location."}, {"permalink": "reference/#choropleth-zmin", "name": "choropleth > zmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#choropleth-locations", "name": "choropleth > locations", "description": "Sets the coordinates via location IDs or names. See `locationmode` for more info."}, {"permalink": "reference/#choropleth-visible", "name": "choropleth > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#choropleth-marker", "name": "choropleth > marker", "description": "Properties for marker"}, {"permalink": "reference/#choropleth-marker-line", "name": "choropleth > marker > line", "description": "Properties for line"}, {"permalink": "reference/#choropleth-marker-line-color", "name": "choropleth > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#choropleth-marker-line-width", "name": "choropleth > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#choropleth-colorbar", "name": "choropleth > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#choropleth-colorbar-yanchor", "name": "choropleth > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#choropleth-colorbar-showexponent", "name": "choropleth > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#choropleth-colorbar-showticklabels", "name": "choropleth > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#choropleth-colorbar-lenmode", "name": "choropleth > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#choropleth-colorbar-showticksuffix", "name": "choropleth > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#choropleth-colorbar-titlefont", "name": "choropleth > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#choropleth-colorbar-titlefont-family", "name": "choropleth > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#choropleth-colorbar-titlefont-color", "name": "choropleth > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#choropleth-colorbar-titlefont-size", "name": "choropleth > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#choropleth-colorbar-borderwidth", "name": "choropleth > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#choropleth-colorbar-nticks", "name": "choropleth > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#choropleth-colorbar-showtickprefix", "name": "choropleth > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#choropleth-colorbar-titleside", "name": "choropleth > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#choropleth-colorbar-outlinecolor", "name": "choropleth > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#choropleth-colorbar-tickprefix", "name": "choropleth > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#choropleth-colorbar-tickformat", "name": "choropleth > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#choropleth-colorbar-tickmode", "name": "choropleth > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#choropleth-colorbar-title", "name": "choropleth > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#choropleth-colorbar-ticks", "name": "choropleth > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#choropleth-colorbar-thickness", "name": "choropleth > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#choropleth-colorbar-bgcolor", "name": "choropleth > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#choropleth-colorbar-outlinewidth", "name": "choropleth > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#choropleth-colorbar-bordercolor", "name": "choropleth > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#choropleth-colorbar-xanchor", "name": "choropleth > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#choropleth-colorbar-separatethousands", "name": "choropleth > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#choropleth-colorbar-ticklen", "name": "choropleth > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#choropleth-colorbar-len", "name": "choropleth > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#choropleth-colorbar-ticksuffix", "name": "choropleth > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#choropleth-colorbar-tickcolor", "name": "choropleth > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#choropleth-colorbar-ticktext", "name": "choropleth > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#choropleth-colorbar-xpad", "name": "choropleth > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#choropleth-colorbar-tickvals", "name": "choropleth > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#choropleth-colorbar-tickfont", "name": "choropleth > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#choropleth-colorbar-tickfont-family", "name": "choropleth > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#choropleth-colorbar-tickfont-color", "name": "choropleth > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#choropleth-colorbar-tickfont-size", "name": "choropleth > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#choropleth-colorbar-tickwidth", "name": "choropleth > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#choropleth-colorbar-tick0", "name": "choropleth > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#choropleth-colorbar-tickangle", "name": "choropleth > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#choropleth-colorbar-dtick", "name": "choropleth > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#choropleth-colorbar-ypad", "name": "choropleth > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#choropleth-colorbar-exponentformat", "name": "choropleth > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#choropleth-colorbar-y", "name": "choropleth > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#choropleth-colorbar-x", "name": "choropleth > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#choropleth-colorbar-thicknessmode", "name": "choropleth > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#choropleth-showlegend", "name": "choropleth > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#choropleth-customdata", "name": "choropleth > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#choropleth-type", "name": "choropleth > type", "description": "Properties for type"}, {"permalink": "reference/#choropleth-opacity", "name": "choropleth > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#choropleth-legendgroup", "name": "choropleth > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#choropleth-autocolorscale", "name": "choropleth > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#choropleth-hoverlabel", "name": "choropleth > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#choropleth-hoverlabel-bordercolor", "name": "choropleth > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#choropleth-hoverlabel-bgcolor", "name": "choropleth > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#choropleth-hoverlabel-namelength", "name": "choropleth > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#choropleth-hoverlabel-font", "name": "choropleth > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#choropleth-hoverlabel-font-family", "name": "choropleth > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#choropleth-hoverlabel-font-color", "name": "choropleth > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#choropleth-hoverlabel-font-size", "name": "choropleth > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#choropleth-showscale", "name": "choropleth > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#choropleth-hoverinfo", "name": "choropleth > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#choropleth-geo", "name": "choropleth > geo", "description": "Sets a reference between this trace's geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on."}, {"permalink": "reference/#choropleth-zauto", "name": "choropleth > zauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#choropleth-name", "name": "choropleth > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#choropleth-colorscale", "name": "choropleth > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#choropleth-ids", "name": "choropleth > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#choropleth-reversescale", "name": "choropleth > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#choropleth-z", "name": "choropleth > z", "description": "Sets the color values."}, {"permalink": "reference/#choropleth-locationmode", "name": "choropleth > locationmode", "description": "Determines the set of locations used to match entries in `locations` to regions on the map."}, {"permalink": "reference/#candlestick-stream", "name": "candlestick > stream", "description": "Properties for stream"}, {"permalink": "reference/#candlestick-stream-token", "name": "candlestick > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#candlestick-stream-maxpoints", "name": "candlestick > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#candlestick-text", "name": "candlestick > text", "description": "Sets hover text elements associated with each sample point. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to this trace's sample points."}, {"permalink": "reference/#candlestick-high", "name": "candlestick > high", "description": "Sets the high values."}, {"permalink": "reference/#candlestick-visible", "name": "candlestick > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#candlestick-xcalendar", "name": "candlestick > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#candlestick-close", "name": "candlestick > close", "description": "Sets the close values."}, {"permalink": "reference/#candlestick-open", "name": "candlestick > open", "description": "Sets the open values."}, {"permalink": "reference/#candlestick-showlegend", "name": "candlestick > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#candlestick-customdata", "name": "candlestick > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#candlestick-low", "name": "candlestick > low", "description": "Sets the low values."}, {"permalink": "reference/#candlestick-xaxis", "name": "candlestick > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#candlestick-increasing", "name": "candlestick > increasing", "description": "Properties for increasing"}, {"permalink": "reference/#candlestick-increasing-showlegend", "name": "candlestick > increasing > showlegend", "description": "Determines whether or not an item corresponding to this segment is shown in the legend."}, {"permalink": "reference/#candlestick-increasing-name", "name": "candlestick > increasing > name", "description": "Sets the segment name. The segment name appear as the legend item and on hover."}, {"permalink": "reference/#candlestick-increasing-fillcolor", "name": "candlestick > increasing > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#candlestick-increasing-line", "name": "candlestick > increasing > line", "description": "Properties for line"}, {"permalink": "reference/#candlestick-increasing-line-color", "name": "candlestick > increasing > line > color", "description": "Sets the color of line bounding the box(es)."}, {"permalink": "reference/#candlestick-increasing-line-width", "name": "candlestick > increasing > line > width", "description": "Sets the width (in px) of line bounding the box(es)."}, {"permalink": "reference/#candlestick-type", "name": "candlestick > type", "description": "Properties for type"}, {"permalink": "reference/#candlestick-opacity", "name": "candlestick > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#candlestick-legendgroup", "name": "candlestick > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#candlestick-hoverlabel", "name": "candlestick > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#candlestick-hoverlabel-bordercolor", "name": "candlestick > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#candlestick-hoverlabel-bgcolor", "name": "candlestick > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#candlestick-hoverlabel-namelength", "name": "candlestick > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#candlestick-hoverlabel-font", "name": "candlestick > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#candlestick-hoverlabel-font-family", "name": "candlestick > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#candlestick-hoverlabel-font-color", "name": "candlestick > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#candlestick-hoverlabel-font-size", "name": "candlestick > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#candlestick-hoverinfo", "name": "candlestick > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#candlestick-line", "name": "candlestick > line", "description": "Properties for line"}, {"permalink": "reference/#candlestick-line-width", "name": "candlestick > line > width", "description": "Sets the width (in px) of line bounding the box(es). Note that this style setting can also be set per direction via `increasing.line.width` and `decreasing.line.width`."}, {"permalink": "reference/#candlestick-whiskerwidth", "name": "candlestick > whiskerwidth", "description": "Sets the width of the whiskers relative to the box' width. For example, with 1, the whiskers are as wide as the box(es)."}, {"permalink": "reference/#candlestick-name", "name": "candlestick > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#candlestick-yaxis", "name": "candlestick > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#candlestick-ids", "name": "candlestick > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#candlestick-decreasing", "name": "candlestick > decreasing", "description": "Properties for decreasing"}, {"permalink": "reference/#candlestick-decreasing-showlegend", "name": "candlestick > decreasing > showlegend", "description": "Determines whether or not an item corresponding to this segment is shown in the legend."}, {"permalink": "reference/#candlestick-decreasing-name", "name": "candlestick > decreasing > name", "description": "Sets the segment name. The segment name appear as the legend item and on hover."}, {"permalink": "reference/#candlestick-decreasing-fillcolor", "name": "candlestick > decreasing > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#candlestick-decreasing-line", "name": "candlestick > decreasing > line", "description": "Properties for line"}, {"permalink": "reference/#candlestick-decreasing-line-color", "name": "candlestick > decreasing > line > color", "description": "Sets the color of line bounding the box(es)."}, {"permalink": "reference/#candlestick-decreasing-line-width", "name": "candlestick > decreasing > line > width", "description": "Sets the width (in px) of line bounding the box(es)."}, {"permalink": "reference/#candlestick-x", "name": "candlestick > x", "description": "Sets the x coordinates. If absent, linear coordinate will be generated."}, {"permalink": "reference/#parcoords-opacity", "name": "parcoords > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#parcoords-tickfont", "name": "parcoords > tickfont", "description": "Sets the font for the `dimension` tick values."}, {"permalink": "reference/#parcoords-tickfont-family", "name": "parcoords > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#parcoords-tickfont-color", "name": "parcoords > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#parcoords-tickfont-size", "name": "parcoords > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#parcoords-showlegend", "name": "parcoords > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#parcoords-legendgroup", "name": "parcoords > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#parcoords-name", "name": "parcoords > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#parcoords-stream", "name": "parcoords > stream", "description": "Properties for stream"}, {"permalink": "reference/#parcoords-stream-token", "name": "parcoords > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#parcoords-stream-maxpoints", "name": "parcoords > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#parcoords-rangefont", "name": "parcoords > rangefont", "description": "Sets the font for the `dimension` range values."}, {"permalink": "reference/#parcoords-rangefont-family", "name": "parcoords > rangefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#parcoords-rangefont-color", "name": "parcoords > rangefont > color", "description": "Properties for color"}, {"permalink": "reference/#parcoords-rangefont-size", "name": "parcoords > rangefont > size", "description": "Properties for size"}, {"permalink": "reference/#parcoords-customdata", "name": "parcoords > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#parcoords-labelfont", "name": "parcoords > labelfont", "description": "Sets the font for the `dimension` labels."}, {"permalink": "reference/#parcoords-labelfont-family", "name": "parcoords > labelfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#parcoords-labelfont-color", "name": "parcoords > labelfont > color", "description": "Properties for color"}, {"permalink": "reference/#parcoords-labelfont-size", "name": "parcoords > labelfont > size", "description": "Properties for size"}, {"permalink": "reference/#parcoords-ids", "name": "parcoords > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#parcoords-visible", "name": "parcoords > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#parcoords-hoverlabel", "name": "parcoords > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#parcoords-hoverlabel-bordercolor", "name": "parcoords > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#parcoords-hoverlabel-bgcolor", "name": "parcoords > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#parcoords-hoverlabel-namelength", "name": "parcoords > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#parcoords-hoverlabel-font", "name": "parcoords > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#parcoords-hoverlabel-font-family", "name": "parcoords > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#parcoords-hoverlabel-font-color", "name": "parcoords > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#parcoords-hoverlabel-font-size", "name": "parcoords > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#parcoords-domain", "name": "parcoords > domain", "description": "Properties for domain"}, {"permalink": "reference/#parcoords-domain-y", "name": "parcoords > domain > y", "description": "Sets the vertical domain of this `parcoords` trace (in plot fraction)."}, {"permalink": "reference/#parcoords-domain-x", "name": "parcoords > domain > x", "description": "Sets the horizontal domain of this `parcoords` trace (in plot fraction)."}, {"permalink": "reference/#parcoords-hoverinfo", "name": "parcoords > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#parcoords-dimensions", "name": "parcoords > dimensions", "description": "Properties for dimensions"}, {"permalink": "reference/#parcoords-dimensions-items", "name": "parcoords > dimensions > items", "description": "Properties for items"}, {"permalink": "reference/#parcoords-dimensions-items-dimension", "name": "parcoords > dimensions > items > dimension", "description": "The dimensions (variables) of the parallel coordinates chart. 2..60 dimensions are supported."}, {"permalink": "reference/#parcoords-dimensions-items-dimension-tickformat", "name": "parcoords > dimensions > items > dimension > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-language which is similar to those of Python. See https://github.com/d3/d3-format/blob/master/README.md#locale_format"}, {"permalink": "reference/#parcoords-dimensions-items-dimension-label", "name": "parcoords > dimensions > items > dimension > label", "description": "The shown name of the dimension."}, {"permalink": "reference/#parcoords-dimensions-items-dimension-visible", "name": "parcoords > dimensions > items > dimension > visible", "description": "Shows the dimension when set to `true` (the default). Hides the dimension for `false`."}, {"permalink": "reference/#parcoords-dimensions-items-dimension-range", "name": "parcoords > dimensions > items > dimension > range", "description": "The domain range that represents the full, shown axis extent. Defaults to the `values` extent. Must be an array of `[fromValue, toValue]` with finite numbers as elements."}, {"permalink": "reference/#parcoords-dimensions-items-dimension-values", "name": "parcoords > dimensions > items > dimension > values", "description": "Dimension values. `values[n]` represents the value of the `n`th point in the dataset, therefore the `values` vector for all dimensions must be the same (longer vectors will be truncated). Each value must be a finite number."}, {"permalink": "reference/#parcoords-dimensions-items-dimension-ticktext", "name": "parcoords > dimensions > items > dimension > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#parcoords-dimensions-items-dimension-constraintrange", "name": "parcoords > dimensions > items > dimension > constraintrange", "description": "The domain range to which the filter on the dimension is constrained. Must be an array of `[fromValue, toValue]` with finite numbers as elements."}, {"permalink": "reference/#parcoords-dimensions-items-dimension-tickvals", "name": "parcoords > dimensions > items > dimension > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#parcoords-line", "name": "parcoords > line", "description": "Properties for line"}, {"permalink": "reference/#parcoords-line-colorbar", "name": "parcoords > line > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#parcoords-line-colorbar-yanchor", "name": "parcoords > line > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#parcoords-line-colorbar-showexponent", "name": "parcoords > line > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#parcoords-line-colorbar-showticklabels", "name": "parcoords > line > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#parcoords-line-colorbar-lenmode", "name": "parcoords > line > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#parcoords-line-colorbar-showticksuffix", "name": "parcoords > line > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#parcoords-line-colorbar-titlefont", "name": "parcoords > line > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#parcoords-line-colorbar-titlefont-family", "name": "parcoords > line > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#parcoords-line-colorbar-titlefont-color", "name": "parcoords > line > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#parcoords-line-colorbar-titlefont-size", "name": "parcoords > line > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#parcoords-line-colorbar-borderwidth", "name": "parcoords > line > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#parcoords-line-colorbar-nticks", "name": "parcoords > line > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#parcoords-line-colorbar-showtickprefix", "name": "parcoords > line > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#parcoords-line-colorbar-titleside", "name": "parcoords > line > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#parcoords-line-colorbar-outlinecolor", "name": "parcoords > line > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#parcoords-line-colorbar-tickprefix", "name": "parcoords > line > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#parcoords-line-colorbar-tickformat", "name": "parcoords > line > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#parcoords-line-colorbar-tickmode", "name": "parcoords > line > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#parcoords-line-colorbar-title", "name": "parcoords > line > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#parcoords-line-colorbar-ticks", "name": "parcoords > line > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#parcoords-line-colorbar-thickness", "name": "parcoords > line > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#parcoords-line-colorbar-bgcolor", "name": "parcoords > line > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#parcoords-line-colorbar-outlinewidth", "name": "parcoords > line > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#parcoords-line-colorbar-bordercolor", "name": "parcoords > line > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#parcoords-line-colorbar-xanchor", "name": "parcoords > line > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#parcoords-line-colorbar-separatethousands", "name": "parcoords > line > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#parcoords-line-colorbar-ticklen", "name": "parcoords > line > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#parcoords-line-colorbar-len", "name": "parcoords > line > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#parcoords-line-colorbar-ticksuffix", "name": "parcoords > line > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#parcoords-line-colorbar-tickcolor", "name": "parcoords > line > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#parcoords-line-colorbar-ticktext", "name": "parcoords > line > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#parcoords-line-colorbar-xpad", "name": "parcoords > line > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#parcoords-line-colorbar-tickvals", "name": "parcoords > line > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#parcoords-line-colorbar-tickfont", "name": "parcoords > line > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#parcoords-line-colorbar-tickfont-family", "name": "parcoords > line > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#parcoords-line-colorbar-tickfont-color", "name": "parcoords > line > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#parcoords-line-colorbar-tickfont-size", "name": "parcoords > line > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#parcoords-line-colorbar-tickwidth", "name": "parcoords > line > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#parcoords-line-colorbar-tick0", "name": "parcoords > line > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#parcoords-line-colorbar-tickangle", "name": "parcoords > line > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#parcoords-line-colorbar-dtick", "name": "parcoords > line > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#parcoords-line-colorbar-ypad", "name": "parcoords > line > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#parcoords-line-colorbar-exponentformat", "name": "parcoords > line > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#parcoords-line-colorbar-y", "name": "parcoords > line > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#parcoords-line-colorbar-x", "name": "parcoords > line > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#parcoords-line-colorbar-thicknessmode", "name": "parcoords > line > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#parcoords-line-autocolorscale", "name": "parcoords > line > autocolorscale", "description": "Has an effect only if line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed. The default value is false, so that `parcoords` colorscale can default to `Viridis`."}, {"permalink": "reference/#parcoords-line-cmin", "name": "parcoords > line > cmin", "description": "Has an effect only if `line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `line.color` array index, and if set, `line.cmax` must be set as well."}, {"permalink": "reference/#parcoords-line-colorscale", "name": "parcoords > line > colorscale", "description": "Sets the colorscale and only has an effect if `line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `line.cmin` and `line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#parcoords-line-color", "name": "parcoords > line > color", "description": "Sets the line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#parcoords-line-reversescale", "name": "parcoords > line > reversescale", "description": "Has an effect only if `line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#parcoords-line-cauto", "name": "parcoords > line > cauto", "description": "Has an effect only if `line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#parcoords-line-showscale", "name": "parcoords > line > showscale", "description": "Has an effect only if `line.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#parcoords-line-cmax", "name": "parcoords > line > cmax", "description": "Has an effect only if `line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `line.color` array index, and if set, `line.cmin` must be set as well."}, {"permalink": "reference/#parcoords-type", "name": "parcoords > type", "description": "Properties for type"}, {"permalink": "reference/#histogram2dcontour-zmax", "name": "histogram2dcontour > zmax", "description": "Sets the upper bound of color domain."}, {"permalink": "reference/#histogram2dcontour-stream", "name": "histogram2dcontour > stream", "description": "Properties for stream"}, {"permalink": "reference/#histogram2dcontour-stream-token", "name": "histogram2dcontour > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#histogram2dcontour-stream-maxpoints", "name": "histogram2dcontour > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#histogram2dcontour-zmin", "name": "histogram2dcontour > zmin", "description": "Sets the lower bound of color domain."}, {"permalink": "reference/#histogram2dcontour-xbins", "name": "histogram2dcontour > xbins", "description": "Properties for xbins"}, {"permalink": "reference/#histogram2dcontour-xbins-end", "name": "histogram2dcontour > xbins > end", "description": "Sets the end value for the x axis bins."}, {"permalink": "reference/#histogram2dcontour-xbins-start", "name": "histogram2dcontour > xbins > start", "description": "Sets the starting value for the x axis bins."}, {"permalink": "reference/#histogram2dcontour-xbins-size", "name": "histogram2dcontour > xbins > size", "description": "Sets the step in-between value each x axis bin."}, {"permalink": "reference/#histogram2dcontour-visible", "name": "histogram2dcontour > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#histogram2dcontour-xcalendar", "name": "histogram2dcontour > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#histogram2dcontour-marker", "name": "histogram2dcontour > marker", "description": "Properties for marker"}, {"permalink": "reference/#histogram2dcontour-marker-color", "name": "histogram2dcontour > marker > color", "description": "Sets the aggregation data."}, {"permalink": "reference/#histogram2dcontour-colorbar", "name": "histogram2dcontour > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#histogram2dcontour-colorbar-yanchor", "name": "histogram2dcontour > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#histogram2dcontour-colorbar-showexponent", "name": "histogram2dcontour > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#histogram2dcontour-colorbar-showticklabels", "name": "histogram2dcontour > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#histogram2dcontour-colorbar-lenmode", "name": "histogram2dcontour > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#histogram2dcontour-colorbar-showticksuffix", "name": "histogram2dcontour > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#histogram2dcontour-colorbar-titlefont", "name": "histogram2dcontour > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#histogram2dcontour-colorbar-titlefont-family", "name": "histogram2dcontour > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram2dcontour-colorbar-titlefont-color", "name": "histogram2dcontour > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#histogram2dcontour-colorbar-titlefont-size", "name": "histogram2dcontour > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#histogram2dcontour-colorbar-borderwidth", "name": "histogram2dcontour > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#histogram2dcontour-colorbar-nticks", "name": "histogram2dcontour > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#histogram2dcontour-colorbar-showtickprefix", "name": "histogram2dcontour > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#histogram2dcontour-colorbar-titleside", "name": "histogram2dcontour > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#histogram2dcontour-colorbar-outlinecolor", "name": "histogram2dcontour > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#histogram2dcontour-colorbar-tickprefix", "name": "histogram2dcontour > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#histogram2dcontour-colorbar-tickformat", "name": "histogram2dcontour > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#histogram2dcontour-colorbar-tickmode", "name": "histogram2dcontour > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#histogram2dcontour-colorbar-title", "name": "histogram2dcontour > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#histogram2dcontour-colorbar-ticks", "name": "histogram2dcontour > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#histogram2dcontour-colorbar-thickness", "name": "histogram2dcontour > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#histogram2dcontour-colorbar-bgcolor", "name": "histogram2dcontour > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#histogram2dcontour-colorbar-outlinewidth", "name": "histogram2dcontour > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#histogram2dcontour-colorbar-bordercolor", "name": "histogram2dcontour > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#histogram2dcontour-colorbar-xanchor", "name": "histogram2dcontour > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#histogram2dcontour-colorbar-separatethousands", "name": "histogram2dcontour > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#histogram2dcontour-colorbar-ticklen", "name": "histogram2dcontour > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#histogram2dcontour-colorbar-len", "name": "histogram2dcontour > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#histogram2dcontour-colorbar-ticksuffix", "name": "histogram2dcontour > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#histogram2dcontour-colorbar-tickcolor", "name": "histogram2dcontour > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#histogram2dcontour-colorbar-ticktext", "name": "histogram2dcontour > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#histogram2dcontour-colorbar-xpad", "name": "histogram2dcontour > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#histogram2dcontour-colorbar-tickvals", "name": "histogram2dcontour > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#histogram2dcontour-colorbar-tickfont", "name": "histogram2dcontour > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#histogram2dcontour-colorbar-tickfont-family", "name": "histogram2dcontour > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram2dcontour-colorbar-tickfont-color", "name": "histogram2dcontour > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#histogram2dcontour-colorbar-tickfont-size", "name": "histogram2dcontour > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#histogram2dcontour-colorbar-tickwidth", "name": "histogram2dcontour > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#histogram2dcontour-colorbar-tick0", "name": "histogram2dcontour > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#histogram2dcontour-colorbar-tickangle", "name": "histogram2dcontour > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#histogram2dcontour-colorbar-dtick", "name": "histogram2dcontour > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#histogram2dcontour-colorbar-ypad", "name": "histogram2dcontour > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#histogram2dcontour-colorbar-exponentformat", "name": "histogram2dcontour > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#histogram2dcontour-colorbar-y", "name": "histogram2dcontour > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#histogram2dcontour-colorbar-x", "name": "histogram2dcontour > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#histogram2dcontour-colorbar-thicknessmode", "name": "histogram2dcontour > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#histogram2dcontour-reversescale", "name": "histogram2dcontour > reversescale", "description": "Reverses the colorscale."}, {"permalink": "reference/#histogram2dcontour-showlegend", "name": "histogram2dcontour > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#histogram2dcontour-customdata", "name": "histogram2dcontour > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#histogram2dcontour-ncontours", "name": "histogram2dcontour > ncontours", "description": "Sets the maximum number of contour levels. The actual number of contours will be chosen automatically to be less than or equal to the value of `ncontours`. Has an effect only if `autocontour` is *true* or if `contours.size` is missing."}, {"permalink": "reference/#histogram2dcontour-contours", "name": "histogram2dcontour > contours", "description": "Properties for contours"}, {"permalink": "reference/#histogram2dcontour-contours-coloring", "name": "histogram2dcontour > contours > coloring", "description": "Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace."}, {"permalink": "reference/#histogram2dcontour-contours-end", "name": "histogram2dcontour > contours > end", "description": "Sets the end contour level value. Must be more than `contours.start`"}, {"permalink": "reference/#histogram2dcontour-contours-showlabels", "name": "histogram2dcontour > contours > showlabels", "description": "Determines whether to label the contour lines with their values."}, {"permalink": "reference/#histogram2dcontour-contours-showlines", "name": "histogram2dcontour > contours > showlines", "description": "Determines whether or not the contour lines are drawn. Has an effect only if `contours.coloring` is set to *fill*."}, {"permalink": "reference/#histogram2dcontour-contours-labelfont", "name": "histogram2dcontour > contours > labelfont", "description": "Sets the font used for labeling the contour levels. The default color comes from the lines, if shown. The default family and size come from `layout.font`."}, {"permalink": "reference/#histogram2dcontour-contours-labelfont-family", "name": "histogram2dcontour > contours > labelfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram2dcontour-contours-labelfont-color", "name": "histogram2dcontour > contours > labelfont > color", "description": "Properties for color"}, {"permalink": "reference/#histogram2dcontour-contours-labelfont-size", "name": "histogram2dcontour > contours > labelfont > size", "description": "Properties for size"}, {"permalink": "reference/#histogram2dcontour-contours-start", "name": "histogram2dcontour > contours > start", "description": "Sets the starting contour level value. Must be less than `contours.end`"}, {"permalink": "reference/#histogram2dcontour-contours-labelformat", "name": "histogram2dcontour > contours > labelformat", "description": "Sets the contour label formatting rule using d3 formatting mini-language which is very similar to Python, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format."}, {"permalink": "reference/#histogram2dcontour-contours-size", "name": "histogram2dcontour > contours > size", "description": "Sets the step between each contour level. Must be positive."}, {"permalink": "reference/#histogram2dcontour-xaxis", "name": "histogram2dcontour > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#histogram2dcontour-type", "name": "histogram2dcontour > type", "description": "Properties for type"}, {"permalink": "reference/#histogram2dcontour-ycalendar", "name": "histogram2dcontour > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#histogram2dcontour-opacity", "name": "histogram2dcontour > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#histogram2dcontour-legendgroup", "name": "histogram2dcontour > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#histogram2dcontour-autocontour", "name": "histogram2dcontour > autocontour", "description": "Determines whether or not the contour level attributes are picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`."}, {"permalink": "reference/#histogram2dcontour-autocolorscale", "name": "histogram2dcontour > autocolorscale", "description": "Determines whether or not the colorscale is picked using the sign of the input z values."}, {"permalink": "reference/#histogram2dcontour-hoverlabel", "name": "histogram2dcontour > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#histogram2dcontour-hoverlabel-bordercolor", "name": "histogram2dcontour > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#histogram2dcontour-hoverlabel-bgcolor", "name": "histogram2dcontour > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#histogram2dcontour-hoverlabel-namelength", "name": "histogram2dcontour > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#histogram2dcontour-hoverlabel-font", "name": "histogram2dcontour > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#histogram2dcontour-hoverlabel-font-family", "name": "histogram2dcontour > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#histogram2dcontour-hoverlabel-font-color", "name": "histogram2dcontour > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#histogram2dcontour-hoverlabel-font-size", "name": "histogram2dcontour > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#histogram2dcontour-nbinsy", "name": "histogram2dcontour > nbinsy", "description": "Specifies the maximum number of desired bins. This value will be used in an algorithm that will decide the optimal bin size such that the histogram best visualizes the distribution of the data."}, {"permalink": "reference/#histogram2dcontour-histfunc", "name": "histogram2dcontour > histfunc", "description": "Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively."}, {"permalink": "reference/#histogram2dcontour-hoverinfo", "name": "histogram2dcontour > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#histogram2dcontour-showscale", "name": "histogram2dcontour > showscale", "description": "Determines whether or not a colorbar is displayed for this trace."}, {"permalink": "reference/#histogram2dcontour-line", "name": "histogram2dcontour > line", "description": "Properties for line"}, {"permalink": "reference/#histogram2dcontour-line-color", "name": "histogram2dcontour > line > color", "description": "Sets the color of the contour level. Has no effect if `contours.coloring` is set to *lines*."}, {"permalink": "reference/#histogram2dcontour-line-smoothing", "name": "histogram2dcontour > line > smoothing", "description": "Sets the amount of smoothing for the contour lines, where *0* corresponds to no smoothing."}, {"permalink": "reference/#histogram2dcontour-line-dash", "name": "histogram2dcontour > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#histogram2dcontour-line-width", "name": "histogram2dcontour > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#histogram2dcontour-ybins", "name": "histogram2dcontour > ybins", "description": "Properties for ybins"}, {"permalink": "reference/#histogram2dcontour-ybins-end", "name": "histogram2dcontour > ybins > end", "description": "Sets the end value for the y axis bins."}, {"permalink": "reference/#histogram2dcontour-ybins-start", "name": "histogram2dcontour > ybins > start", "description": "Sets the starting value for the y axis bins."}, {"permalink": "reference/#histogram2dcontour-ybins-size", "name": "histogram2dcontour > ybins > size", "description": "Sets the step in-between value each y axis bin."}, {"permalink": "reference/#histogram2dcontour-autobiny", "name": "histogram2dcontour > autobiny", "description": "Determines whether or not the y axis bin attributes are picked by an algorithm. Note that this should be set to false if you want to manually set the number of bins using the attributes in ybins."}, {"permalink": "reference/#histogram2dcontour-autobinx", "name": "histogram2dcontour > autobinx", "description": "Determines whether or not the x axis bin attributes are picked by an algorithm. Note that this should be set to false if you want to manually set the number of bins using the attributes in xbins."}, {"permalink": "reference/#histogram2dcontour-name", "name": "histogram2dcontour > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#histogram2dcontour-colorscale", "name": "histogram2dcontour > colorscale", "description": "Sets the colorscale. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in z space, use zmin and zmax"}, {"permalink": "reference/#histogram2dcontour-yaxis", "name": "histogram2dcontour > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#histogram2dcontour-ids", "name": "histogram2dcontour > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#histogram2dcontour-histnorm", "name": "histogram2dcontour > histnorm", "description": "Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent* / *probability*, the span of each bar corresponds to the percentage / fraction of occurrences with respect to the total number of sample points (here, the sum of all bin HEIGHTS equals 100% / 1). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin AREAS equals the total number of sample points). If *probability density*, the area of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin AREAS equals 1)."}, {"permalink": "reference/#histogram2dcontour-zauto", "name": "histogram2dcontour > zauto", "description": "Determines the whether or not the color domain is computed with respect to the input data."}, {"permalink": "reference/#histogram2dcontour-nbinsx", "name": "histogram2dcontour > nbinsx", "description": "Specifies the maximum number of desired bins. This value will be used in an algorithm that will decide the optimal bin size such that the histogram best visualizes the distribution of the data."}, {"permalink": "reference/#histogram2dcontour-y", "name": "histogram2dcontour > y", "description": "Sets the sample data to be binned on the y axis."}, {"permalink": "reference/#histogram2dcontour-x", "name": "histogram2dcontour > x", "description": "Sets the sample data to be binned on the x axis."}, {"permalink": "reference/#histogram2dcontour-z", "name": "histogram2dcontour > z", "description": "Sets the aggregation data."}, {"permalink": "reference/#scatter-textposition", "name": "scatter > textposition", "description": "Sets the positions of the `text` elements with respects to the (x,y) coordinates."}, {"permalink": "reference/#scatter-stream", "name": "scatter > stream", "description": "Properties for stream"}, {"permalink": "reference/#scatter-stream-token", "name": "scatter > stream > token", "description": "The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details."}, {"permalink": "reference/#scatter-stream-maxpoints", "name": "scatter > stream > maxpoints", "description": "Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot."}, {"permalink": "reference/#scatter-text", "name": "scatter > text", "description": "Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates. If trace `hoverinfo` contains a *text* flag and *hovertext* is not set, these elements will be seen in the hover labels."}, {"permalink": "reference/#scatter-ycalendar", "name": "scatter > ycalendar", "description": "Sets the calendar system to use with `y` date data."}, {"permalink": "reference/#scatter-hoverinfo", "name": "scatter > hoverinfo", "description": "Determines which trace information appear on hover. If `none` or `skip` are set, no information is displayed upon hovering. But, if `none` is set, click and hover events are still fired."}, {"permalink": "reference/#scatter-visible", "name": "scatter > visible", "description": "Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible)."}, {"permalink": "reference/#scatter-xcalendar", "name": "scatter > xcalendar", "description": "Sets the calendar system to use with `x` date data."}, {"permalink": "reference/#scatter-cliponaxis", "name": "scatter > cliponaxis", "description": "Determines whether or not markers and text nodes are clipped about the subplot axes. To show markers and text nodes above axis lines and tick labels, make sure to set `xaxis.layer` and `yaxis.layer` to *below traces*."}, {"permalink": "reference/#scatter-marker", "name": "scatter > marker", "description": "Properties for marker"}, {"permalink": "reference/#scatter-marker-cmin", "name": "scatter > marker > cmin", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well."}, {"permalink": "reference/#scatter-marker-color", "name": "scatter > marker > color", "description": "Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scatter-marker-size", "name": "scatter > marker > size", "description": "Sets the marker size (in px)."}, {"permalink": "reference/#scatter-marker-colorbar", "name": "scatter > marker > colorbar", "description": "Properties for colorbar"}, {"permalink": "reference/#scatter-marker-colorbar-yanchor", "name": "scatter > marker > colorbar > yanchor", "description": "Sets this color bar's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar."}, {"permalink": "reference/#scatter-marker-colorbar-showexponent", "name": "scatter > marker > colorbar > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#scatter-marker-colorbar-showticklabels", "name": "scatter > marker > colorbar > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#scatter-marker-colorbar-lenmode", "name": "scatter > marker > colorbar > lenmode", "description": "Determines whether this color bar's length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#scatter-marker-colorbar-showticksuffix", "name": "scatter > marker > colorbar > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#scatter-marker-colorbar-titlefont", "name": "scatter > marker > colorbar > titlefont", "description": "Sets this color bar's title font."}, {"permalink": "reference/#scatter-marker-colorbar-titlefont-family", "name": "scatter > marker > colorbar > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter-marker-colorbar-titlefont-color", "name": "scatter > marker > colorbar > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#scatter-marker-colorbar-titlefont-size", "name": "scatter > marker > colorbar > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#scatter-marker-colorbar-borderwidth", "name": "scatter > marker > colorbar > borderwidth", "description": "Sets the width (in px) or the border enclosing this color bar."}, {"permalink": "reference/#scatter-marker-colorbar-nticks", "name": "scatter > marker > colorbar > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#scatter-marker-colorbar-showtickprefix", "name": "scatter > marker > colorbar > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#scatter-marker-colorbar-titleside", "name": "scatter > marker > colorbar > titleside", "description": "Determines the location of the colorbar title with respect to the color bar."}, {"permalink": "reference/#scatter-marker-colorbar-outlinecolor", "name": "scatter > marker > colorbar > outlinecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scatter-marker-colorbar-tickprefix", "name": "scatter > marker > colorbar > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#scatter-marker-colorbar-tickformat", "name": "scatter > marker > colorbar > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#scatter-marker-colorbar-tickmode", "name": "scatter > marker > colorbar > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#scatter-marker-colorbar-title", "name": "scatter > marker > colorbar > title", "description": "Sets the title of the color bar."}, {"permalink": "reference/#scatter-marker-colorbar-ticks", "name": "scatter > marker > colorbar > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#scatter-marker-colorbar-thickness", "name": "scatter > marker > colorbar > thickness", "description": "Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels."}, {"permalink": "reference/#scatter-marker-colorbar-bgcolor", "name": "scatter > marker > colorbar > bgcolor", "description": "Sets the color of padded area."}, {"permalink": "reference/#scatter-marker-colorbar-outlinewidth", "name": "scatter > marker > colorbar > outlinewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#scatter-marker-colorbar-bordercolor", "name": "scatter > marker > colorbar > bordercolor", "description": "Sets the axis line color."}, {"permalink": "reference/#scatter-marker-colorbar-xanchor", "name": "scatter > marker > colorbar > xanchor", "description": "Sets this color bar's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar."}, {"permalink": "reference/#scatter-marker-colorbar-separatethousands", "name": "scatter > marker > colorbar > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#scatter-marker-colorbar-ticklen", "name": "scatter > marker > colorbar > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#scatter-marker-colorbar-len", "name": "scatter > marker > colorbar > len", "description": "Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends."}, {"permalink": "reference/#scatter-marker-colorbar-ticksuffix", "name": "scatter > marker > colorbar > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#scatter-marker-colorbar-tickcolor", "name": "scatter > marker > colorbar > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#scatter-marker-colorbar-ticktext", "name": "scatter > marker > colorbar > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#scatter-marker-colorbar-xpad", "name": "scatter > marker > colorbar > xpad", "description": "Sets the amount of padding (in px) along the x direction."}, {"permalink": "reference/#scatter-marker-colorbar-tickvals", "name": "scatter > marker > colorbar > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#scatter-marker-colorbar-tickfont", "name": "scatter > marker > colorbar > tickfont", "description": "Sets the color bar's tick label font"}, {"permalink": "reference/#scatter-marker-colorbar-tickfont-family", "name": "scatter > marker > colorbar > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter-marker-colorbar-tickfont-color", "name": "scatter > marker > colorbar > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#scatter-marker-colorbar-tickfont-size", "name": "scatter > marker > colorbar > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#scatter-marker-colorbar-tickwidth", "name": "scatter > marker > colorbar > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#scatter-marker-colorbar-tick0", "name": "scatter > marker > colorbar > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#scatter-marker-colorbar-tickangle", "name": "scatter > marker > colorbar > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#scatter-marker-colorbar-dtick", "name": "scatter > marker > colorbar > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#scatter-marker-colorbar-ypad", "name": "scatter > marker > colorbar > ypad", "description": "Sets the amount of padding (in px) along the y direction."}, {"permalink": "reference/#scatter-marker-colorbar-exponentformat", "name": "scatter > marker > colorbar > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#scatter-marker-colorbar-y", "name": "scatter > marker > colorbar > y", "description": "Sets the y position of the color bar (in plot fraction)."}, {"permalink": "reference/#scatter-marker-colorbar-x", "name": "scatter > marker > colorbar > x", "description": "Sets the x position of the color bar (in plot fraction)."}, {"permalink": "reference/#scatter-marker-colorbar-thicknessmode", "name": "scatter > marker > colorbar > thicknessmode", "description": "Determines whether this color bar's thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value."}, {"permalink": "reference/#scatter-marker-autocolorscale", "name": "scatter > marker > autocolorscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scatter-marker-gradient", "name": "scatter > marker > gradient", "description": "Properties for gradient"}, {"permalink": "reference/#scatter-marker-gradient-color", "name": "scatter > marker > gradient > color", "description": "Sets the final color of the gradient fill: the center color for radial, the right for horizontal, or the bottom for vertical."}, {"permalink": "reference/#scatter-marker-gradient-type", "name": "scatter > marker > gradient > type", "description": "Sets the type of gradient used to fill the markers"}, {"permalink": "reference/#scatter-marker-maxdisplayed", "name": "scatter > marker > maxdisplayed", "description": "Sets a maximum number of points to be drawn on the graph. *0* corresponds to no limit."}, {"permalink": "reference/#scatter-marker-opacity", "name": "scatter > marker > opacity", "description": "Sets the marker opacity."}, {"permalink": "reference/#scatter-marker-sizeref", "name": "scatter > marker > sizeref", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`."}, {"permalink": "reference/#scatter-marker-symbol", "name": "scatter > marker > symbol", "description": "Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name."}, {"permalink": "reference/#scatter-marker-showscale", "name": "scatter > marker > showscale", "description": "Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed."}, {"permalink": "reference/#scatter-marker-line", "name": "scatter > marker > line", "description": "Properties for line"}, {"permalink": "reference/#scatter-marker-line-autocolorscale", "name": "scatter > marker > line > autocolorscale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.line.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed."}, {"permalink": "reference/#scatter-marker-line-cmin", "name": "scatter > marker > line > cmin", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmax` must be set as well."}, {"permalink": "reference/#scatter-marker-line-colorscale", "name": "scatter > marker > line > colorscale", "description": "Sets the colorscale and only has an effect if `marker.line.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.line.cmin` and `marker.line.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scatter-marker-line-color", "name": "scatter > marker > line > color", "description": "Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set."}, {"permalink": "reference/#scatter-marker-line-reversescale", "name": "scatter > marker > line > reversescale", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scatter-marker-line-width", "name": "scatter > marker > line > width", "description": "Sets the width (in px) of the lines bounding the marker points."}, {"permalink": "reference/#scatter-marker-line-cauto", "name": "scatter > marker > line > cauto", "description": "Has an effect only if `marker.line.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scatter-marker-line-cmax", "name": "scatter > marker > line > cmax", "description": "Has an effect only if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.line.color` array index, and if set, `marker.line.cmin` must be set as well."}, {"permalink": "reference/#scatter-marker-colorscale", "name": "scatter > marker > colorscale", "description": "Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, 'rgb(0,0,255)', [1, 'rgb(255,0,0)']]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis"}, {"permalink": "reference/#scatter-marker-reversescale", "name": "scatter > marker > reversescale", "description": "Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color)."}, {"permalink": "reference/#scatter-marker-sizemode", "name": "scatter > marker > sizemode", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels."}, {"permalink": "reference/#scatter-marker-cauto", "name": "scatter > marker > cauto", "description": "Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user."}, {"permalink": "reference/#scatter-marker-cmax", "name": "scatter > marker > cmax", "description": "Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well."}, {"permalink": "reference/#scatter-marker-sizemin", "name": "scatter > marker > sizemin", "description": "Has an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points."}, {"permalink": "reference/#scatter-y0", "name": "scatter > y0", "description": "Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step."}, {"permalink": "reference/#scatter-line", "name": "scatter > line", "description": "Properties for line"}, {"permalink": "reference/#scatter-line-simplify", "name": "scatter > line > simplify", "description": "Simplifies lines by removing nearly-collinear points. When transitioning lines, it may be desirable to disable this so that the number of points along the resulting SVG path is unaffected."}, {"permalink": "reference/#scatter-line-color", "name": "scatter > line > color", "description": "Sets the line color."}, {"permalink": "reference/#scatter-line-smoothing", "name": "scatter > line > smoothing", "description": "Has an effect only if `shape` is set to *spline* Sets the amount of smoothing. *0* corresponds to no smoothing (equivalent to a *linear* shape)."}, {"permalink": "reference/#scatter-line-dash", "name": "scatter > line > dash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#scatter-line-width", "name": "scatter > line > width", "description": "Sets the line width (in px)."}, {"permalink": "reference/#scatter-line-shape", "name": "scatter > line > shape", "description": "Determines the line shape. With *spline* the lines are drawn using spline interpolation. The other available values correspond to step-wise line shapes."}, {"permalink": "reference/#scatter-hoveron", "name": "scatter > hoveron", "description": "Do the hover effects highlight individual points (markers or line points) or do they highlight filled regions? If the fill is *toself* or *tonext* and there are no markers or text, then the default is *fills*, otherwise it is *points*."}, {"permalink": "reference/#scatter-fill", "name": "scatter > fill", "description": "Sets the area to fill with a solid color. Use with `fillcolor` if not *none*. *tozerox* and *tozeroy* fill to x=0 and y=0 respectively. *tonextx* and *tonexty* fill between the endpoints of this trace and the endpoints of the trace before it, connecting those endpoints with straight lines (to make a stacked area graph); if there is no trace before it, they behave like *tozerox* and *tozeroy*. *toself* connects the endpoints of the trace (or each segment of the trace if it has gaps) into a closed shape. *tonext* fills the space between two traces if one completely encloses the other (eg consecutive contour lines), and behaves like *toself* if there is no trace before it. *tonext* should not be used if one trace does not enclose the other."}, {"permalink": "reference/#scatter-showlegend", "name": "scatter > showlegend", "description": "Determines whether or not an item corresponding to this trace is shown in the legend."}, {"permalink": "reference/#scatter-error_x", "name": "scatter > error_x", "description": "Properties for error_x"}, {"permalink": "reference/#scatter-error_x-copy_ystyle", "name": "scatter > error_x > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#scatter-error_x-tracerefminus", "name": "scatter > error_x > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#scatter-error_x-width", "name": "scatter > error_x > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#scatter-error_x-copy_zstyle", "name": "scatter > error_x > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#scatter-error_x-value", "name": "scatter > error_x > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#scatter-error_x-thickness", "name": "scatter > error_x > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#scatter-error_x-symmetric", "name": "scatter > error_x > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#scatter-error_x-visible", "name": "scatter > error_x > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#scatter-error_x-traceref", "name": "scatter > error_x > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#scatter-error_x-valueminus", "name": "scatter > error_x > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#scatter-error_x-arrayminus", "name": "scatter > error_x > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter-error_x-array", "name": "scatter > error_x > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter-error_x-type", "name": "scatter > error_x > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#scatter-error_x-color", "name": "scatter > error_x > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#scatter-error_y", "name": "scatter > error_y", "description": "Properties for error_y"}, {"permalink": "reference/#scatter-error_y-copy_ystyle", "name": "scatter > error_y > copy_ystyle", "description": "Properties for copy_ystyle"}, {"permalink": "reference/#scatter-error_y-tracerefminus", "name": "scatter > error_y > tracerefminus", "description": "Properties for tracerefminus"}, {"permalink": "reference/#scatter-error_y-width", "name": "scatter > error_y > width", "description": "Sets the width (in px) of the cross-bar at both ends of the error bars."}, {"permalink": "reference/#scatter-error_y-copy_zstyle", "name": "scatter > error_y > copy_zstyle", "description": "Properties for copy_zstyle"}, {"permalink": "reference/#scatter-error_y-value", "name": "scatter > error_y > value", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars."}, {"permalink": "reference/#scatter-error_y-thickness", "name": "scatter > error_y > thickness", "description": "Sets the thickness (in px) of the error bars."}, {"permalink": "reference/#scatter-error_y-symmetric", "name": "scatter > error_y > symmetric", "description": "Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars."}, {"permalink": "reference/#scatter-error_y-visible", "name": "scatter > error_y > visible", "description": "Determines whether or not this set of error bars is visible."}, {"permalink": "reference/#scatter-error_y-traceref", "name": "scatter > error_y > traceref", "description": "Properties for traceref"}, {"permalink": "reference/#scatter-error_y-valueminus", "name": "scatter > error_y > valueminus", "description": "Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars"}, {"permalink": "reference/#scatter-error_y-arrayminus", "name": "scatter > error_y > arrayminus", "description": "Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter-error_y-array", "name": "scatter > error_y > array", "description": "Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data."}, {"permalink": "reference/#scatter-error_y-type", "name": "scatter > error_y > type", "description": "Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`."}, {"permalink": "reference/#scatter-error_y-color", "name": "scatter > error_y > color", "description": "Sets the stoke color of the error bars."}, {"permalink": "reference/#scatter-customdata", "name": "scatter > customdata", "description": "Assigns extra data each datum. This may be useful when listening to hover, click and selection events. Note that, *scatter* traces also appends customdata items in the markers DOM elements"}, {"permalink": "reference/#scatter-xaxis", "name": "scatter > xaxis", "description": "Sets a reference between this trace's x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#scatter-type", "name": "scatter > type", "description": "Properties for type"}, {"permalink": "reference/#scatter-t", "name": "scatter > t", "description": "For polar chart only.Sets the angular coordinates."}, {"permalink": "reference/#scatter-opacity", "name": "scatter > opacity", "description": "Sets the opacity of the trace."}, {"permalink": "reference/#scatter-textfont", "name": "scatter > textfont", "description": "Sets the text font."}, {"permalink": "reference/#scatter-textfont-family", "name": "scatter > textfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter-textfont-color", "name": "scatter > textfont > color", "description": "Properties for color"}, {"permalink": "reference/#scatter-textfont-size", "name": "scatter > textfont > size", "description": "Properties for size"}, {"permalink": "reference/#scatter-legendgroup", "name": "scatter > legendgroup", "description": "Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items."}, {"permalink": "reference/#scatter-hovertext", "name": "scatter > hovertext", "description": "Sets hover text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace's (x,y) coordinates. To be seen, trace `hoverinfo` must contain a *text* flag."}, {"permalink": "reference/#scatter-hoverlabel", "name": "scatter > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#scatter-hoverlabel-bordercolor", "name": "scatter > hoverlabel > bordercolor", "description": "Sets the border color of the hover labels for this trace."}, {"permalink": "reference/#scatter-hoverlabel-bgcolor", "name": "scatter > hoverlabel > bgcolor", "description": "Sets the background color of the hover labels for this trace"}, {"permalink": "reference/#scatter-hoverlabel-namelength", "name": "scatter > hoverlabel > namelength", "description": "Sets the length (in number of characters) of the trace name in the hover labels for this trace. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#scatter-hoverlabel-font", "name": "scatter > hoverlabel > font", "description": "Sets the font used in hover labels."}, {"permalink": "reference/#scatter-hoverlabel-font-family", "name": "scatter > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#scatter-hoverlabel-font-color", "name": "scatter > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#scatter-hoverlabel-font-size", "name": "scatter > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#scatter-fillcolor", "name": "scatter > fillcolor", "description": "Sets the fill color. Defaults to a half-transparent variant of the line color, marker color, or marker line color, whichever is available."}, {"permalink": "reference/#scatter-dx", "name": "scatter > dx", "description": "Sets the x coordinate step. See `x0` for more info."}, {"permalink": "reference/#scatter-dy", "name": "scatter > dy", "description": "Sets the y coordinate step. See `y0` for more info."}, {"permalink": "reference/#scatter-x0", "name": "scatter > x0", "description": "Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step."}, {"permalink": "reference/#scatter-name", "name": "scatter > name", "description": "Sets the trace name. The trace name appear as the legend item and on hover."}, {"permalink": "reference/#scatter-yaxis", "name": "scatter > yaxis", "description": "Sets a reference between this trace's y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on."}, {"permalink": "reference/#scatter-connectgaps", "name": "scatter > connectgaps", "description": "Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected."}, {"permalink": "reference/#scatter-ids", "name": "scatter > ids", "description": "Assigns id labels to each datum. These ids for object constancy of data points during animation."}, {"permalink": "reference/#scatter-r", "name": "scatter > r", "description": "For polar chart only.Sets the radial coordinates."}, {"permalink": "reference/#scatter-mode", "name": "scatter > mode", "description": "Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*."}, {"permalink": "reference/#scatter-y", "name": "scatter > y", "description": "Sets the y coordinates."}, {"permalink": "reference/#scatter-x", "name": "scatter > x", "description": "Sets the x coordinates."}, {"permalink": "reference/#layout-orientation", "name": "Layout > orientation", "description": "For polar plots only. Rotates the entire polar by the given angle."}, {"permalink": "reference/#layout-paper_bgcolor", "name": "Layout > paper_bgcolor", "description": "Sets the color of paper where the graph is drawn."}, {"permalink": "reference/#layout-scene", "name": "Layout > scene", "description": "Properties for scene"}, {"permalink": "reference/#layout-scene-domain", "name": "Layout > scene > domain", "description": "Properties for domain"}, {"permalink": "reference/#layout-scene-domain-y", "name": "Layout > scene > domain > y", "description": "Sets the vertical domain of this scene (in plot fraction)."}, {"permalink": "reference/#layout-scene-domain-x", "name": "Layout > scene > domain > x", "description": "Sets the horizontal domain of this scene (in plot fraction)."}, {"permalink": "reference/#layout-scene-dragmode", "name": "Layout > scene > dragmode", "description": "Determines the mode of drag interactions for this scene."}, {"permalink": "reference/#layout-scene-yaxis", "name": "Layout > scene > yaxis", "description": "Properties for yaxis"}, {"permalink": "reference/#layout-scene-yaxis-showexponent", "name": "Layout > scene > yaxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-scene-yaxis-showticklabels", "name": "Layout > scene > yaxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-scene-yaxis-ticksuffix", "name": "Layout > scene > yaxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-scene-yaxis-color", "name": "Layout > scene > yaxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-scene-yaxis-categoryarray", "name": "Layout > scene > yaxis > categoryarray", "description": "Sets the order in which categories on this axis appear. Only has an effect if `categoryorder` is set to *array*. Used with `categoryorder`."}, {"permalink": "reference/#layout-scene-yaxis-showticksuffix", "name": "Layout > scene > yaxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-scene-yaxis-gridwidth", "name": "Layout > scene > yaxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-scene-yaxis-visible", "name": "Layout > scene > yaxis > visible", "description": "A single toggle to hide the axis while preserving interaction like dragging. Default is true when a cheater plot is present on the axis, otherwise false"}, {"permalink": "reference/#layout-scene-yaxis-titlefont", "name": "Layout > scene > yaxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-scene-yaxis-titlefont-family", "name": "Layout > scene > yaxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-scene-yaxis-titlefont-color", "name": "Layout > scene > yaxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-scene-yaxis-titlefont-size", "name": "Layout > scene > yaxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-scene-yaxis-linecolor", "name": "Layout > scene > yaxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-scene-yaxis-mirror", "name": "Layout > scene > yaxis > mirror", "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots."}, {"permalink": "reference/#layout-scene-yaxis-nticks", "name": "Layout > scene > yaxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-scene-yaxis-linewidth", "name": "Layout > scene > yaxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-scene-yaxis-autorange", "name": "Layout > scene > yaxis > autorange", "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#layout-scene-yaxis-showspikes", "name": "Layout > scene > yaxis > showspikes", "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover."}, {"permalink": "reference/#layout-scene-yaxis-tickprefix", "name": "Layout > scene > yaxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-scene-yaxis-tickformat", "name": "Layout > scene > yaxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-scene-yaxis-tickmode", "name": "Layout > scene > yaxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-scene-yaxis-title", "name": "Layout > scene > yaxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-scene-yaxis-spikecolor", "name": "Layout > scene > yaxis > spikecolor", "description": "Sets the color of the spikes."}, {"permalink": "reference/#layout-scene-yaxis-ticks", "name": "Layout > scene > yaxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-scene-yaxis-spikesides", "name": "Layout > scene > yaxis > spikesides", "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover."}, {"permalink": "reference/#layout-scene-yaxis-spikethickness", "name": "Layout > scene > yaxis > spikethickness", "description": "Sets the thickness (in px) of the spikes."}, {"permalink": "reference/#layout-scene-yaxis-rangemode", "name": "Layout > scene > yaxis > rangemode", "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data."}, {"permalink": "reference/#layout-scene-yaxis-showtickprefix", "name": "Layout > scene > yaxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-scene-yaxis-zeroline", "name": "Layout > scene > yaxis > zeroline", "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines."}, {"permalink": "reference/#layout-scene-yaxis-gridcolor", "name": "Layout > scene > yaxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-scene-yaxis-type", "name": "Layout > scene > yaxis > type", "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question."}, {"permalink": "reference/#layout-scene-yaxis-separatethousands", "name": "Layout > scene > yaxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-scene-yaxis-zerolinewidth", "name": "Layout > scene > yaxis > zerolinewidth", "description": "Sets the width (in px) of the zero line."}, {"permalink": "reference/#layout-scene-yaxis-ticklen", "name": "Layout > scene > yaxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-scene-yaxis-categoryorder", "name": "Layout > scene > yaxis > categoryorder", "description": "Specifies the ordering logic for the case of categorical variables. By default, plotly uses *trace*, which specifies the order that is present in the data supplied. Set `categoryorder` to *category ascending* or *category descending* if order should be determined by the alphanumerical order of the category names. Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to the *trace* mode. The unspecified categories will follow the categories in `categoryarray`."}, {"permalink": "reference/#layout-scene-yaxis-hoverformat", "name": "Layout > scene > yaxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-scene-yaxis-backgroundcolor", "name": "Layout > scene > yaxis > backgroundcolor", "description": "Sets the background color of this axis' wall."}, {"permalink": "reference/#layout-scene-yaxis-showline", "name": "Layout > scene > yaxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-scene-yaxis-ticktext", "name": "Layout > scene > yaxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-scene-yaxis-showgrid", "name": "Layout > scene > yaxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-scene-yaxis-tickvals", "name": "Layout > scene > yaxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-scene-yaxis-tickfont", "name": "Layout > scene > yaxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-scene-yaxis-tickfont-family", "name": "Layout > scene > yaxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-scene-yaxis-tickfont-color", "name": "Layout > scene > yaxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-scene-yaxis-tickfont-size", "name": "Layout > scene > yaxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-scene-yaxis-tickwidth", "name": "Layout > scene > yaxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-scene-yaxis-tick0", "name": "Layout > scene > yaxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-scene-yaxis-tickangle", "name": "Layout > scene > yaxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-scene-yaxis-showbackground", "name": "Layout > scene > yaxis > showbackground", "description": "Sets whether or not this axis' wall has a background color."}, {"permalink": "reference/#layout-scene-yaxis-dtick", "name": "Layout > scene > yaxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-scene-yaxis-showaxeslabels", "name": "Layout > scene > yaxis > showaxeslabels", "description": "Sets whether or not this axis is labeled"}, {"permalink": "reference/#layout-scene-yaxis-zerolinecolor", "name": "Layout > scene > yaxis > zerolinecolor", "description": "Sets the line color of the zero line."}, {"permalink": "reference/#layout-scene-yaxis-range", "name": "Layout > scene > yaxis > range", "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-scene-yaxis-calendar", "name": "Layout > scene > yaxis > calendar", "description": "Sets the calendar system to use for `range` and `tick0` if this is a date axis. This does not set the calendar for interpreting data on this axis, that's specified in the trace or via the global `layout.calendar`"}, {"permalink": "reference/#layout-scene-yaxis-tickcolor", "name": "Layout > scene > yaxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-scene-yaxis-exponentformat", "name": "Layout > scene > yaxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-scene-aspectmode", "name": "Layout > scene > aspectmode", "description": "If *cube*, this scene's axes are drawn as a cube, regardless of the axes' ranges. If *data*, this scene's axes are drawn in proportion with the axes' ranges. If *manual*, this scene's axes are drawn in proportion with the input of *aspectratio* (the default behavior if *aspectratio* is provided). If *auto*, this scene's axes are drawn using the results of *data* except when one axis is more than four times the size of the two others, where in that case the results of *cube* are used."}, {"permalink": "reference/#layout-scene-annotations", "name": "Layout > scene > annotations", "description": "Properties for annotations"}, {"permalink": "reference/#layout-scene-annotations-items", "name": "Layout > scene > annotations > items", "description": "Properties for items"}, {"permalink": "reference/#layout-scene-annotations-items-annotation", "name": "Layout > scene > annotations > items > annotation", "description": "Properties for annotation"}, {"permalink": "reference/#layout-scene-bgcolor", "name": "Layout > scene > bgcolor", "description": "Properties for bgcolor"}, {"permalink": "reference/#layout-scene-camera", "name": "Layout > scene > camera", "description": "Properties for camera"}, {"permalink": "reference/#layout-scene-camera-eye", "name": "Layout > scene > camera > eye", "description": "Sets the (x,y,z) components of the 'eye' camera vector. This vector determines the view point about the origin of this scene."}, {"permalink": "reference/#layout-scene-camera-eye-y", "name": "Layout > scene > camera > eye > y", "description": "Properties for y"}, {"permalink": "reference/#layout-scene-camera-eye-x", "name": "Layout > scene > camera > eye > x", "description": "Properties for x"}, {"permalink": "reference/#layout-scene-camera-eye-z", "name": "Layout > scene > camera > eye > z", "description": "Properties for z"}, {"permalink": "reference/#layout-scene-camera-up", "name": "Layout > scene > camera > up", "description": "Sets the (x,y,z) components of the 'up' camera vector. This vector determines the up direction of this scene with respect to the page. The default is *{x: 0, y: 0, z: 1}* which means that the z axis points up."}, {"permalink": "reference/#layout-scene-camera-up-y", "name": "Layout > scene > camera > up > y", "description": "Properties for y"}, {"permalink": "reference/#layout-scene-camera-up-x", "name": "Layout > scene > camera > up > x", "description": "Properties for x"}, {"permalink": "reference/#layout-scene-camera-up-z", "name": "Layout > scene > camera > up > z", "description": "Properties for z"}, {"permalink": "reference/#layout-scene-camera-center", "name": "Layout > scene > camera > center", "description": "Sets the (x,y,z) components of the 'center' camera vector This vector determines the translation (x,y,z) space about the center of this scene. By default, there is no such translation."}, {"permalink": "reference/#layout-scene-camera-center-y", "name": "Layout > scene > camera > center > y", "description": "Properties for y"}, {"permalink": "reference/#layout-scene-camera-center-x", "name": "Layout > scene > camera > center > x", "description": "Properties for x"}, {"permalink": "reference/#layout-scene-camera-center-z", "name": "Layout > scene > camera > center > z", "description": "Properties for z"}, {"permalink": "reference/#layout-scene-zaxis", "name": "Layout > scene > zaxis", "description": "Properties for zaxis"}, {"permalink": "reference/#layout-scene-zaxis-showexponent", "name": "Layout > scene > zaxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-scene-zaxis-showticklabels", "name": "Layout > scene > zaxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-scene-zaxis-ticksuffix", "name": "Layout > scene > zaxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-scene-zaxis-color", "name": "Layout > scene > zaxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-scene-zaxis-categoryarray", "name": "Layout > scene > zaxis > categoryarray", "description": "Sets the order in which categories on this axis appear. Only has an effect if `categoryorder` is set to *array*. Used with `categoryorder`."}, {"permalink": "reference/#layout-scene-zaxis-showticksuffix", "name": "Layout > scene > zaxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-scene-zaxis-gridwidth", "name": "Layout > scene > zaxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-scene-zaxis-visible", "name": "Layout > scene > zaxis > visible", "description": "A single toggle to hide the axis while preserving interaction like dragging. Default is true when a cheater plot is present on the axis, otherwise false"}, {"permalink": "reference/#layout-scene-zaxis-titlefont", "name": "Layout > scene > zaxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-scene-zaxis-titlefont-family", "name": "Layout > scene > zaxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-scene-zaxis-titlefont-color", "name": "Layout > scene > zaxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-scene-zaxis-titlefont-size", "name": "Layout > scene > zaxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-scene-zaxis-linecolor", "name": "Layout > scene > zaxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-scene-zaxis-mirror", "name": "Layout > scene > zaxis > mirror", "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots."}, {"permalink": "reference/#layout-scene-zaxis-nticks", "name": "Layout > scene > zaxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-scene-zaxis-linewidth", "name": "Layout > scene > zaxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-scene-zaxis-autorange", "name": "Layout > scene > zaxis > autorange", "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#layout-scene-zaxis-showspikes", "name": "Layout > scene > zaxis > showspikes", "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover."}, {"permalink": "reference/#layout-scene-zaxis-tickprefix", "name": "Layout > scene > zaxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-scene-zaxis-tickformat", "name": "Layout > scene > zaxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-scene-zaxis-tickmode", "name": "Layout > scene > zaxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-scene-zaxis-title", "name": "Layout > scene > zaxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-scene-zaxis-spikecolor", "name": "Layout > scene > zaxis > spikecolor", "description": "Sets the color of the spikes."}, {"permalink": "reference/#layout-scene-zaxis-ticks", "name": "Layout > scene > zaxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-scene-zaxis-spikesides", "name": "Layout > scene > zaxis > spikesides", "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover."}, {"permalink": "reference/#layout-scene-zaxis-spikethickness", "name": "Layout > scene > zaxis > spikethickness", "description": "Sets the thickness (in px) of the spikes."}, {"permalink": "reference/#layout-scene-zaxis-rangemode", "name": "Layout > scene > zaxis > rangemode", "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data."}, {"permalink": "reference/#layout-scene-zaxis-showtickprefix", "name": "Layout > scene > zaxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-scene-zaxis-zeroline", "name": "Layout > scene > zaxis > zeroline", "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines."}, {"permalink": "reference/#layout-scene-zaxis-gridcolor", "name": "Layout > scene > zaxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-scene-zaxis-type", "name": "Layout > scene > zaxis > type", "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question."}, {"permalink": "reference/#layout-scene-zaxis-separatethousands", "name": "Layout > scene > zaxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-scene-zaxis-zerolinewidth", "name": "Layout > scene > zaxis > zerolinewidth", "description": "Sets the width (in px) of the zero line."}, {"permalink": "reference/#layout-scene-zaxis-ticklen", "name": "Layout > scene > zaxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-scene-zaxis-categoryorder", "name": "Layout > scene > zaxis > categoryorder", "description": "Specifies the ordering logic for the case of categorical variables. By default, plotly uses *trace*, which specifies the order that is present in the data supplied. Set `categoryorder` to *category ascending* or *category descending* if order should be determined by the alphanumerical order of the category names. Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to the *trace* mode. The unspecified categories will follow the categories in `categoryarray`."}, {"permalink": "reference/#layout-scene-zaxis-hoverformat", "name": "Layout > scene > zaxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-scene-zaxis-backgroundcolor", "name": "Layout > scene > zaxis > backgroundcolor", "description": "Sets the background color of this axis' wall."}, {"permalink": "reference/#layout-scene-zaxis-showline", "name": "Layout > scene > zaxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-scene-zaxis-ticktext", "name": "Layout > scene > zaxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-scene-zaxis-showgrid", "name": "Layout > scene > zaxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-scene-zaxis-tickvals", "name": "Layout > scene > zaxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-scene-zaxis-tickfont", "name": "Layout > scene > zaxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-scene-zaxis-tickfont-family", "name": "Layout > scene > zaxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-scene-zaxis-tickfont-color", "name": "Layout > scene > zaxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-scene-zaxis-tickfont-size", "name": "Layout > scene > zaxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-scene-zaxis-tickwidth", "name": "Layout > scene > zaxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-scene-zaxis-tick0", "name": "Layout > scene > zaxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-scene-zaxis-tickangle", "name": "Layout > scene > zaxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-scene-zaxis-showbackground", "name": "Layout > scene > zaxis > showbackground", "description": "Sets whether or not this axis' wall has a background color."}, {"permalink": "reference/#layout-scene-zaxis-dtick", "name": "Layout > scene > zaxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-scene-zaxis-showaxeslabels", "name": "Layout > scene > zaxis > showaxeslabels", "description": "Sets whether or not this axis is labeled"}, {"permalink": "reference/#layout-scene-zaxis-zerolinecolor", "name": "Layout > scene > zaxis > zerolinecolor", "description": "Sets the line color of the zero line."}, {"permalink": "reference/#layout-scene-zaxis-range", "name": "Layout > scene > zaxis > range", "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-scene-zaxis-calendar", "name": "Layout > scene > zaxis > calendar", "description": "Sets the calendar system to use for `range` and `tick0` if this is a date axis. This does not set the calendar for interpreting data on this axis, that's specified in the trace or via the global `layout.calendar`"}, {"permalink": "reference/#layout-scene-zaxis-tickcolor", "name": "Layout > scene > zaxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-scene-zaxis-exponentformat", "name": "Layout > scene > zaxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-scene-xaxis", "name": "Layout > scene > xaxis", "description": "Properties for xaxis"}, {"permalink": "reference/#layout-scene-xaxis-showexponent", "name": "Layout > scene > xaxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-scene-xaxis-showticklabels", "name": "Layout > scene > xaxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-scene-xaxis-ticksuffix", "name": "Layout > scene > xaxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-scene-xaxis-color", "name": "Layout > scene > xaxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-scene-xaxis-categoryarray", "name": "Layout > scene > xaxis > categoryarray", "description": "Sets the order in which categories on this axis appear. Only has an effect if `categoryorder` is set to *array*. Used with `categoryorder`."}, {"permalink": "reference/#layout-scene-xaxis-showticksuffix", "name": "Layout > scene > xaxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-scene-xaxis-gridwidth", "name": "Layout > scene > xaxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-scene-xaxis-visible", "name": "Layout > scene > xaxis > visible", "description": "A single toggle to hide the axis while preserving interaction like dragging. Default is true when a cheater plot is present on the axis, otherwise false"}, {"permalink": "reference/#layout-scene-xaxis-titlefont", "name": "Layout > scene > xaxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-scene-xaxis-titlefont-family", "name": "Layout > scene > xaxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-scene-xaxis-titlefont-color", "name": "Layout > scene > xaxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-scene-xaxis-titlefont-size", "name": "Layout > scene > xaxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-scene-xaxis-linecolor", "name": "Layout > scene > xaxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-scene-xaxis-mirror", "name": "Layout > scene > xaxis > mirror", "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots."}, {"permalink": "reference/#layout-scene-xaxis-nticks", "name": "Layout > scene > xaxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-scene-xaxis-linewidth", "name": "Layout > scene > xaxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-scene-xaxis-autorange", "name": "Layout > scene > xaxis > autorange", "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#layout-scene-xaxis-showspikes", "name": "Layout > scene > xaxis > showspikes", "description": "Sets whether or not spikes starting from data points to this axis' wall are shown on hover."}, {"permalink": "reference/#layout-scene-xaxis-tickprefix", "name": "Layout > scene > xaxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-scene-xaxis-tickformat", "name": "Layout > scene > xaxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-scene-xaxis-tickmode", "name": "Layout > scene > xaxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-scene-xaxis-title", "name": "Layout > scene > xaxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-scene-xaxis-spikecolor", "name": "Layout > scene > xaxis > spikecolor", "description": "Sets the color of the spikes."}, {"permalink": "reference/#layout-scene-xaxis-ticks", "name": "Layout > scene > xaxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-scene-xaxis-spikesides", "name": "Layout > scene > xaxis > spikesides", "description": "Sets whether or not spikes extending from the projection data points to this axis' wall boundaries are shown on hover."}, {"permalink": "reference/#layout-scene-xaxis-spikethickness", "name": "Layout > scene > xaxis > spikethickness", "description": "Sets the thickness (in px) of the spikes."}, {"permalink": "reference/#layout-scene-xaxis-rangemode", "name": "Layout > scene > xaxis > rangemode", "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data."}, {"permalink": "reference/#layout-scene-xaxis-showtickprefix", "name": "Layout > scene > xaxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-scene-xaxis-zeroline", "name": "Layout > scene > xaxis > zeroline", "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines."}, {"permalink": "reference/#layout-scene-xaxis-gridcolor", "name": "Layout > scene > xaxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-scene-xaxis-type", "name": "Layout > scene > xaxis > type", "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question."}, {"permalink": "reference/#layout-scene-xaxis-separatethousands", "name": "Layout > scene > xaxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-scene-xaxis-zerolinewidth", "name": "Layout > scene > xaxis > zerolinewidth", "description": "Sets the width (in px) of the zero line."}, {"permalink": "reference/#layout-scene-xaxis-ticklen", "name": "Layout > scene > xaxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-scene-xaxis-categoryorder", "name": "Layout > scene > xaxis > categoryorder", "description": "Specifies the ordering logic for the case of categorical variables. By default, plotly uses *trace*, which specifies the order that is present in the data supplied. Set `categoryorder` to *category ascending* or *category descending* if order should be determined by the alphanumerical order of the category names. Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to the *trace* mode. The unspecified categories will follow the categories in `categoryarray`."}, {"permalink": "reference/#layout-scene-xaxis-hoverformat", "name": "Layout > scene > xaxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-scene-xaxis-backgroundcolor", "name": "Layout > scene > xaxis > backgroundcolor", "description": "Sets the background color of this axis' wall."}, {"permalink": "reference/#layout-scene-xaxis-showline", "name": "Layout > scene > xaxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-scene-xaxis-ticktext", "name": "Layout > scene > xaxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-scene-xaxis-showgrid", "name": "Layout > scene > xaxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-scene-xaxis-tickvals", "name": "Layout > scene > xaxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-scene-xaxis-tickfont", "name": "Layout > scene > xaxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-scene-xaxis-tickfont-family", "name": "Layout > scene > xaxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-scene-xaxis-tickfont-color", "name": "Layout > scene > xaxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-scene-xaxis-tickfont-size", "name": "Layout > scene > xaxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-scene-xaxis-tickwidth", "name": "Layout > scene > xaxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-scene-xaxis-tick0", "name": "Layout > scene > xaxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-scene-xaxis-tickangle", "name": "Layout > scene > xaxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-scene-xaxis-showbackground", "name": "Layout > scene > xaxis > showbackground", "description": "Sets whether or not this axis' wall has a background color."}, {"permalink": "reference/#layout-scene-xaxis-dtick", "name": "Layout > scene > xaxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-scene-xaxis-showaxeslabels", "name": "Layout > scene > xaxis > showaxeslabels", "description": "Sets whether or not this axis is labeled"}, {"permalink": "reference/#layout-scene-xaxis-zerolinecolor", "name": "Layout > scene > xaxis > zerolinecolor", "description": "Sets the line color of the zero line."}, {"permalink": "reference/#layout-scene-xaxis-range", "name": "Layout > scene > xaxis > range", "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-scene-xaxis-calendar", "name": "Layout > scene > xaxis > calendar", "description": "Sets the calendar system to use for `range` and `tick0` if this is a date axis. This does not set the calendar for interpreting data on this axis, that's specified in the trace or via the global `layout.calendar`"}, {"permalink": "reference/#layout-scene-xaxis-tickcolor", "name": "Layout > scene > xaxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-scene-xaxis-exponentformat", "name": "Layout > scene > xaxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-scene-aspectratio", "name": "Layout > scene > aspectratio", "description": "Sets this scene's axis aspectratio."}, {"permalink": "reference/#layout-scene-aspectratio-y", "name": "Layout > scene > aspectratio > y", "description": "Properties for y"}, {"permalink": "reference/#layout-scene-aspectratio-x", "name": "Layout > scene > aspectratio > x", "description": "Properties for x"}, {"permalink": "reference/#layout-scene-aspectratio-z", "name": "Layout > scene > aspectratio > z", "description": "Properties for z"}, {"permalink": "reference/#layout-scene-hovermode", "name": "Layout > scene > hovermode", "description": "Determines the mode of hover interactions for this scene."}, {"permalink": "reference/#layout-height", "name": "Layout > height", "description": "Sets the plot's height (in px)."}, {"permalink": "reference/#layout-radialaxis", "name": "Layout > radialaxis", "description": "Properties for radialaxis"}, {"permalink": "reference/#layout-radialaxis-domain", "name": "Layout > radialaxis > domain", "description": "Polar chart subplots are not supported yet. This key has currently no effect."}, {"permalink": "reference/#layout-radialaxis-showticklabels", "name": "Layout > radialaxis > showticklabels", "description": "Determines whether or not the radial axis ticks will feature tick labels."}, {"permalink": "reference/#layout-radialaxis-orientation", "name": "Layout > radialaxis > orientation", "description": "Sets the orientation (an angle with respect to the origin) of the radial axis."}, {"permalink": "reference/#layout-radialaxis-ticklen", "name": "Layout > radialaxis > ticklen", "description": "Sets the length of the tick lines on this radial axis."}, {"permalink": "reference/#layout-radialaxis-visible", "name": "Layout > radialaxis > visible", "description": "Determines whether or not this axis will be visible."}, {"permalink": "reference/#layout-radialaxis-range", "name": "Layout > radialaxis > range", "description": "Defines the start and end point of this radial axis."}, {"permalink": "reference/#layout-radialaxis-ticksuffix", "name": "Layout > radialaxis > ticksuffix", "description": "Sets the length of the tick lines on this radial axis."}, {"permalink": "reference/#layout-radialaxis-tickcolor", "name": "Layout > radialaxis > tickcolor", "description": "Sets the color of the tick lines on this radial axis."}, {"permalink": "reference/#layout-radialaxis-endpadding", "name": "Layout > radialaxis > endpadding", "description": "Properties for endpadding"}, {"permalink": "reference/#layout-radialaxis-showline", "name": "Layout > radialaxis > showline", "description": "Determines whether or not the line bounding this radial axis will be shown on the figure."}, {"permalink": "reference/#layout-radialaxis-tickorientation", "name": "Layout > radialaxis > tickorientation", "description": "Sets the orientation (from the paper perspective) of the radial axis tick labels."}, {"permalink": "reference/#layout-titlefont", "name": "Layout > titlefont", "description": "Sets the title font."}, {"permalink": "reference/#layout-titlefont-family", "name": "Layout > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-titlefont-color", "name": "Layout > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-titlefont-size", "name": "Layout > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-images", "name": "Layout > images", "description": "Properties for images"}, {"permalink": "reference/#layout-images-items", "name": "Layout > images > items", "description": "Properties for items"}, {"permalink": "reference/#layout-images-items-image", "name": "Layout > images > items > image", "description": "Properties for image"}, {"permalink": "reference/#layout-images-items-image-sizing", "name": "Layout > images > items > image > sizing", "description": "Specifies which dimension of the image to constrain."}, {"permalink": "reference/#layout-images-items-image-opacity", "name": "Layout > images > items > image > opacity", "description": "Sets the opacity of the image."}, {"permalink": "reference/#layout-images-items-image-layer", "name": "Layout > images > items > image > layer", "description": "Specifies whether images are drawn below or above traces. When `xref` and `yref` are both set to `paper`, image is drawn below the entire plot area."}, {"permalink": "reference/#layout-images-items-image-xref", "name": "Layout > images > items > image > xref", "description": "Sets the images's x coordinate axis. If set to a x axis id (e.g. *x* or *x2*), the `x` position refers to an x data coordinate If set to *paper*, the `x` position refers to the distance from the left of plot in normalized coordinates where *0* (*1*) corresponds to the left (right)."}, {"permalink": "reference/#layout-images-items-image-xanchor", "name": "Layout > images > items > image > xanchor", "description": "Sets the anchor for the x position"}, {"permalink": "reference/#layout-images-items-image-source", "name": "Layout > images > items > image > source", "description": "Specifies the URL of the image to be used. The URL must be accessible from the domain where the plot code is run, and can be either relative or absolute."}, {"permalink": "reference/#layout-images-items-image-yref", "name": "Layout > images > items > image > yref", "description": "Sets the images's y coordinate axis. If set to a y axis id (e.g. *y* or *y2*), the `y` position refers to a y data coordinate. If set to *paper*, the `y` position refers to the distance from the bottom of the plot in normalized coordinates where *0* (*1*) corresponds to the bottom (top)."}, {"permalink": "reference/#layout-images-items-image-yanchor", "name": "Layout > images > items > image > yanchor", "description": "Sets the anchor for the y position."}, {"permalink": "reference/#layout-images-items-image-sizex", "name": "Layout > images > items > image > sizex", "description": "Sets the image container size horizontally. The image will be sized based on the `position` value. When `xref` is set to `paper`, units are sized relative to the plot width."}, {"permalink": "reference/#layout-images-items-image-sizey", "name": "Layout > images > items > image > sizey", "description": "Sets the image container size vertically. The image will be sized based on the `position` value. When `yref` is set to `paper`, units are sized relative to the plot height."}, {"permalink": "reference/#layout-images-items-image-visible", "name": "Layout > images > items > image > visible", "description": "Determines whether or not this image is visible."}, {"permalink": "reference/#layout-images-items-image-y", "name": "Layout > images > items > image > y", "description": "Sets the image's y position. When `yref` is set to `paper`, units are sized relative to the plot height. See `yref` for more info"}, {"permalink": "reference/#layout-images-items-image-x", "name": "Layout > images > items > image > x", "description": "Sets the image's x position. When `xref` is set to `paper`, units are sized relative to the plot height. See `xref` for more info"}, {"permalink": "reference/#layout-calendar", "name": "Layout > calendar", "description": "Sets the default calendar system to use for interpreting and displaying dates throughout the plot."}, {"permalink": "reference/#layout-font", "name": "Layout > font", "description": "Sets the global font. Note that fonts used in traces and other layout components inherit from the global font."}, {"permalink": "reference/#layout-font-family", "name": "Layout > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-font-color", "name": "Layout > font > color", "description": "Properties for color"}, {"permalink": "reference/#layout-font-size", "name": "Layout > font > size", "description": "Properties for size"}, {"permalink": "reference/#layout-hovermode", "name": "Layout > hovermode", "description": "Determines the mode of hover interactions."}, {"permalink": "reference/#layout-autosize", "name": "Layout > autosize", "description": "Determines whether or not a layout width or height that has been left undefined by the user is initialized on each relayout. Note that, regardless of this attribute, an undefined layout width or height is always initialized on the first call to plot."}, {"permalink": "reference/#layout-title", "name": "Layout > title", "description": "Sets the plot's title."}, {"permalink": "reference/#layout-plot_bgcolor", "name": "Layout > plot_bgcolor", "description": "Sets the color of plotting area in-between x and y axes."}, {"permalink": "reference/#layout-dragmode", "name": "Layout > dragmode", "description": "Determines the mode of drag interactions. *select* and *lasso* apply only to scatter traces with markers or text. *orbit* and *turntable* apply only to 3D scenes."}, {"permalink": "reference/#layout-smith", "name": "Layout > smith", "description": "Properties for smith"}, {"permalink": "reference/#layout-width", "name": "Layout > width", "description": "Sets the plot's width (in px)."}, {"permalink": "reference/#layout-xaxis", "name": "Layout > xaxis", "description": "Properties for xaxis"}, {"permalink": "reference/#layout-xaxis-showexponent", "name": "Layout > xaxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-xaxis-showticklabels", "name": "Layout > xaxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-xaxis-linecolor", "name": "Layout > xaxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-xaxis-color", "name": "Layout > xaxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-xaxis-categoryarray", "name": "Layout > xaxis > categoryarray", "description": "Sets the order in which categories on this axis appear. Only has an effect if `categoryorder` is set to *array*. Used with `categoryorder`."}, {"permalink": "reference/#layout-xaxis-showticksuffix", "name": "Layout > xaxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-xaxis-visible", "name": "Layout > xaxis > visible", "description": "A single toggle to hide the axis while preserving interaction like dragging. Default is true when a cheater plot is present on the axis, otherwise false"}, {"permalink": "reference/#layout-xaxis-titlefont", "name": "Layout > xaxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-xaxis-titlefont-family", "name": "Layout > xaxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-xaxis-titlefont-color", "name": "Layout > xaxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-xaxis-titlefont-size", "name": "Layout > xaxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-xaxis-spikemode", "name": "Layout > xaxis > spikemode", "description": "Determines the drawing mode for the spike line If *toaxis*, the line is drawn from the data point to the axis the  series is plotted on. If *across*, the line is drawn across the entire plot area, and supercedes *toaxis*. If *marker*, then a marker dot is drawn on the axis the series is plotted on"}, {"permalink": "reference/#layout-xaxis-mirror", "name": "Layout > xaxis > mirror", "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots."}, {"permalink": "reference/#layout-xaxis-scaleanchor", "name": "Layout > xaxis > scaleanchor", "description": "If set to another axis id (e.g. `x2`, `y`), the range of this axis changes together with the range of the corresponding axis such that the scale of pixels per unit is in a constant ratio. Both axes are still zoomable, but when you zoom one, the other will zoom the same amount, keeping a fixed midpoint. `constrain` and `constraintoward` determine how we enforce the constraint. You can chain these, ie `yaxis: {scaleanchor: *x*}, xaxis2: {scaleanchor: *y*}` but you can only link axes of the same `type`. The linked axis can have the opposite letter (to constrain the aspect ratio) or the same letter (to match scales across subplots). Loops (`yaxis: {scaleanchor: *x*}, xaxis: {scaleanchor: *y*}` or longer) are redundant and the last constraint encountered will be ignored to avoid possible inconsistent constraints via `scaleratio`."}, {"permalink": "reference/#layout-xaxis-linewidth", "name": "Layout > xaxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-xaxis-autorange", "name": "Layout > xaxis > autorange", "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#layout-xaxis-nticks", "name": "Layout > xaxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-xaxis-showspikes", "name": "Layout > xaxis > showspikes", "description": "Determines whether or not spikes (aka droplines) are drawn for this axis. Note: This only takes affect when hovermode = closest"}, {"permalink": "reference/#layout-xaxis-scaleratio", "name": "Layout > xaxis > scaleratio", "description": "If this axis is linked to another by `scaleanchor`, this determines the pixel to unit scale ratio. For example, if this value is 10, then every unit on this axis spans 10 times the number of pixels as a unit on the linked axis. Use this for example to create an elevation profile where the vertical scale is exaggerated a fixed amount with respect to the horizontal."}, {"permalink": "reference/#layout-xaxis-spikedash", "name": "Layout > xaxis > spikedash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#layout-xaxis-tickformat", "name": "Layout > xaxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-xaxis-separatethousands", "name": "Layout > xaxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-xaxis-tickmode", "name": "Layout > xaxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-xaxis-title", "name": "Layout > xaxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-xaxis-constraintoward", "name": "Layout > xaxis > constraintoward", "description": "If this axis needs to be compressed (either due to its own `scaleanchor` and `scaleratio` or those of the other axis), determines which direction we push the originally specified plot area. Options are *left*, *center* (default), and *right* for x axes, and *top*, *middle* (default), and *bottom* for y axes."}, {"permalink": "reference/#layout-xaxis-ticks", "name": "Layout > xaxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-xaxis-overlaying", "name": "Layout > xaxis > overlaying", "description": "If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes."}, {"permalink": "reference/#layout-xaxis-spikethickness", "name": "Layout > xaxis > spikethickness", "description": "Sets the width (in px) of the zero line."}, {"permalink": "reference/#layout-xaxis-rangemode", "name": "Layout > xaxis > rangemode", "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data."}, {"permalink": "reference/#layout-xaxis-showtickprefix", "name": "Layout > xaxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-xaxis-zeroline", "name": "Layout > xaxis > zeroline", "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines."}, {"permalink": "reference/#layout-xaxis-domain", "name": "Layout > xaxis > domain", "description": "Sets the domain of this axis (in plot fraction)."}, {"permalink": "reference/#layout-xaxis-gridcolor", "name": "Layout > xaxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-xaxis-type", "name": "Layout > xaxis > type", "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question."}, {"permalink": "reference/#layout-xaxis-rangeselector", "name": "Layout > xaxis > rangeselector", "description": "Properties for rangeselector"}, {"permalink": "reference/#layout-xaxis-rangeselector-bordercolor", "name": "Layout > xaxis > rangeselector > bordercolor", "description": "Sets the color of the border enclosing the range selector."}, {"permalink": "reference/#layout-xaxis-rangeselector-yanchor", "name": "Layout > xaxis > rangeselector > yanchor", "description": "Sets the range selector's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the range selector."}, {"permalink": "reference/#layout-xaxis-rangeselector-xanchor", "name": "Layout > xaxis > rangeselector > xanchor", "description": "Sets the range selector's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the range selector."}, {"permalink": "reference/#layout-xaxis-rangeselector-bgcolor", "name": "Layout > xaxis > rangeselector > bgcolor", "description": "Sets the background color of the range selector buttons."}, {"permalink": "reference/#layout-xaxis-rangeselector-buttons", "name": "Layout > xaxis > rangeselector > buttons", "description": "Properties for buttons"}, {"permalink": "reference/#layout-xaxis-rangeselector-buttons-items", "name": "Layout > xaxis > rangeselector > buttons > items", "description": "Properties for items"}, {"permalink": "reference/#layout-xaxis-rangeselector-visible", "name": "Layout > xaxis > rangeselector > visible", "description": "Determines whether or not this range selector is visible. Note that range selectors are only available for x axes of `type` set to or auto-typed to *date*."}, {"permalink": "reference/#layout-xaxis-rangeselector-activecolor", "name": "Layout > xaxis > rangeselector > activecolor", "description": "Sets the background color of the active range selector button."}, {"permalink": "reference/#layout-xaxis-rangeselector-borderwidth", "name": "Layout > xaxis > rangeselector > borderwidth", "description": "Sets the width (in px) of the border enclosing the range selector."}, {"permalink": "reference/#layout-xaxis-rangeselector-y", "name": "Layout > xaxis > rangeselector > y", "description": "Sets the y position (in normalized coordinates) of the range selector."}, {"permalink": "reference/#layout-xaxis-rangeselector-x", "name": "Layout > xaxis > rangeselector > x", "description": "Sets the x position (in normalized coordinates) of the range selector."}, {"permalink": "reference/#layout-xaxis-rangeselector-font", "name": "Layout > xaxis > rangeselector > font", "description": "Sets the font of the range selector button text."}, {"permalink": "reference/#layout-xaxis-rangeselector-font-family", "name": "Layout > xaxis > rangeselector > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-xaxis-rangeselector-font-color", "name": "Layout > xaxis > rangeselector > font > color", "description": "Properties for color"}, {"permalink": "reference/#layout-xaxis-rangeselector-font-size", "name": "Layout > xaxis > rangeselector > font > size", "description": "Properties for size"}, {"permalink": "reference/#layout-xaxis-tickprefix", "name": "Layout > xaxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-xaxis-layer", "name": "Layout > xaxis > layer", "description": "Sets the layer on which this axis is displayed. If *above traces*, this axis is displayed above all the subplot's traces If *below traces*, this axis is displayed below all the subplot's traces, but above the grid lines. Useful when used together with scatter-like traces with `cliponaxis` set to *false* to show markers and/or text nodes above this axis."}, {"permalink": "reference/#layout-xaxis-zerolinewidth", "name": "Layout > xaxis > zerolinewidth", "description": "Sets the width (in px) of the zero line."}, {"permalink": "reference/#layout-xaxis-ticklen", "name": "Layout > xaxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-xaxis-categoryorder", "name": "Layout > xaxis > categoryorder", "description": "Specifies the ordering logic for the case of categorical variables. By default, plotly uses *trace*, which specifies the order that is present in the data supplied. Set `categoryorder` to *category ascending* or *category descending* if order should be determined by the alphanumerical order of the category names. Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to the *trace* mode. The unspecified categories will follow the categories in `categoryarray`."}, {"permalink": "reference/#layout-xaxis-hoverformat", "name": "Layout > xaxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-xaxis-position", "name": "Layout > xaxis > position", "description": "Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*."}, {"permalink": "reference/#layout-xaxis-ticksuffix", "name": "Layout > xaxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-xaxis-fixedrange", "name": "Layout > xaxis > fixedrange", "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled."}, {"permalink": "reference/#layout-xaxis-showline", "name": "Layout > xaxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-xaxis-ticktext", "name": "Layout > xaxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-xaxis-showgrid", "name": "Layout > xaxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-xaxis-tickvals", "name": "Layout > xaxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-xaxis-tickfont", "name": "Layout > xaxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-xaxis-tickfont-family", "name": "Layout > xaxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-xaxis-tickfont-color", "name": "Layout > xaxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-xaxis-tickfont-size", "name": "Layout > xaxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-xaxis-tickwidth", "name": "Layout > xaxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-xaxis-tick0", "name": "Layout > xaxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-xaxis-tickangle", "name": "Layout > xaxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-xaxis-gridwidth", "name": "Layout > xaxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-xaxis-dtick", "name": "Layout > xaxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-xaxis-side", "name": "Layout > xaxis > side", "description": "Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area."}, {"permalink": "reference/#layout-xaxis-zerolinecolor", "name": "Layout > xaxis > zerolinecolor", "description": "Sets the line color of the zero line."}, {"permalink": "reference/#layout-xaxis-range", "name": "Layout > xaxis > range", "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-xaxis-calendar", "name": "Layout > xaxis > calendar", "description": "Sets the calendar system to use for `range` and `tick0` if this is a date axis. This does not set the calendar for interpreting data on this axis, that's specified in the trace or via the global `layout.calendar`"}, {"permalink": "reference/#layout-xaxis-spikecolor", "name": "Layout > xaxis > spikecolor", "description": "Sets the spike color. If undefined, will use the series color"}, {"permalink": "reference/#layout-xaxis-tickcolor", "name": "Layout > xaxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-xaxis-constrain", "name": "Layout > xaxis > constrain", "description": "If this axis needs to be compressed (either due to its own `scaleanchor` and `scaleratio` or those of the other axis), determines how that happens: by increasing the *range* (default), or by decreasing the *domain*."}, {"permalink": "reference/#layout-xaxis-rangeslider", "name": "Layout > xaxis > rangeslider", "description": "Properties for rangeslider"}, {"permalink": "reference/#layout-xaxis-rangeslider-bordercolor", "name": "Layout > xaxis > rangeslider > bordercolor", "description": "Sets the border color of the range slider."}, {"permalink": "reference/#layout-xaxis-rangeslider-visible", "name": "Layout > xaxis > rangeslider > visible", "description": "Determines whether or not the range slider will be visible. If visible, perpendicular axes will be set to `fixedrange`"}, {"permalink": "reference/#layout-xaxis-rangeslider-thickness", "name": "Layout > xaxis > rangeslider > thickness", "description": "The height of the range slider as a fraction of the total plot area height."}, {"permalink": "reference/#layout-xaxis-rangeslider-bgcolor", "name": "Layout > xaxis > rangeslider > bgcolor", "description": "Sets the background color of the range slider."}, {"permalink": "reference/#layout-xaxis-rangeslider-range", "name": "Layout > xaxis > rangeslider > range", "description": "Sets the range of the range slider. If not set, defaults to the full xaxis range. If the axis `type` is *log*, then you must take the log of your desired range. If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-xaxis-rangeslider-borderwidth", "name": "Layout > xaxis > rangeslider > borderwidth", "description": "Sets the border color of the range slider."}, {"permalink": "reference/#layout-xaxis-rangeslider-autorange", "name": "Layout > xaxis > rangeslider > autorange", "description": "Determines whether or not the range slider range is computed in relation to the input data. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#layout-xaxis-anchor", "name": "Layout > xaxis > anchor", "description": "If set to an opposite-letter axis id (e.g. `x2`, `y`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis' position is determined by `position`."}, {"permalink": "reference/#layout-xaxis-exponentformat", "name": "Layout > xaxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-mapbox", "name": "Layout > mapbox", "description": "Properties for mapbox"}, {"permalink": "reference/#layout-mapbox-layers", "name": "Layout > mapbox > layers", "description": "Properties for layers"}, {"permalink": "reference/#layout-mapbox-layers-items", "name": "Layout > mapbox > layers > items", "description": "Properties for items"}, {"permalink": "reference/#layout-mapbox-layers-items-layer", "name": "Layout > mapbox > layers > items > layer", "description": "Properties for layer"}, {"permalink": "reference/#layout-mapbox-bearing", "name": "Layout > mapbox > bearing", "description": "Sets the bearing angle of the map (in degrees counter-clockwise from North)."}, {"permalink": "reference/#layout-mapbox-style", "name": "Layout > mapbox > style", "description": "Sets the Mapbox map style. Either input one of the default Mapbox style names or the URL to a custom style or a valid Mapbox style JSON."}, {"permalink": "reference/#layout-mapbox-center", "name": "Layout > mapbox > center", "description": "Properties for center"}, {"permalink": "reference/#layout-mapbox-center-lat", "name": "Layout > mapbox > center > lat", "description": "Sets the latitude of the center of the map (in degrees North)."}, {"permalink": "reference/#layout-mapbox-center-lon", "name": "Layout > mapbox > center > lon", "description": "Sets the longitude of the center of the map (in degrees East)."}, {"permalink": "reference/#layout-mapbox-accesstoken", "name": "Layout > mapbox > accesstoken", "description": "Sets the mapbox access token to be used for this mapbox map. Alternatively, the mapbox access token can be set in the configuration options under `mapboxAccessToken`."}, {"permalink": "reference/#layout-mapbox-zoom", "name": "Layout > mapbox > zoom", "description": "Sets the zoom level of the map."}, {"permalink": "reference/#layout-mapbox-domain", "name": "Layout > mapbox > domain", "description": "Properties for domain"}, {"permalink": "reference/#layout-mapbox-domain-y", "name": "Layout > mapbox > domain > y", "description": "Sets the vertical domain of this subplot (in plot fraction)."}, {"permalink": "reference/#layout-mapbox-domain-x", "name": "Layout > mapbox > domain > x", "description": "Sets the horizontal domain of this subplot (in plot fraction)."}, {"permalink": "reference/#layout-mapbox-pitch", "name": "Layout > mapbox > pitch", "description": "Sets the pitch angle of the map (in degrees, where *0* means perpendicular to the surface of the map)."}, {"permalink": "reference/#layout-hidesources", "name": "Layout > hidesources", "description": "Determines whether or not a text link citing the data source is placed at the bottom-right cored of the figure. Has only an effect only on graphs that have been generated via forked graphs from the plotly service (at https://plot.ly or on-premise)."}, {"permalink": "reference/#layout-direction", "name": "Layout > direction", "description": "For polar plots only. Sets the direction corresponding to positive angles."}, {"permalink": "reference/#layout-showlegend", "name": "Layout > showlegend", "description": "Determines whether or not a legend is drawn."}, {"permalink": "reference/#layout-separators", "name": "Layout > separators", "description": "Sets the decimal and thousand separators. For example, *. * puts a '.' before decimals and a space between thousands."}, {"permalink": "reference/#layout-hoverlabel", "name": "Layout > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#layout-hoverlabel-bordercolor", "name": "Layout > hoverlabel > bordercolor", "description": "Sets the border color of all hover labels on graph."}, {"permalink": "reference/#layout-hoverlabel-bgcolor", "name": "Layout > hoverlabel > bgcolor", "description": "Sets the background color of all hover labels on graph"}, {"permalink": "reference/#layout-hoverlabel-namelength", "name": "Layout > hoverlabel > namelength", "description": "Sets the default length (in number of characters) of the trace name in the hover labels for all traces. -1 shows the whole name regardless of length. 0-3 shows the first 0-3 characters, and an integer >3 will show the whole name if it is less than that many characters, but if it is longer, will truncate to `namelength - 3` characters and add an ellipsis."}, {"permalink": "reference/#layout-hoverlabel-font", "name": "Layout > hoverlabel > font", "description": "Sets the default hover label font used by all traces on the graph."}, {"permalink": "reference/#layout-hoverlabel-font-family", "name": "Layout > hoverlabel > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-hoverlabel-font-color", "name": "Layout > hoverlabel > font > color", "description": "Properties for color"}, {"permalink": "reference/#layout-hoverlabel-font-size", "name": "Layout > hoverlabel > font > size", "description": "Properties for size"}, {"permalink": "reference/#layout-angularaxis", "name": "Layout > angularaxis", "description": "Properties for angularaxis"}, {"permalink": "reference/#layout-angularaxis-domain", "name": "Layout > angularaxis > domain", "description": "Polar chart subplots are not supported yet. This key has currently no effect."}, {"permalink": "reference/#layout-angularaxis-showticklabels", "name": "Layout > angularaxis > showticklabels", "description": "Determines whether or not the angular axis ticks will feature tick labels."}, {"permalink": "reference/#layout-angularaxis-ticklen", "name": "Layout > angularaxis > ticklen", "description": "Sets the length of the tick lines on this angular axis."}, {"permalink": "reference/#layout-angularaxis-visible", "name": "Layout > angularaxis > visible", "description": "Determines whether or not this axis will be visible."}, {"permalink": "reference/#layout-angularaxis-range", "name": "Layout > angularaxis > range", "description": "Defines the start and end point of this angular axis."}, {"permalink": "reference/#layout-angularaxis-ticksuffix", "name": "Layout > angularaxis > ticksuffix", "description": "Sets the length of the tick lines on this angular axis."}, {"permalink": "reference/#layout-angularaxis-tickcolor", "name": "Layout > angularaxis > tickcolor", "description": "Sets the color of the tick lines on this angular axis."}, {"permalink": "reference/#layout-angularaxis-endpadding", "name": "Layout > angularaxis > endpadding", "description": "Properties for endpadding"}, {"permalink": "reference/#layout-angularaxis-showline", "name": "Layout > angularaxis > showline", "description": "Determines whether or not the line bounding this angular axis will be shown on the figure."}, {"permalink": "reference/#layout-angularaxis-tickorientation", "name": "Layout > angularaxis > tickorientation", "description": "Sets the orientation (from the paper perspective) of the angular axis tick labels."}, {"permalink": "reference/#layout-geo", "name": "Layout > geo", "description": "Properties for geo"}, {"permalink": "reference/#layout-geo-domain", "name": "Layout > geo > domain", "description": "Properties for domain"}, {"permalink": "reference/#layout-geo-domain-y", "name": "Layout > geo > domain > y", "description": "Sets the maximum vertical domain of this map (in plot fraction). Note that geo subplots are constrained by domain. In general, when `projection.scale` is set to 1. a map will fit either its x or y domain, but not both. "}, {"permalink": "reference/#layout-geo-domain-x", "name": "Layout > geo > domain > x", "description": "Sets the maximum horizontal domain of this map (in plot fraction). Note that geo subplots are constrained by domain. In general, when `projection.scale` is set to 1. a map will fit either its x or y domain, but not both. "}, {"permalink": "reference/#layout-geo-projection", "name": "Layout > geo > projection", "description": "Properties for projection"}, {"permalink": "reference/#layout-geo-projection-scale", "name": "Layout > geo > projection > scale", "description": "Zooms in or out on the map view. A scale of *1* corresponds to the largest zoom level that fits the map's lon and lat ranges. "}, {"permalink": "reference/#layout-geo-projection-parallels", "name": "Layout > geo > projection > parallels", "description": "For conic projection types only. Sets the parallels (tangent, secant) where the cone intersects the sphere."}, {"permalink": "reference/#layout-geo-projection-rotation", "name": "Layout > geo > projection > rotation", "description": "Properties for rotation"}, {"permalink": "reference/#layout-geo-projection-rotation-lat", "name": "Layout > geo > projection > rotation > lat", "description": "Rotates the map along meridians (in degrees North)."}, {"permalink": "reference/#layout-geo-projection-rotation-lon", "name": "Layout > geo > projection > rotation > lon", "description": "Rotates the map along parallels (in degrees East). Defaults to the center of the `lonaxis.range` values."}, {"permalink": "reference/#layout-geo-projection-rotation-roll", "name": "Layout > geo > projection > rotation > roll", "description": "Roll the map (in degrees) For example, a roll of *180* makes the map appear upside down."}, {"permalink": "reference/#layout-geo-projection-type", "name": "Layout > geo > projection > type", "description": "Sets the projection type."}, {"permalink": "reference/#layout-geo-showframe", "name": "Layout > geo > showframe", "description": "Sets whether or not a frame is drawn around the map."}, {"permalink": "reference/#layout-geo-showlakes", "name": "Layout > geo > showlakes", "description": "Sets whether or not lakes are drawn."}, {"permalink": "reference/#layout-geo-coastlinecolor", "name": "Layout > geo > coastlinecolor", "description": "Sets the coastline color."}, {"permalink": "reference/#layout-geo-countrywidth", "name": "Layout > geo > countrywidth", "description": "Sets line width (in px) of the country boundaries."}, {"permalink": "reference/#layout-geo-countrycolor", "name": "Layout > geo > countrycolor", "description": "Sets line color of the country boundaries."}, {"permalink": "reference/#layout-geo-showsubunits", "name": "Layout > geo > showsubunits", "description": "Sets whether or not boundaries of subunits within countries (e.g. states, provinces) are drawn."}, {"permalink": "reference/#layout-geo-bgcolor", "name": "Layout > geo > bgcolor", "description": "Set the background color of the map"}, {"permalink": "reference/#layout-geo-showrivers", "name": "Layout > geo > showrivers", "description": "Sets whether or not rivers are drawn."}, {"permalink": "reference/#layout-geo-subunitcolor", "name": "Layout > geo > subunitcolor", "description": "Sets the color of the subunits boundaries."}, {"permalink": "reference/#layout-geo-showcountries", "name": "Layout > geo > showcountries", "description": "Sets whether or not country boundaries are drawn."}, {"permalink": "reference/#layout-geo-riverwidth", "name": "Layout > geo > riverwidth", "description": "Sets the stroke width (in px) of the rivers."}, {"permalink": "reference/#layout-geo-scope", "name": "Layout > geo > scope", "description": "Set the scope of the map."}, {"permalink": "reference/#layout-geo-rivercolor", "name": "Layout > geo > rivercolor", "description": "Sets color of the rivers."}, {"permalink": "reference/#layout-geo-lataxis", "name": "Layout > geo > lataxis", "description": "Properties for lataxis"}, {"permalink": "reference/#layout-geo-lataxis-tick0", "name": "Layout > geo > lataxis > tick0", "description": "Sets the graticule's starting tick longitude/latitude."}, {"permalink": "reference/#layout-geo-lataxis-gridwidth", "name": "Layout > geo > lataxis > gridwidth", "description": "Sets the graticule's stroke width (in px)."}, {"permalink": "reference/#layout-geo-lataxis-dtick", "name": "Layout > geo > lataxis > dtick", "description": "Sets the graticule's longitude/latitude tick step."}, {"permalink": "reference/#layout-geo-lataxis-showgrid", "name": "Layout > geo > lataxis > showgrid", "description": "Sets whether or not graticule are shown on the map."}, {"permalink": "reference/#layout-geo-lataxis-range", "name": "Layout > geo > lataxis > range", "description": "Sets the range of this axis (in degrees), sets the map's clipped coordinates."}, {"permalink": "reference/#layout-geo-lataxis-gridcolor", "name": "Layout > geo > lataxis > gridcolor", "description": "Sets the graticule's stroke color."}, {"permalink": "reference/#layout-geo-subunitwidth", "name": "Layout > geo > subunitwidth", "description": "Sets the stroke width (in px) of the subunits boundaries."}, {"permalink": "reference/#layout-geo-showocean", "name": "Layout > geo > showocean", "description": "Sets whether or not oceans are filled in color."}, {"permalink": "reference/#layout-geo-oceancolor", "name": "Layout > geo > oceancolor", "description": "Sets the ocean color"}, {"permalink": "reference/#layout-geo-lakecolor", "name": "Layout > geo > lakecolor", "description": "Sets the color of the lakes."}, {"permalink": "reference/#layout-geo-showland", "name": "Layout > geo > showland", "description": "Sets whether or not land masses are filled in color."}, {"permalink": "reference/#layout-geo-lonaxis", "name": "Layout > geo > lonaxis", "description": "Properties for lonaxis"}, {"permalink": "reference/#layout-geo-lonaxis-tick0", "name": "Layout > geo > lonaxis > tick0", "description": "Sets the graticule's starting tick longitude/latitude."}, {"permalink": "reference/#layout-geo-lonaxis-gridwidth", "name": "Layout > geo > lonaxis > gridwidth", "description": "Sets the graticule's stroke width (in px)."}, {"permalink": "reference/#layout-geo-lonaxis-dtick", "name": "Layout > geo > lonaxis > dtick", "description": "Sets the graticule's longitude/latitude tick step."}, {"permalink": "reference/#layout-geo-lonaxis-showgrid", "name": "Layout > geo > lonaxis > showgrid", "description": "Sets whether or not graticule are shown on the map."}, {"permalink": "reference/#layout-geo-lonaxis-range", "name": "Layout > geo > lonaxis > range", "description": "Sets the range of this axis (in degrees), sets the map's clipped coordinates."}, {"permalink": "reference/#layout-geo-lonaxis-gridcolor", "name": "Layout > geo > lonaxis > gridcolor", "description": "Sets the graticule's stroke color."}, {"permalink": "reference/#layout-geo-center", "name": "Layout > geo > center", "description": "Properties for center"}, {"permalink": "reference/#layout-geo-center-lat", "name": "Layout > geo > center > lat", "description": "Sets the latitude of the map's center. For all projection types, the map's latitude center lies at the middle of the latitude range by default."}, {"permalink": "reference/#layout-geo-center-lon", "name": "Layout > geo > center > lon", "description": "Sets the longitude of the map's center. By default, the map's longitude center lies at the middle of the longitude range for scoped projection and above `projection.rotation.lon` otherwise."}, {"permalink": "reference/#layout-geo-framecolor", "name": "Layout > geo > framecolor", "description": "Sets the color the frame."}, {"permalink": "reference/#layout-geo-coastlinewidth", "name": "Layout > geo > coastlinewidth", "description": "Sets the coastline stroke width (in px)."}, {"permalink": "reference/#layout-geo-landcolor", "name": "Layout > geo > landcolor", "description": "Sets the land mass color."}, {"permalink": "reference/#layout-geo-showcoastlines", "name": "Layout > geo > showcoastlines", "description": "Sets whether or not the coastlines are drawn."}, {"permalink": "reference/#layout-geo-framewidth", "name": "Layout > geo > framewidth", "description": "Sets the stroke width (in px) of the frame."}, {"permalink": "reference/#layout-geo-resolution", "name": "Layout > geo > resolution", "description": "Sets the resolution of the base layers. The values have units of km/mm e.g. 110 corresponds to a scale ratio of 1:110,000,000."}, {"permalink": "reference/#layout-legend", "name": "Layout > legend", "description": "Properties for legend"}, {"permalink": "reference/#layout-legend-bordercolor", "name": "Layout > legend > bordercolor", "description": "Sets the color of the border enclosing the legend."}, {"permalink": "reference/#layout-legend-yanchor", "name": "Layout > legend > yanchor", "description": "Sets the legend's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the legend."}, {"permalink": "reference/#layout-legend-traceorder", "name": "Layout > legend > traceorder", "description": "Determines the order at which the legend items are displayed. If *normal*, the items are displayed top-to-bottom in the same order as the input data. If *reversed*, the items are displayed in the opposite order as *normal*. If *grouped*, the items are displayed in groups (when a trace `legendgroup` is provided). if *grouped+reversed*, the items are displayed in the opposite order as *grouped*."}, {"permalink": "reference/#layout-legend-xanchor", "name": "Layout > legend > xanchor", "description": "Sets the legend's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the legend."}, {"permalink": "reference/#layout-legend-orientation", "name": "Layout > legend > orientation", "description": "Sets the orientation of the legend."}, {"permalink": "reference/#layout-legend-tracegroupgap", "name": "Layout > legend > tracegroupgap", "description": "Sets the amount of vertical space (in px) between legend groups."}, {"permalink": "reference/#layout-legend-bgcolor", "name": "Layout > legend > bgcolor", "description": "Sets the legend background color."}, {"permalink": "reference/#layout-legend-borderwidth", "name": "Layout > legend > borderwidth", "description": "Sets the width (in px) of the border enclosing the legend."}, {"permalink": "reference/#layout-legend-y", "name": "Layout > legend > y", "description": "Sets the y position (in normalized coordinates) of the legend."}, {"permalink": "reference/#layout-legend-x", "name": "Layout > legend > x", "description": "Sets the x position (in normalized coordinates) of the legend."}, {"permalink": "reference/#layout-legend-font", "name": "Layout > legend > font", "description": "Sets the font used to text the legend items."}, {"permalink": "reference/#layout-legend-font-family", "name": "Layout > legend > font > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-legend-font-color", "name": "Layout > legend > font > color", "description": "Properties for color"}, {"permalink": "reference/#layout-legend-font-size", "name": "Layout > legend > font > size", "description": "Properties for size"}, {"permalink": "reference/#layout-yaxis", "name": "Layout > yaxis", "description": "Properties for yaxis"}, {"permalink": "reference/#layout-yaxis-showexponent", "name": "Layout > yaxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-yaxis-showticklabels", "name": "Layout > yaxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-yaxis-linecolor", "name": "Layout > yaxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-yaxis-color", "name": "Layout > yaxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-yaxis-categoryarray", "name": "Layout > yaxis > categoryarray", "description": "Sets the order in which categories on this axis appear. Only has an effect if `categoryorder` is set to *array*. Used with `categoryorder`."}, {"permalink": "reference/#layout-yaxis-showticksuffix", "name": "Layout > yaxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-yaxis-visible", "name": "Layout > yaxis > visible", "description": "A single toggle to hide the axis while preserving interaction like dragging. Default is true when a cheater plot is present on the axis, otherwise false"}, {"permalink": "reference/#layout-yaxis-titlefont", "name": "Layout > yaxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-yaxis-titlefont-family", "name": "Layout > yaxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-yaxis-titlefont-color", "name": "Layout > yaxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-yaxis-titlefont-size", "name": "Layout > yaxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-yaxis-spikemode", "name": "Layout > yaxis > spikemode", "description": "Determines the drawing mode for the spike line If *toaxis*, the line is drawn from the data point to the axis the  series is plotted on. If *across*, the line is drawn across the entire plot area, and supercedes *toaxis*. If *marker*, then a marker dot is drawn on the axis the series is plotted on"}, {"permalink": "reference/#layout-yaxis-mirror", "name": "Layout > yaxis > mirror", "description": "Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots."}, {"permalink": "reference/#layout-yaxis-scaleanchor", "name": "Layout > yaxis > scaleanchor", "description": "If set to another axis id (e.g. `x2`, `y`), the range of this axis changes together with the range of the corresponding axis such that the scale of pixels per unit is in a constant ratio. Both axes are still zoomable, but when you zoom one, the other will zoom the same amount, keeping a fixed midpoint. `constrain` and `constraintoward` determine how we enforce the constraint. You can chain these, ie `yaxis: {scaleanchor: *x*}, xaxis2: {scaleanchor: *y*}` but you can only link axes of the same `type`. The linked axis can have the opposite letter (to constrain the aspect ratio) or the same letter (to match scales across subplots). Loops (`yaxis: {scaleanchor: *x*}, xaxis: {scaleanchor: *y*}` or longer) are redundant and the last constraint encountered will be ignored to avoid possible inconsistent constraints via `scaleratio`."}, {"permalink": "reference/#layout-yaxis-linewidth", "name": "Layout > yaxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-yaxis-autorange", "name": "Layout > yaxis > autorange", "description": "Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*."}, {"permalink": "reference/#layout-yaxis-nticks", "name": "Layout > yaxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-yaxis-showspikes", "name": "Layout > yaxis > showspikes", "description": "Determines whether or not spikes (aka droplines) are drawn for this axis. Note: This only takes affect when hovermode = closest"}, {"permalink": "reference/#layout-yaxis-scaleratio", "name": "Layout > yaxis > scaleratio", "description": "If this axis is linked to another by `scaleanchor`, this determines the pixel to unit scale ratio. For example, if this value is 10, then every unit on this axis spans 10 times the number of pixels as a unit on the linked axis. Use this for example to create an elevation profile where the vertical scale is exaggerated a fixed amount with respect to the horizontal."}, {"permalink": "reference/#layout-yaxis-spikedash", "name": "Layout > yaxis > spikedash", "description": "Sets the dash style of lines. Set to a dash type string (*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*) or a dash length list in px (eg *5px,10px,2px,2px*)."}, {"permalink": "reference/#layout-yaxis-tickformat", "name": "Layout > yaxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-yaxis-separatethousands", "name": "Layout > yaxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-yaxis-tickmode", "name": "Layout > yaxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-yaxis-title", "name": "Layout > yaxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-yaxis-constraintoward", "name": "Layout > yaxis > constraintoward", "description": "If this axis needs to be compressed (either due to its own `scaleanchor` and `scaleratio` or those of the other axis), determines which direction we push the originally specified plot area. Options are *left*, *center* (default), and *right* for x axes, and *top*, *middle* (default), and *bottom* for y axes."}, {"permalink": "reference/#layout-yaxis-ticks", "name": "Layout > yaxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-yaxis-overlaying", "name": "Layout > yaxis > overlaying", "description": "If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes."}, {"permalink": "reference/#layout-yaxis-spikethickness", "name": "Layout > yaxis > spikethickness", "description": "Sets the width (in px) of the zero line."}, {"permalink": "reference/#layout-yaxis-rangemode", "name": "Layout > yaxis > rangemode", "description": "If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data."}, {"permalink": "reference/#layout-yaxis-showtickprefix", "name": "Layout > yaxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-yaxis-zeroline", "name": "Layout > yaxis > zeroline", "description": "Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines."}, {"permalink": "reference/#layout-yaxis-domain", "name": "Layout > yaxis > domain", "description": "Sets the domain of this axis (in plot fraction)."}, {"permalink": "reference/#layout-yaxis-gridcolor", "name": "Layout > yaxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-yaxis-type", "name": "Layout > yaxis > type", "description": "Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question."}, {"permalink": "reference/#layout-yaxis-tickprefix", "name": "Layout > yaxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-yaxis-layer", "name": "Layout > yaxis > layer", "description": "Sets the layer on which this axis is displayed. If *above traces*, this axis is displayed above all the subplot's traces If *below traces*, this axis is displayed below all the subplot's traces, but above the grid lines. Useful when used together with scatter-like traces with `cliponaxis` set to *false* to show markers and/or text nodes above this axis."}, {"permalink": "reference/#layout-yaxis-zerolinewidth", "name": "Layout > yaxis > zerolinewidth", "description": "Sets the width (in px) of the zero line."}, {"permalink": "reference/#layout-yaxis-ticklen", "name": "Layout > yaxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-yaxis-categoryorder", "name": "Layout > yaxis > categoryorder", "description": "Specifies the ordering logic for the case of categorical variables. By default, plotly uses *trace*, which specifies the order that is present in the data supplied. Set `categoryorder` to *category ascending* or *category descending* if order should be determined by the alphanumerical order of the category names. Set `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category is not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to the *trace* mode. The unspecified categories will follow the categories in `categoryarray`."}, {"permalink": "reference/#layout-yaxis-hoverformat", "name": "Layout > yaxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-yaxis-position", "name": "Layout > yaxis > position", "description": "Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*."}, {"permalink": "reference/#layout-yaxis-ticksuffix", "name": "Layout > yaxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-yaxis-fixedrange", "name": "Layout > yaxis > fixedrange", "description": "Determines whether or not this axis is zoom-able. If true, then zoom is disabled."}, {"permalink": "reference/#layout-yaxis-showline", "name": "Layout > yaxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-yaxis-ticktext", "name": "Layout > yaxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-yaxis-showgrid", "name": "Layout > yaxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-yaxis-tickvals", "name": "Layout > yaxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-yaxis-tickfont", "name": "Layout > yaxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-yaxis-tickfont-family", "name": "Layout > yaxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-yaxis-tickfont-color", "name": "Layout > yaxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-yaxis-tickfont-size", "name": "Layout > yaxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-yaxis-tickwidth", "name": "Layout > yaxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-yaxis-tick0", "name": "Layout > yaxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-yaxis-tickangle", "name": "Layout > yaxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-yaxis-gridwidth", "name": "Layout > yaxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-yaxis-dtick", "name": "Layout > yaxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-yaxis-side", "name": "Layout > yaxis > side", "description": "Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area."}, {"permalink": "reference/#layout-yaxis-zerolinecolor", "name": "Layout > yaxis > zerolinecolor", "description": "Sets the line color of the zero line."}, {"permalink": "reference/#layout-yaxis-range", "name": "Layout > yaxis > range", "description": "Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-yaxis-calendar", "name": "Layout > yaxis > calendar", "description": "Sets the calendar system to use for `range` and `tick0` if this is a date axis. This does not set the calendar for interpreting data on this axis, that's specified in the trace or via the global `layout.calendar`"}, {"permalink": "reference/#layout-yaxis-spikecolor", "name": "Layout > yaxis > spikecolor", "description": "Sets the spike color. If undefined, will use the series color"}, {"permalink": "reference/#layout-yaxis-tickcolor", "name": "Layout > yaxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-yaxis-constrain", "name": "Layout > yaxis > constrain", "description": "If this axis needs to be compressed (either due to its own `scaleanchor` and `scaleratio` or those of the other axis), determines how that happens: by increasing the *range* (default), or by decreasing the *domain*."}, {"permalink": "reference/#layout-yaxis-anchor", "name": "Layout > yaxis > anchor", "description": "If set to an opposite-letter axis id (e.g. `x2`, `y`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis' position is determined by `position`."}, {"permalink": "reference/#layout-yaxis-exponentformat", "name": "Layout > yaxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-updatemenus", "name": "Layout > updatemenus", "description": "Properties for updatemenus"}, {"permalink": "reference/#layout-updatemenus-items", "name": "Layout > updatemenus > items", "description": "Properties for items"}, {"permalink": "reference/#layout-updatemenus-items-updatemenu", "name": "Layout > updatemenus > items > updatemenu", "description": "Properties for updatemenu"}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-bordercolor", "name": "Layout > updatemenus > items > updatemenu > bordercolor", "description": "Sets the color of the border enclosing the update menu."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-yanchor", "name": "Layout > updatemenus > items > updatemenu > yanchor", "description": "Sets the update menu's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the range selector."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-direction", "name": "Layout > updatemenus > items > updatemenu > direction", "description": "Determines the direction in which the buttons are laid out, whether in a dropdown menu or a row/column of buttons. For `left` and `up`, the buttons will still appear in left-to-right or top-to-bottom order respectively."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-showactive", "name": "Layout > updatemenus > items > updatemenu > showactive", "description": "Highlights active dropdown item or active button if true."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-xanchor", "name": "Layout > updatemenus > items > updatemenu > xanchor", "description": "Sets the update menu's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the range selector."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-y", "name": "Layout > updatemenus > items > updatemenu > y", "description": "Sets the y position (in normalized coordinates) of the update menu."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-bgcolor", "name": "Layout > updatemenus > items > updatemenu > bgcolor", "description": "Sets the background color of the update menu buttons."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-buttons", "name": "Layout > updatemenus > items > updatemenu > buttons", "description": "Properties for buttons"}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-visible", "name": "Layout > updatemenus > items > updatemenu > visible", "description": "Determines whether or not the update menu is visible."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-pad", "name": "Layout > updatemenus > items > updatemenu > pad", "description": "Sets the padding around the buttons or dropdown menu."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-borderwidth", "name": "Layout > updatemenus > items > updatemenu > borderwidth", "description": "Sets the width (in px) of the border enclosing the update menu."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-active", "name": "Layout > updatemenus > items > updatemenu > active", "description": "Determines which button (by index starting from 0) is considered active."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-x", "name": "Layout > updatemenus > items > updatemenu > x", "description": "Sets the x position (in normalized coordinates) of the update menu."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-font", "name": "Layout > updatemenus > items > updatemenu > font", "description": "Sets the font of the update menu button text."}, {"permalink": "reference/#layout-updatemenus-items-updatemenu-type", "name": "Layout > updatemenus > items > updatemenu > type", "description": "Determines whether the buttons are accessible via a dropdown menu or whether the buttons are stacked horizontally or vertically"}, {"permalink": "reference/#layout-annotations", "name": "Layout > annotations", "description": "Properties for annotations"}, {"permalink": "reference/#layout-annotations-items", "name": "Layout > annotations > items", "description": "Properties for items"}, {"permalink": "reference/#layout-annotations-items-annotation", "name": "Layout > annotations > items > annotation", "description": "Properties for annotation"}, {"permalink": "reference/#layout-annotations-items-annotation-bordercolor", "name": "Layout > annotations > items > annotation > bordercolor", "description": "Sets the color of the border enclosing the annotation `text`."}, {"permalink": "reference/#layout-annotations-items-annotation-yanchor", "name": "Layout > annotations > items > annotation > yanchor", "description": "Sets the text box's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the annotation. For example, if `y` is set to 1, `yref` to *paper* and `yanchor` to *top* then the top-most portion of the annotation lines up with the top-most edge of the plotting area. If *auto*, the anchor is equivalent to *middle* for data-referenced annotations or if there is an arrow, whereas for paper-referenced with no arrow, the anchor picked corresponds to the closest side."}, {"permalink": "reference/#layout-annotations-items-annotation-text", "name": "Layout > annotations > items > annotation > text", "description": "Sets the text associated with this annotation. Plotly uses a subset of HTML tags to do things like newline (<br>), bold (<b></b>), italics (<i></i>), hyperlinks (<a href='...'></a>). Tags <em>, <sup>, <sub> <span> are also supported."}, {"permalink": "reference/#layout-annotations-items-annotation-height", "name": "Layout > annotations > items > annotation > height", "description": "Sets an explicit height for the text box. null (default) lets the text set the box height. Taller text will be clipped."}, {"permalink": "reference/#layout-annotations-items-annotation-arrowsize", "name": "Layout > annotations > items > annotation > arrowsize", "description": "Sets the size of the annotation arrow head, relative to `arrowwidth`. A value of 1 (default) gives a head about 3x as wide as the line."}, {"permalink": "reference/#layout-annotations-items-annotation-xshift", "name": "Layout > annotations > items > annotation > xshift", "description": "Shifts the position of the whole annotation and arrow to the right (positive) or left (negative) by this many pixels."}, {"permalink": "reference/#layout-annotations-items-annotation-textangle", "name": "Layout > annotations > items > annotation > textangle", "description": "Sets the angle at which the `text` is drawn with respect to the horizontal."}, {"permalink": "reference/#layout-annotations-items-annotation-borderwidth", "name": "Layout > annotations > items > annotation > borderwidth", "description": "Sets the width (in px) of the border enclosing the annotation `text`."}, {"permalink": "reference/#layout-annotations-items-annotation-yclick", "name": "Layout > annotations > items > annotation > yclick", "description": "Toggle this annotation when clicking a data point whose `y` value is `yclick` rather than the annotation's `y` value."}, {"permalink": "reference/#layout-annotations-items-annotation-ay", "name": "Layout > annotations > items > annotation > ay", "description": "Sets the y component of the arrow tail about the arrow head. If `ayref` is `pixel`, a positive (negative)  component corresponds to an arrow pointing from bottom to top (top to bottom). If `ayref` is an axis, this is an absolute value on that axis, like `y`, NOT a relative value."}, {"permalink": "reference/#layout-annotations-items-annotation-ax", "name": "Layout > annotations > items > annotation > ax", "description": "Sets the x component of the arrow tail about the arrow head. If `axref` is `pixel`, a positive (negative)  component corresponds to an arrow pointing from right to left (left to right). If `axref` is an axis, this is an absolute value on that axis, like `x`, NOT a relative value."}, {"permalink": "reference/#layout-annotations-items-annotation-font", "name": "Layout > annotations > items > annotation > font", "description": "Sets the annotation text font."}, {"permalink": "reference/#layout-annotations-items-annotation-arrowcolor", "name": "Layout > annotations > items > annotation > arrowcolor", "description": "Sets the color of the annotation arrow."}, {"permalink": "reference/#layout-annotations-items-annotation-xref", "name": "Layout > annotations > items > annotation > xref", "description": "Sets the annotation's x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where 0 (1) corresponds to the left (right) side."}, {"permalink": "reference/#layout-annotations-items-annotation-arrowhead", "name": "Layout > annotations > items > annotation > arrowhead", "description": "Sets the annotation arrow head style."}, {"permalink": "reference/#layout-annotations-items-annotation-bgcolor", "name": "Layout > annotations > items > annotation > bgcolor", "description": "Sets the background color of the annotation."}, {"permalink": "reference/#layout-annotations-items-annotation-width", "name": "Layout > annotations > items > annotation > width", "description": "Sets an explicit width for the text box. null (default) lets the text set the box width. Wider text will be clipped. There is no automatic wrapping; use <br> to start a new line."}, {"permalink": "reference/#layout-annotations-items-annotation-valign", "name": "Layout > annotations > items > annotation > valign", "description": "Sets the vertical alignment of the `text` within the box. Has an effect only if an explicit height is set to override the text height."}, {"permalink": "reference/#layout-annotations-items-annotation-borderpad", "name": "Layout > annotations > items > annotation > borderpad", "description": "Sets the padding (in px) between the `text` and the enclosing border."}, {"permalink": "reference/#layout-annotations-items-annotation-showarrow", "name": "Layout > annotations > items > annotation > showarrow", "description": "Determines whether or not the annotation is drawn with an arrow. If *true*, `text` is placed near the arrow's tail. If *false*, `text` lines up with the `x` and `y` provided."}, {"permalink": "reference/#layout-annotations-items-annotation-opacity", "name": "Layout > annotations > items > annotation > opacity", "description": "Sets the opacity of the annotation (text + arrow)."}, {"permalink": "reference/#layout-annotations-items-annotation-xanchor", "name": "Layout > annotations > items > annotation > xanchor", "description": "Sets the text box's horizontal position anchor This anchor binds the `x` position to the *left*, *center* or *right* of the annotation. For example, if `x` is set to 1, `xref` to *paper* and `xanchor` to *right* then the right-most portion of the annotation lines up with the right-most edge of the plotting area. If *auto*, the anchor is equivalent to *center* for data-referenced annotations or if there is an arrow, whereas for paper-referenced with no arrow, the anchor picked corresponds to the closest side."}, {"permalink": "reference/#layout-annotations-items-annotation-yshift", "name": "Layout > annotations > items > annotation > yshift", "description": "Shifts the position of the whole annotation and arrow up (positive) or down (negative) by this many pixels."}, {"permalink": "reference/#layout-annotations-items-annotation-axref", "name": "Layout > annotations > items > annotation > axref", "description": "Indicates in what terms the tail of the annotation (ax,ay)  is specified. If `pixel`, `ax` is a relative offset in pixels  from `x`. If set to an x axis id (e.g. *x* or *x2*), `ax` is  specified in the same terms as that axis. This is useful  for trendline annotations which should continue to indicate  the correct trend when zoomed."}, {"permalink": "reference/#layout-annotations-items-annotation-hovertext", "name": "Layout > annotations > items > annotation > hovertext", "description": "Sets text to appear when hovering over this annotation. If omitted or blank, no hover label will appear."}, {"permalink": "reference/#layout-annotations-items-annotation-ayref", "name": "Layout > annotations > items > annotation > ayref", "description": "Indicates in what terms the tail of the annotation (ax,ay)  is specified. If `pixel`, `ay` is a relative offset in pixels  from `y`. If set to a y axis id (e.g. *y* or *y2*), `ay` is  specified in the same terms as that axis. This is useful  for trendline annotations which should continue to indicate  the correct trend when zoomed."}, {"permalink": "reference/#layout-annotations-items-annotation-hoverlabel", "name": "Layout > annotations > items > annotation > hoverlabel", "description": "Properties for hoverlabel"}, {"permalink": "reference/#layout-annotations-items-annotation-arrowwidth", "name": "Layout > annotations > items > annotation > arrowwidth", "description": "Sets the width (in px) of annotation arrow line."}, {"permalink": "reference/#layout-annotations-items-annotation-captureevents", "name": "Layout > annotations > items > annotation > captureevents", "description": "Determines whether the annotation text box captures mouse move and click events, or allows those events to pass through to data points in the plot that may be behind the annotation. By default `captureevents` is *false* unless `hovertext` is provided. If you use the event `plotly_clickannotation` without `hovertext` you must explicitly enable `captureevents`."}, {"permalink": "reference/#layout-annotations-items-annotation-visible", "name": "Layout > annotations > items > annotation > visible", "description": "Determines whether or not this annotation is visible."}, {"permalink": "reference/#layout-annotations-items-annotation-yref", "name": "Layout > annotations > items > annotation > yref", "description": "Sets the annotation's y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where 0 (1) corresponds to the bottom (top)."}, {"permalink": "reference/#layout-annotations-items-annotation-align", "name": "Layout > annotations > items > annotation > align", "description": "Sets the horizontal alignment of the `text` within the box. Has an effect only if `text` spans more two or more lines (i.e. `text` contains one or more <br> HTML tags) or if an explicit width is set to override the text width."}, {"permalink": "reference/#layout-annotations-items-annotation-clicktoshow", "name": "Layout > annotations > items > annotation > clicktoshow", "description": "Makes this annotation respond to clicks on the plot. If you click a data point that exactly matches the `x` and `y` values of this annotation, and it is hidden (visible: false), it will appear. In *onoff* mode, you must click the same point again to make it disappear, so if you click multiple points, you can show multiple annotations. In *onout* mode, a click anywhere else in the plot (on another data point or not) will hide this annotation. If you need to show/hide this annotation in response to different `x` or `y` values, you can set `xclick` and/or `yclick`. This is useful for example to label the side of a bar. To label markers though, `standoff` is preferred over `xclick` and `yclick`."}, {"permalink": "reference/#layout-annotations-items-annotation-xclick", "name": "Layout > annotations > items > annotation > xclick", "description": "Toggle this annotation when clicking a data point whose `x` value is `xclick` rather than the annotation's `x` value."}, {"permalink": "reference/#layout-annotations-items-annotation-y", "name": "Layout > annotations > items > annotation > y", "description": "Sets the annotation's y position. If the axis `type` is *log*, then you must take the log of your desired range. If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-annotations-items-annotation-x", "name": "Layout > annotations > items > annotation > x", "description": "Sets the annotation's x position. If the axis `type` is *log*, then you must take the log of your desired range. If the axis `type` is *date*, it should be date strings, like date data, though Date objects and unix milliseconds will be accepted and converted to strings. If the axis `type` is *category*, it should be numbers, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-annotations-items-annotation-standoff", "name": "Layout > annotations > items > annotation > standoff", "description": "Sets a distance, in pixels, to move the arrowhead away from the position it is pointing at, for example to point at the edge of a marker independent of zoom. Note that this shortens the arrow from the `ax` / `ay` vector, in contrast to `xshift` / `yshift` which moves everything by this amount."}, {"permalink": "reference/#layout-shapes", "name": "Layout > shapes", "description": "Properties for shapes"}, {"permalink": "reference/#layout-shapes-items", "name": "Layout > shapes > items", "description": "Properties for items"}, {"permalink": "reference/#layout-shapes-items-shape", "name": "Layout > shapes > items > shape", "description": "Properties for shape"}, {"permalink": "reference/#layout-shapes-items-shape-opacity", "name": "Layout > shapes > items > shape > opacity", "description": "Sets the opacity of the shape."}, {"permalink": "reference/#layout-shapes-items-shape-layer", "name": "Layout > shapes > items > shape > layer", "description": "Specifies whether shapes are drawn below or above traces."}, {"permalink": "reference/#layout-shapes-items-shape-xref", "name": "Layout > shapes > items > shape > xref", "description": "Sets the shape's x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where *0* (*1*) corresponds to the left (right) side. If the axis `type` is *log*, then you must take the log of your desired range. If the axis `type` is *date*, then you must convert the date to unix time in milliseconds."}, {"permalink": "reference/#layout-shapes-items-shape-yref", "name": "Layout > shapes > items > shape > yref", "description": "Sets the annotation's y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where *0* (*1*) corresponds to the bottom (top)."}, {"permalink": "reference/#layout-shapes-items-shape-visible", "name": "Layout > shapes > items > shape > visible", "description": "Determines whether or not this shape is visible."}, {"permalink": "reference/#layout-shapes-items-shape-fillcolor", "name": "Layout > shapes > items > shape > fillcolor", "description": "Sets the color filling the shape's interior."}, {"permalink": "reference/#layout-shapes-items-shape-path", "name": "Layout > shapes > items > shape > path", "description": "For `type` *path* - a valid SVG path but with the pixel values replaced by data values. There are a few restrictions / quirks only absolute instructions, not relative. So the allowed segments are: M, L, H, V, Q, C, T, S, and Z arcs (A) are not allowed because radius rx and ry are relative. In the future we could consider supporting relative commands, but we would have to decide on how to handle date and log axes. Note that even as is, Q and C Bezier paths that are smooth on linear axes may not be smooth on log, and vice versa. no chained \"polybezier\" commands - specify the segment type for each one. On category axes, values are numbers scaled to the serial numbers of categories because using the categories themselves there would be no way to describe fractional positions On data axes: because space and T are both normal components of path strings, we can't use either to separate date from time parts. Therefore we'll use underscore for this purpose: 2015-02-21_13:45:56.789"}, {"permalink": "reference/#layout-shapes-items-shape-y1", "name": "Layout > shapes > items > shape > y1", "description": "Sets the shape's end y position. See `type` for more info."}, {"permalink": "reference/#layout-shapes-items-shape-y0", "name": "Layout > shapes > items > shape > y0", "description": "Sets the shape's starting y position. See `type` for more info."}, {"permalink": "reference/#layout-shapes-items-shape-x0", "name": "Layout > shapes > items > shape > x0", "description": "Sets the shape's starting x position. See `type` for more info."}, {"permalink": "reference/#layout-shapes-items-shape-x1", "name": "Layout > shapes > items > shape > x1", "description": "Sets the shape's end x position. See `type` for more info."}, {"permalink": "reference/#layout-shapes-items-shape-type", "name": "Layout > shapes > items > shape > type", "description": "Specifies the shape type to be drawn. If *line*, a line is drawn from (`x0`,`y0`) to (`x1`,`y1`) If *circle*, a circle is drawn from ((`x0`+`x1`)/2, (`y0`+`y1`)/2)) with radius (|(`x0`+`x1`)/2 - `x0`|, |(`y0`+`y1`)/2 -`y0`)|) If *rect*, a rectangle is drawn linking (`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`), (`x0`,`y1`), (`x0`,`y0`) If *path*, draw a custom SVG path using `path`."}, {"permalink": "reference/#layout-shapes-items-shape-line", "name": "Layout > shapes > items > shape > line", "description": "Properties for line"}, {"permalink": "reference/#layout-sliders", "name": "Layout > sliders", "description": "Properties for sliders"}, {"permalink": "reference/#layout-sliders-items", "name": "Layout > sliders > items", "description": "Properties for items"}, {"permalink": "reference/#layout-sliders-items-slider", "name": "Layout > sliders > items > slider", "description": "Properties for slider"}, {"permalink": "reference/#layout-sliders-items-slider-yanchor", "name": "Layout > sliders > items > slider > yanchor", "description": "Sets the slider's vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the range selector."}, {"permalink": "reference/#layout-sliders-items-slider-lenmode", "name": "Layout > sliders > items > slider > lenmode", "description": "Determines whether this slider length is set in units of plot *fraction* or in *pixels. Use `len` to set the value."}, {"permalink": "reference/#layout-sliders-items-slider-visible", "name": "Layout > sliders > items > slider > visible", "description": "Determines whether or not the slider is visible."}, {"permalink": "reference/#layout-sliders-items-slider-borderwidth", "name": "Layout > sliders > items > slider > borderwidth", "description": "Sets the width (in px) of the border enclosing the slider."}, {"permalink": "reference/#layout-sliders-items-slider-font", "name": "Layout > sliders > items > slider > font", "description": "Sets the font of the slider step labels."}, {"permalink": "reference/#layout-sliders-items-slider-bgcolor", "name": "Layout > sliders > items > slider > bgcolor", "description": "Sets the background color of the slider."}, {"permalink": "reference/#layout-sliders-items-slider-pad", "name": "Layout > sliders > items > slider > pad", "description": "Set the padding of the slider component along each side."}, {"permalink": "reference/#layout-sliders-items-slider-minorticklen", "name": "Layout > sliders > items > slider > minorticklen", "description": "Sets the length in pixels of minor step tick marks"}, {"permalink": "reference/#layout-sliders-items-slider-bordercolor", "name": "Layout > sliders > items > slider > bordercolor", "description": "Sets the color of the border enclosing the slider."}, {"permalink": "reference/#layout-sliders-items-slider-xanchor", "name": "Layout > sliders > items > slider > xanchor", "description": "Sets the slider's horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the range selector."}, {"permalink": "reference/#layout-sliders-items-slider-ticklen", "name": "Layout > sliders > items > slider > ticklen", "description": "Sets the length in pixels of step tick marks"}, {"permalink": "reference/#layout-sliders-items-slider-len", "name": "Layout > sliders > items > slider > len", "description": "Sets the length of the slider This measure excludes the padding of both ends. That is, the slider's length is this length minus the padding on both ends."}, {"permalink": "reference/#layout-sliders-items-slider-x", "name": "Layout > sliders > items > slider > x", "description": "Sets the x position (in normalized coordinates) of the slider."}, {"permalink": "reference/#layout-sliders-items-slider-active", "name": "Layout > sliders > items > slider > active", "description": "Determines which button (by index starting from 0) is considered active."}, {"permalink": "reference/#layout-sliders-items-slider-currentvalue", "name": "Layout > sliders > items > slider > currentvalue", "description": "Properties for currentvalue"}, {"permalink": "reference/#layout-sliders-items-slider-tickwidth", "name": "Layout > sliders > items > slider > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-sliders-items-slider-transition", "name": "Layout > sliders > items > slider > transition", "description": "Properties for transition"}, {"permalink": "reference/#layout-sliders-items-slider-activebgcolor", "name": "Layout > sliders > items > slider > activebgcolor", "description": "Sets the background color of the slider grip while dragging."}, {"permalink": "reference/#layout-sliders-items-slider-steps", "name": "Layout > sliders > items > slider > steps", "description": "Properties for steps"}, {"permalink": "reference/#layout-sliders-items-slider-y", "name": "Layout > sliders > items > slider > y", "description": "Sets the y position (in normalized coordinates) of the slider."}, {"permalink": "reference/#layout-sliders-items-slider-tickcolor", "name": "Layout > sliders > items > slider > tickcolor", "description": "Sets the color of the border enclosing the slider."}, {"permalink": "reference/#layout-ternary", "name": "Layout > ternary", "description": "Properties for ternary"}, {"permalink": "reference/#layout-ternary-domain", "name": "Layout > ternary > domain", "description": "Properties for domain"}, {"permalink": "reference/#layout-ternary-domain-y", "name": "Layout > ternary > domain > y", "description": "Sets the vertical domain of this subplot (in plot fraction)."}, {"permalink": "reference/#layout-ternary-domain-x", "name": "Layout > ternary > domain > x", "description": "Sets the horizontal domain of this subplot (in plot fraction)."}, {"permalink": "reference/#layout-ternary-sum", "name": "Layout > ternary > sum", "description": "The number each triplet should sum to, and the maximum range of each axis"}, {"permalink": "reference/#layout-ternary-caxis", "name": "Layout > ternary > caxis", "description": "Properties for caxis"}, {"permalink": "reference/#layout-ternary-caxis-showexponent", "name": "Layout > ternary > caxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-ternary-caxis-showticklabels", "name": "Layout > ternary > caxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-ternary-caxis-color", "name": "Layout > ternary > caxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-ternary-caxis-showticksuffix", "name": "Layout > ternary > caxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-ternary-caxis-titlefont", "name": "Layout > ternary > caxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-ternary-caxis-titlefont-family", "name": "Layout > ternary > caxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-ternary-caxis-titlefont-color", "name": "Layout > ternary > caxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-ternary-caxis-titlefont-size", "name": "Layout > ternary > caxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-ternary-caxis-linecolor", "name": "Layout > ternary > caxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-ternary-caxis-showtickprefix", "name": "Layout > ternary > caxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-ternary-caxis-linewidth", "name": "Layout > ternary > caxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-ternary-caxis-nticks", "name": "Layout > ternary > caxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-ternary-caxis-tickprefix", "name": "Layout > ternary > caxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-ternary-caxis-tickformat", "name": "Layout > ternary > caxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-ternary-caxis-tickmode", "name": "Layout > ternary > caxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-ternary-caxis-title", "name": "Layout > ternary > caxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-ternary-caxis-ticks", "name": "Layout > ternary > caxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-ternary-caxis-layer", "name": "Layout > ternary > caxis > layer", "description": "Sets the layer on which this axis is displayed. If *above traces*, this axis is displayed above all the subplot's traces If *below traces*, this axis is displayed below all the subplot's traces, but above the grid lines. Useful when used together with scatter-like traces with `cliponaxis` set to *false* to show markers and/or text nodes above this axis."}, {"permalink": "reference/#layout-ternary-caxis-showgrid", "name": "Layout > ternary > caxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-ternary-caxis-gridcolor", "name": "Layout > ternary > caxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-ternary-caxis-separatethousands", "name": "Layout > ternary > caxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-ternary-caxis-ticklen", "name": "Layout > ternary > caxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-ternary-caxis-hoverformat", "name": "Layout > ternary > caxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-ternary-caxis-ticksuffix", "name": "Layout > ternary > caxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-ternary-caxis-showline", "name": "Layout > ternary > caxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-ternary-caxis-ticktext", "name": "Layout > ternary > caxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-ternary-caxis-tickvals", "name": "Layout > ternary > caxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-ternary-caxis-tickfont", "name": "Layout > ternary > caxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-ternary-caxis-tickfont-family", "name": "Layout > ternary > caxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-ternary-caxis-tickfont-color", "name": "Layout > ternary > caxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-ternary-caxis-tickfont-size", "name": "Layout > ternary > caxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-ternary-caxis-tickwidth", "name": "Layout > ternary > caxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-ternary-caxis-tick0", "name": "Layout > ternary > caxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-ternary-caxis-tickangle", "name": "Layout > ternary > caxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-ternary-caxis-min", "name": "Layout > ternary > caxis > min", "description": "The minimum value visible on this axis. The maximum is determined by the sum minus the minimum values of the other two axes. The full view corresponds to all the minima set to zero."}, {"permalink": "reference/#layout-ternary-caxis-gridwidth", "name": "Layout > ternary > caxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-ternary-caxis-dtick", "name": "Layout > ternary > caxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-ternary-caxis-tickcolor", "name": "Layout > ternary > caxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-ternary-caxis-exponentformat", "name": "Layout > ternary > caxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-ternary-aaxis", "name": "Layout > ternary > aaxis", "description": "Properties for aaxis"}, {"permalink": "reference/#layout-ternary-aaxis-showexponent", "name": "Layout > ternary > aaxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-ternary-aaxis-showticklabels", "name": "Layout > ternary > aaxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-ternary-aaxis-color", "name": "Layout > ternary > aaxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-ternary-aaxis-showticksuffix", "name": "Layout > ternary > aaxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-ternary-aaxis-titlefont", "name": "Layout > ternary > aaxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-ternary-aaxis-titlefont-family", "name": "Layout > ternary > aaxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-ternary-aaxis-titlefont-color", "name": "Layout > ternary > aaxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-ternary-aaxis-titlefont-size", "name": "Layout > ternary > aaxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-ternary-aaxis-linecolor", "name": "Layout > ternary > aaxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-ternary-aaxis-showtickprefix", "name": "Layout > ternary > aaxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-ternary-aaxis-linewidth", "name": "Layout > ternary > aaxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-ternary-aaxis-nticks", "name": "Layout > ternary > aaxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-ternary-aaxis-tickprefix", "name": "Layout > ternary > aaxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-ternary-aaxis-tickformat", "name": "Layout > ternary > aaxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-ternary-aaxis-tickmode", "name": "Layout > ternary > aaxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-ternary-aaxis-title", "name": "Layout > ternary > aaxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-ternary-aaxis-ticks", "name": "Layout > ternary > aaxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-ternary-aaxis-layer", "name": "Layout > ternary > aaxis > layer", "description": "Sets the layer on which this axis is displayed. If *above traces*, this axis is displayed above all the subplot's traces If *below traces*, this axis is displayed below all the subplot's traces, but above the grid lines. Useful when used together with scatter-like traces with `cliponaxis` set to *false* to show markers and/or text nodes above this axis."}, {"permalink": "reference/#layout-ternary-aaxis-showgrid", "name": "Layout > ternary > aaxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-ternary-aaxis-gridcolor", "name": "Layout > ternary > aaxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-ternary-aaxis-separatethousands", "name": "Layout > ternary > aaxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-ternary-aaxis-ticklen", "name": "Layout > ternary > aaxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-ternary-aaxis-hoverformat", "name": "Layout > ternary > aaxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-ternary-aaxis-ticksuffix", "name": "Layout > ternary > aaxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-ternary-aaxis-showline", "name": "Layout > ternary > aaxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-ternary-aaxis-ticktext", "name": "Layout > ternary > aaxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-ternary-aaxis-tickvals", "name": "Layout > ternary > aaxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-ternary-aaxis-tickfont", "name": "Layout > ternary > aaxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-ternary-aaxis-tickfont-family", "name": "Layout > ternary > aaxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-ternary-aaxis-tickfont-color", "name": "Layout > ternary > aaxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-ternary-aaxis-tickfont-size", "name": "Layout > ternary > aaxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-ternary-aaxis-tickwidth", "name": "Layout > ternary > aaxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-ternary-aaxis-tick0", "name": "Layout > ternary > aaxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-ternary-aaxis-tickangle", "name": "Layout > ternary > aaxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-ternary-aaxis-min", "name": "Layout > ternary > aaxis > min", "description": "The minimum value visible on this axis. The maximum is determined by the sum minus the minimum values of the other two axes. The full view corresponds to all the minima set to zero."}, {"permalink": "reference/#layout-ternary-aaxis-gridwidth", "name": "Layout > ternary > aaxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-ternary-aaxis-dtick", "name": "Layout > ternary > aaxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-ternary-aaxis-tickcolor", "name": "Layout > ternary > aaxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-ternary-aaxis-exponentformat", "name": "Layout > ternary > aaxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-ternary-bgcolor", "name": "Layout > ternary > bgcolor", "description": "Set the background color of the subplot"}, {"permalink": "reference/#layout-ternary-baxis", "name": "Layout > ternary > baxis", "description": "Properties for baxis"}, {"permalink": "reference/#layout-ternary-baxis-showexponent", "name": "Layout > ternary > baxis > showexponent", "description": "If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear."}, {"permalink": "reference/#layout-ternary-baxis-showticklabels", "name": "Layout > ternary > baxis > showticklabels", "description": "Determines whether or not the tick labels are drawn."}, {"permalink": "reference/#layout-ternary-baxis-color", "name": "Layout > ternary > baxis > color", "description": "Sets default for all colors associated with this axis all at once: line, font, tick, and grid colors. Grid color is lightened by blending this with the plot background Individual pieces can override this."}, {"permalink": "reference/#layout-ternary-baxis-showticksuffix", "name": "Layout > ternary > baxis > showticksuffix", "description": "Same as `showtickprefix` but for tick suffixes."}, {"permalink": "reference/#layout-ternary-baxis-titlefont", "name": "Layout > ternary > baxis > titlefont", "description": "Sets this axis' title font."}, {"permalink": "reference/#layout-ternary-baxis-titlefont-family", "name": "Layout > ternary > baxis > titlefont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-ternary-baxis-titlefont-color", "name": "Layout > ternary > baxis > titlefont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-ternary-baxis-titlefont-size", "name": "Layout > ternary > baxis > titlefont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-ternary-baxis-linecolor", "name": "Layout > ternary > baxis > linecolor", "description": "Sets the axis line color."}, {"permalink": "reference/#layout-ternary-baxis-showtickprefix", "name": "Layout > ternary > baxis > showtickprefix", "description": "If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden."}, {"permalink": "reference/#layout-ternary-baxis-linewidth", "name": "Layout > ternary > baxis > linewidth", "description": "Sets the width (in px) of the axis line."}, {"permalink": "reference/#layout-ternary-baxis-nticks", "name": "Layout > ternary > baxis > nticks", "description": "Specifies the maximum number of ticks for the particular axis. The actual number of ticks will be chosen automatically to be less than or equal to `nticks`. Has an effect only if `tickmode` is set to *auto*."}, {"permalink": "reference/#layout-ternary-baxis-tickprefix", "name": "Layout > ternary > baxis > tickprefix", "description": "Sets a tick label prefix."}, {"permalink": "reference/#layout-ternary-baxis-tickformat", "name": "Layout > ternary > baxis > tickformat", "description": "Sets the tick label formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-ternary-baxis-tickmode", "name": "Layout > ternary > baxis > tickmode", "description": "Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided)."}, {"permalink": "reference/#layout-ternary-baxis-title", "name": "Layout > ternary > baxis > title", "description": "Sets the title of this axis."}, {"permalink": "reference/#layout-ternary-baxis-ticks", "name": "Layout > ternary > baxis > ticks", "description": "Determines whether ticks are drawn or not. If **, this axis' ticks are not drawn. If *outside* (*inside*), this axis' are drawn outside (inside) the axis lines."}, {"permalink": "reference/#layout-ternary-baxis-layer", "name": "Layout > ternary > baxis > layer", "description": "Sets the layer on which this axis is displayed. If *above traces*, this axis is displayed above all the subplot's traces If *below traces*, this axis is displayed below all the subplot's traces, but above the grid lines. Useful when used together with scatter-like traces with `cliponaxis` set to *false* to show markers and/or text nodes above this axis."}, {"permalink": "reference/#layout-ternary-baxis-showgrid", "name": "Layout > ternary > baxis > showgrid", "description": "Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark."}, {"permalink": "reference/#layout-ternary-baxis-gridcolor", "name": "Layout > ternary > baxis > gridcolor", "description": "Sets the color of the grid lines."}, {"permalink": "reference/#layout-ternary-baxis-separatethousands", "name": "Layout > ternary > baxis > separatethousands", "description": "If \"true\", even 4-digit integers are separated"}, {"permalink": "reference/#layout-ternary-baxis-ticklen", "name": "Layout > ternary > baxis > ticklen", "description": "Sets the tick length (in px)."}, {"permalink": "reference/#layout-ternary-baxis-hoverformat", "name": "Layout > ternary > baxis > hoverformat", "description": "Sets the hover text formatting rule using d3 formatting mini-languages which are very similar to those in Python. For numbers, see: https://github.com/d3/d3-format/blob/master/README.md#locale_format And for dates see: https://github.com/d3/d3-time-format/blob/master/README.md#locale_format We add one item to d3's date formatter: *%{n}f* for fractional seconds with n digits. For example, *2016-10-13 09:15:23.456* with tickformat *%H~%M~%S.%2f* would display *09~15~23.46*"}, {"permalink": "reference/#layout-ternary-baxis-ticksuffix", "name": "Layout > ternary > baxis > ticksuffix", "description": "Sets a tick label suffix."}, {"permalink": "reference/#layout-ternary-baxis-showline", "name": "Layout > ternary > baxis > showline", "description": "Determines whether or not a line bounding this axis is drawn."}, {"permalink": "reference/#layout-ternary-baxis-ticktext", "name": "Layout > ternary > baxis > ticktext", "description": "Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `tickvals`."}, {"permalink": "reference/#layout-ternary-baxis-tickvals", "name": "Layout > ternary > baxis > tickvals", "description": "Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`."}, {"permalink": "reference/#layout-ternary-baxis-tickfont", "name": "Layout > ternary > baxis > tickfont", "description": "Sets the tick font."}, {"permalink": "reference/#layout-ternary-baxis-tickfont-family", "name": "Layout > ternary > baxis > tickfont > family", "description": "HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren't available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*."}, {"permalink": "reference/#layout-ternary-baxis-tickfont-color", "name": "Layout > ternary > baxis > tickfont > color", "description": "Properties for color"}, {"permalink": "reference/#layout-ternary-baxis-tickfont-size", "name": "Layout > ternary > baxis > tickfont > size", "description": "Properties for size"}, {"permalink": "reference/#layout-ternary-baxis-tickwidth", "name": "Layout > ternary > baxis > tickwidth", "description": "Sets the tick width (in px)."}, {"permalink": "reference/#layout-ternary-baxis-tick0", "name": "Layout > ternary > baxis > tick0", "description": "Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2) except when `dtick`=*L<f>* (see `dtick` for more info). If the axis `type` is *date*, it should be a date string, like date data. If the axis `type` is *category*, it should be a number, using the scale where each category is assigned a serial number from zero in the order it appears."}, {"permalink": "reference/#layout-ternary-baxis-tickangle", "name": "Layout > ternary > baxis > tickangle", "description": "Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically."}, {"permalink": "reference/#layout-ternary-baxis-min", "name": "Layout > ternary > baxis > min", "description": "The minimum value visible on this axis. The maximum is determined by the sum minus the minimum values of the other two axes. The full view corresponds to all the minima set to zero."}, {"permalink": "reference/#layout-ternary-baxis-gridwidth", "name": "Layout > ternary > baxis > gridwidth", "description": "Sets the width (in px) of the grid lines."}, {"permalink": "reference/#layout-ternary-baxis-dtick", "name": "Layout > ternary > baxis > dtick", "description": "Sets the step in-between ticks on this axis. Use with `tick0`. Must be a positive number, or special strings available to *log* and *date* axes. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. *log* has several special values; *L<f>*, where `f` is a positive number, gives ticks linearly spaced in value (but not position). For example `tick0` = 0.1, `dtick` = *L0.5* will put ticks at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus small digits between, use *D1* (all digits) or *D2* (only 2 and 5). `tick0` is ignored for *D1* and *D2*. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0. *date* also has special values *M<n>* gives ticks spaced by a number of months. `n` must be a positive integer. To set ticks on the 15th of every third month, set `tick0` to *2000-01-15* and `dtick` to *M3*. To set ticks every 4 years, set `dtick` to *M48*"}, {"permalink": "reference/#layout-ternary-baxis-tickcolor", "name": "Layout > ternary > baxis > tickcolor", "description": "Sets the tick color."}, {"permalink": "reference/#layout-ternary-baxis-exponentformat", "name": "Layout > ternary > baxis > exponentformat", "description": "Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B."}, {"permalink": "reference/#layout-margin", "name": "Layout > margin", "description": "Properties for margin"}, {"permalink": "reference/#layout-margin-b", "name": "Layout > margin > b", "description": "Sets the bottom margin (in px)."}, {"permalink": "reference/#layout-margin-l", "name": "Layout > margin > l", "description": "Sets the left margin (in px)."}, {"permalink": "reference/#layout-margin-r", "name": "Layout > margin > r", "description": "Sets the right margin (in px)."}, {"permalink": "reference/#layout-margin-pad", "name": "Layout > margin > pad", "description": "Sets the amount of padding (in px) between the plotting area and the axis lines"}, {"permalink": "reference/#layout-margin-t", "name": "Layout > margin > t", "description": "Sets the top margin (in px)."}, {"permalink": "reference/#layout-margin-autoexpand", "name": "Layout > margin > autoexpand", "description": "Properties for autoexpand"}]